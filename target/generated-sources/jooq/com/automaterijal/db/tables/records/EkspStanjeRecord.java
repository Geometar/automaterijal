/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables.records;


import com.automaterijal.db.tables.EkspStanje;

import java.math.BigDecimal;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EkspStanjeRecord extends UpdatableRecordImpl<EkspStanjeRecord> implements Record3<Integer, Integer, BigDecimal> {

    private static final long serialVersionUID = -1335637231;

    /**
     * Setter for <code>automate_orders.eksp_stanje.ekspid</code>.
     */
    public void setEkspid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>automate_orders.eksp_stanje.ekspid</code>.
     */
    public Integer getEkspid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>automate_orders.eksp_stanje.robaid</code>.
     */
    public void setRobaid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>automate_orders.eksp_stanje.robaid</code>.
     */
    public Integer getRobaid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>automate_orders.eksp_stanje.stanje</code>.
     */
    public void setStanje(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>automate_orders.eksp_stanje.stanje</code>.
     */
    public BigDecimal getStanje() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return EkspStanje.EKSP_STANJE.EKSPID;
    }

    @Override
    public Field<Integer> field2() {
        return EkspStanje.EKSP_STANJE.ROBAID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return EkspStanje.EKSP_STANJE.STANJE;
    }

    @Override
    public Integer component1() {
        return getEkspid();
    }

    @Override
    public Integer component2() {
        return getRobaid();
    }

    @Override
    public BigDecimal component3() {
        return getStanje();
    }

    @Override
    public Integer value1() {
        return getEkspid();
    }

    @Override
    public Integer value2() {
        return getRobaid();
    }

    @Override
    public BigDecimal value3() {
        return getStanje();
    }

    @Override
    public EkspStanjeRecord value1(Integer value) {
        setEkspid(value);
        return this;
    }

    @Override
    public EkspStanjeRecord value2(Integer value) {
        setRobaid(value);
        return this;
    }

    @Override
    public EkspStanjeRecord value3(BigDecimal value) {
        setStanje(value);
        return this;
    }

    @Override
    public EkspStanjeRecord values(Integer value1, Integer value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EkspStanjeRecord
     */
    public EkspStanjeRecord() {
        super(EkspStanje.EKSP_STANJE);
    }

    /**
     * Create a detached, initialised EkspStanjeRecord
     */
    public EkspStanjeRecord(Integer ekspid, Integer robaid, BigDecimal stanje) {
        super(EkspStanje.EKSP_STANJE);

        set(0, ekspid);
        set(1, robaid);
        set(2, stanje);
    }
}
