/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables.records;


import com.automaterijal.db.tables.TdProizvodjaci;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TdProizvodjaciRecord extends UpdatableRecordImpl<TdProizvodjaciRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 617482011;

    /**
     * Setter for <code>automate_orders.td_proizvodjaci.proizvodjacid</code>.
     */
    public void setProizvodjacid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>automate_orders.td_proizvodjaci.proizvodjacid</code>.
     */
    public Integer getProizvodjacid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>automate_orders.td_proizvodjaci.proizvodjacnaziv</code>.
     */
    public void setProizvodjacnaziv(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>automate_orders.td_proizvodjaci.proizvodjacnaziv</code>.
     */
    public String getProizvodjacnaziv() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TdProizvodjaci.TD_PROIZVODJACI.PROIZVODJACID;
    }

    @Override
    public Field<String> field2() {
        return TdProizvodjaci.TD_PROIZVODJACI.PROIZVODJACNAZIV;
    }

    @Override
    public Integer component1() {
        return getProizvodjacid();
    }

    @Override
    public String component2() {
        return getProizvodjacnaziv();
    }

    @Override
    public Integer value1() {
        return getProizvodjacid();
    }

    @Override
    public String value2() {
        return getProizvodjacnaziv();
    }

    @Override
    public TdProizvodjaciRecord value1(Integer value) {
        setProizvodjacid(value);
        return this;
    }

    @Override
    public TdProizvodjaciRecord value2(String value) {
        setProizvodjacnaziv(value);
        return this;
    }

    @Override
    public TdProizvodjaciRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TdProizvodjaciRecord
     */
    public TdProizvodjaciRecord() {
        super(TdProizvodjaci.TD_PROIZVODJACI);
    }

    /**
     * Create a detached, initialised TdProizvodjaciRecord
     */
    public TdProizvodjaciRecord(Integer proizvodjacid, String proizvodjacnaziv) {
        super(TdProizvodjaci.TD_PROIZVODJACI);

        set(0, proizvodjacid);
        set(1, proizvodjacnaziv);
    }
}
