/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables.records;


import com.automaterijal.db.tables.Admins;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminsRecord extends UpdatableRecordImpl<AdminsRecord> implements Record3<String, String, Timestamp> {

    private static final long serialVersionUID = -1117761376;

    /**
     * Setter for <code>automate_orders.admins.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>automate_orders.admins.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>automate_orders.admins.password</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>automate_orders.admins.password</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>automate_orders.admins.last_login</code>.
     */
    public void setLastLogin(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>automate_orders.admins.last_login</code>.
     */
    public Timestamp getLastLogin() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Admins.ADMINS.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Admins.ADMINS.PASSWORD;
    }

    @Override
    public Field<Timestamp> field3() {
        return Admins.ADMINS.LAST_LOGIN;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public Timestamp component3() {
        return getLastLogin();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public Timestamp value3() {
        return getLastLogin();
    }

    @Override
    public AdminsRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public AdminsRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AdminsRecord value3(Timestamp value) {
        setLastLogin(value);
        return this;
    }

    @Override
    public AdminsRecord values(String value1, String value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminsRecord
     */
    public AdminsRecord() {
        super(Admins.ADMINS);
    }

    /**
     * Create a detached, initialised AdminsRecord
     */
    public AdminsRecord(String username, String password, Timestamp lastLogin) {
        super(Admins.ADMINS);

        set(0, username);
        set(1, password);
        set(2, lastLogin);
    }
}
