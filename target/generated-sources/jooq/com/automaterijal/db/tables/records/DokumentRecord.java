/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables.records;


import com.automaterijal.db.tables.Dokument;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DokumentRecord extends UpdatableRecordImpl<DokumentRecord> implements Record9<Short, Integer, Integer, Date, Date, BigDecimal, BigDecimal, BigDecimal, String> {

    private static final long serialVersionUID = -386493649;

    /**
     * Setter for <code>automate_orders.dokument.vrdok</code>.
     */
    public void setVrdok(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.vrdok</code>.
     */
    public Short getVrdok() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>automate_orders.dokument.brdok</code>.
     */
    public void setBrdok(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.brdok</code>.
     */
    public Integer getBrdok() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>automate_orders.dokument.ppid</code>.
     */
    public void setPpid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.ppid</code>.
     */
    public Integer getPpid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>automate_orders.dokument.datum</code>.
     */
    public void setDatum(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.datum</code>.
     */
    public Date getDatum() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>automate_orders.dokument.datroka</code>.
     */
    public void setDatroka(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.datroka</code>.
     */
    public Date getDatroka() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>automate_orders.dokument.ulaz</code>.
     */
    public void setUlaz(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.ulaz</code>.
     */
    public BigDecimal getUlaz() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>automate_orders.dokument.izlaz</code>.
     */
    public void setIzlaz(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.izlaz</code>.
     */
    public BigDecimal getIzlaz() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>automate_orders.dokument.stanje</code>.
     */
    public void setStanje(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.stanje</code>.
     */
    public BigDecimal getStanje() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>automate_orders.dokument.opis</code>.
     */
    public void setOpis(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>automate_orders.dokument.opis</code>.
     */
    public String getOpis() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Short, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Short, Integer, Integer, Date, Date, BigDecimal, BigDecimal, BigDecimal, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Short, Integer, Integer, Date, Date, BigDecimal, BigDecimal, BigDecimal, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return Dokument.DOKUMENT.VRDOK;
    }

    @Override
    public Field<Integer> field2() {
        return Dokument.DOKUMENT.BRDOK;
    }

    @Override
    public Field<Integer> field3() {
        return Dokument.DOKUMENT.PPID;
    }

    @Override
    public Field<Date> field4() {
        return Dokument.DOKUMENT.DATUM;
    }

    @Override
    public Field<Date> field5() {
        return Dokument.DOKUMENT.DATROKA;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Dokument.DOKUMENT.ULAZ;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Dokument.DOKUMENT.IZLAZ;
    }

    @Override
    public Field<BigDecimal> field8() {
        return Dokument.DOKUMENT.STANJE;
    }

    @Override
    public Field<String> field9() {
        return Dokument.DOKUMENT.OPIS;
    }

    @Override
    public Short component1() {
        return getVrdok();
    }

    @Override
    public Integer component2() {
        return getBrdok();
    }

    @Override
    public Integer component3() {
        return getPpid();
    }

    @Override
    public Date component4() {
        return getDatum();
    }

    @Override
    public Date component5() {
        return getDatroka();
    }

    @Override
    public BigDecimal component6() {
        return getUlaz();
    }

    @Override
    public BigDecimal component7() {
        return getIzlaz();
    }

    @Override
    public BigDecimal component8() {
        return getStanje();
    }

    @Override
    public String component9() {
        return getOpis();
    }

    @Override
    public Short value1() {
        return getVrdok();
    }

    @Override
    public Integer value2() {
        return getBrdok();
    }

    @Override
    public Integer value3() {
        return getPpid();
    }

    @Override
    public Date value4() {
        return getDatum();
    }

    @Override
    public Date value5() {
        return getDatroka();
    }

    @Override
    public BigDecimal value6() {
        return getUlaz();
    }

    @Override
    public BigDecimal value7() {
        return getIzlaz();
    }

    @Override
    public BigDecimal value8() {
        return getStanje();
    }

    @Override
    public String value9() {
        return getOpis();
    }

    @Override
    public DokumentRecord value1(Short value) {
        setVrdok(value);
        return this;
    }

    @Override
    public DokumentRecord value2(Integer value) {
        setBrdok(value);
        return this;
    }

    @Override
    public DokumentRecord value3(Integer value) {
        setPpid(value);
        return this;
    }

    @Override
    public DokumentRecord value4(Date value) {
        setDatum(value);
        return this;
    }

    @Override
    public DokumentRecord value5(Date value) {
        setDatroka(value);
        return this;
    }

    @Override
    public DokumentRecord value6(BigDecimal value) {
        setUlaz(value);
        return this;
    }

    @Override
    public DokumentRecord value7(BigDecimal value) {
        setIzlaz(value);
        return this;
    }

    @Override
    public DokumentRecord value8(BigDecimal value) {
        setStanje(value);
        return this;
    }

    @Override
    public DokumentRecord value9(String value) {
        setOpis(value);
        return this;
    }

    @Override
    public DokumentRecord values(Short value1, Integer value2, Integer value3, Date value4, Date value5, BigDecimal value6, BigDecimal value7, BigDecimal value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DokumentRecord
     */
    public DokumentRecord() {
        super(Dokument.DOKUMENT);
    }

    /**
     * Create a detached, initialised DokumentRecord
     */
    public DokumentRecord(Short vrdok, Integer brdok, Integer ppid, Date datum, Date datroka, BigDecimal ulaz, BigDecimal izlaz, BigDecimal stanje, String opis) {
        super(Dokument.DOKUMENT);

        set(0, vrdok);
        set(1, brdok);
        set(2, ppid);
        set(3, datum);
        set(4, datroka);
        set(5, ulaz);
        set(6, izlaz);
        set(7, stanje);
        set(8, opis);
    }
}
