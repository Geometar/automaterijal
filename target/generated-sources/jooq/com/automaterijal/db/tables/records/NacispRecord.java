/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables.records;


import com.automaterijal.db.tables.Nacisp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NacispRecord extends UpdatableRecordImpl<NacispRecord> implements Record2<Short, String> {

    private static final long serialVersionUID = 1092590953;

    /**
     * Setter for <code>automate_orders.nacisp.niid</code>.
     */
    public void setNiid(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>automate_orders.nacisp.niid</code>.
     */
    public Short getNiid() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>automate_orders.nacisp.naziv</code>.
     */
    public void setNaziv(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>automate_orders.nacisp.naziv</code>.
     */
    public String getNaziv() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Short, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Short, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return Nacisp.NACISP.NIID;
    }

    @Override
    public Field<String> field2() {
        return Nacisp.NACISP.NAZIV;
    }

    @Override
    public Short component1() {
        return getNiid();
    }

    @Override
    public String component2() {
        return getNaziv();
    }

    @Override
    public Short value1() {
        return getNiid();
    }

    @Override
    public String value2() {
        return getNaziv();
    }

    @Override
    public NacispRecord value1(Short value) {
        setNiid(value);
        return this;
    }

    @Override
    public NacispRecord value2(String value) {
        setNaziv(value);
        return this;
    }

    @Override
    public NacispRecord values(Short value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NacispRecord
     */
    public NacispRecord() {
        super(Nacisp.NACISP);
    }

    /**
     * Create a detached, initialised NacispRecord
     */
    public NacispRecord(Short niid, String naziv) {
        super(Nacisp.NACISP);

        set(0, niid);
        set(1, naziv);
    }
}
