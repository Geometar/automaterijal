/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables.records;


import com.automaterijal.db.tables.RobaGk;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RobaGkRecord extends UpdatableRecordImpl<RobaGkRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 492849455;

    /**
     * Setter for <code>automate_orders.roba_gk.robaid</code>.
     */
    public void setRobaid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>automate_orders.roba_gk.robaid</code>.
     */
    public Integer getRobaid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>automate_orders.roba_gk.gkid</code>.
     */
    public void setGkid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>automate_orders.roba_gk.gkid</code>.
     */
    public String getGkid() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RobaGk.ROBA_GK.ROBAID;
    }

    @Override
    public Field<String> field2() {
        return RobaGk.ROBA_GK.GKID;
    }

    @Override
    public Integer component1() {
        return getRobaid();
    }

    @Override
    public String component2() {
        return getGkid();
    }

    @Override
    public Integer value1() {
        return getRobaid();
    }

    @Override
    public String value2() {
        return getGkid();
    }

    @Override
    public RobaGkRecord value1(Integer value) {
        setRobaid(value);
        return this;
    }

    @Override
    public RobaGkRecord value2(String value) {
        setGkid(value);
        return this;
    }

    @Override
    public RobaGkRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RobaGkRecord
     */
    public RobaGkRecord() {
        super(RobaGk.ROBA_GK);
    }

    /**
     * Create a detached, initialised RobaGkRecord
     */
    public RobaGkRecord(Integer robaid, String gkid) {
        super(RobaGk.ROBA_GK);

        set(0, robaid);
        set(1, gkid);
    }
}
