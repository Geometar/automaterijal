/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables.records;


import com.automaterijal.db.tables.Users;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record12<Integer, String, Integer, Integer, Integer, Integer, Timestamp, Short, Integer, Short, Short, String> {

    private static final long serialVersionUID = -529478643;

    /**
     * Setter for <code>automate_orders.users.ppid</code>.
     */
    public void setPpid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>automate_orders.users.ppid</code>.
     */
    public Integer getPpid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>automate_orders.users.password</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>automate_orders.users.password</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>automate_orders.users.order_count</code>.
     */
    public void setOrderCount(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>automate_orders.users.order_count</code>.
     */
    public Integer getOrderCount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>automate_orders.users.accepted_orders</code>.
     */
    public void setAcceptedOrders(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>automate_orders.users.accepted_orders</code>.
     */
    public Integer getAcceptedOrders() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>automate_orders.users.cancelled_orders</code>.
     */
    public void setCancelledOrders(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>automate_orders.users.cancelled_orders</code>.
     */
    public Integer getCancelledOrders() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>automate_orders.users.login_count</code>.
     */
    public void setLoginCount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>automate_orders.users.login_count</code>.
     */
    public Integer getLoginCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>automate_orders.users.last_login</code>.
     */
    public void setLastLogin(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>automate_orders.users.last_login</code>.
     */
    public Timestamp getLastLogin() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>automate_orders.users.active</code>.
     */
    public void setActive(Short value) {
        set(7, value);
    }

    /**
     * Getter for <code>automate_orders.users.active</code>.
     */
    public Short getActive() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>automate_orders.users.user_status</code>.
     */
    public void setUserStatus(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>automate_orders.users.user_status</code>.
     */
    public Integer getUserStatus() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>automate_orders.users.srch_type</code>.
     */
    public void setSrchType(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>automate_orders.users.srch_type</code>.
     */
    public Short getSrchType() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>automate_orders.users.gen_srch</code>.
     */
    public void setGenSrch(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>automate_orders.users.gen_srch</code>.
     */
    public Short getGenSrch() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>automate_orders.users.srch_val</code>.
     */
    public void setSrchVal(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>automate_orders.users.srch_val</code>.
     */
    public String getSrchVal() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, Integer, Integer, Integer, Integer, Timestamp, Short, Integer, Short, Short, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, String, Integer, Integer, Integer, Integer, Timestamp, Short, Integer, Short, Short, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Users.USERS.PPID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<Integer> field3() {
        return Users.USERS.ORDER_COUNT;
    }

    @Override
    public Field<Integer> field4() {
        return Users.USERS.ACCEPTED_ORDERS;
    }

    @Override
    public Field<Integer> field5() {
        return Users.USERS.CANCELLED_ORDERS;
    }

    @Override
    public Field<Integer> field6() {
        return Users.USERS.LOGIN_COUNT;
    }

    @Override
    public Field<Timestamp> field7() {
        return Users.USERS.LAST_LOGIN;
    }

    @Override
    public Field<Short> field8() {
        return Users.USERS.ACTIVE;
    }

    @Override
    public Field<Integer> field9() {
        return Users.USERS.USER_STATUS;
    }

    @Override
    public Field<Short> field10() {
        return Users.USERS.SRCH_TYPE;
    }

    @Override
    public Field<Short> field11() {
        return Users.USERS.GEN_SRCH;
    }

    @Override
    public Field<String> field12() {
        return Users.USERS.SRCH_VAL;
    }

    @Override
    public Integer component1() {
        return getPpid();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public Integer component3() {
        return getOrderCount();
    }

    @Override
    public Integer component4() {
        return getAcceptedOrders();
    }

    @Override
    public Integer component5() {
        return getCancelledOrders();
    }

    @Override
    public Integer component6() {
        return getLoginCount();
    }

    @Override
    public Timestamp component7() {
        return getLastLogin();
    }

    @Override
    public Short component8() {
        return getActive();
    }

    @Override
    public Integer component9() {
        return getUserStatus();
    }

    @Override
    public Short component10() {
        return getSrchType();
    }

    @Override
    public Short component11() {
        return getGenSrch();
    }

    @Override
    public String component12() {
        return getSrchVal();
    }

    @Override
    public Integer value1() {
        return getPpid();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public Integer value3() {
        return getOrderCount();
    }

    @Override
    public Integer value4() {
        return getAcceptedOrders();
    }

    @Override
    public Integer value5() {
        return getCancelledOrders();
    }

    @Override
    public Integer value6() {
        return getLoginCount();
    }

    @Override
    public Timestamp value7() {
        return getLastLogin();
    }

    @Override
    public Short value8() {
        return getActive();
    }

    @Override
    public Integer value9() {
        return getUserStatus();
    }

    @Override
    public Short value10() {
        return getSrchType();
    }

    @Override
    public Short value11() {
        return getGenSrch();
    }

    @Override
    public String value12() {
        return getSrchVal();
    }

    @Override
    public UsersRecord value1(Integer value) {
        setPpid(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value3(Integer value) {
        setOrderCount(value);
        return this;
    }

    @Override
    public UsersRecord value4(Integer value) {
        setAcceptedOrders(value);
        return this;
    }

    @Override
    public UsersRecord value5(Integer value) {
        setCancelledOrders(value);
        return this;
    }

    @Override
    public UsersRecord value6(Integer value) {
        setLoginCount(value);
        return this;
    }

    @Override
    public UsersRecord value7(Timestamp value) {
        setLastLogin(value);
        return this;
    }

    @Override
    public UsersRecord value8(Short value) {
        setActive(value);
        return this;
    }

    @Override
    public UsersRecord value9(Integer value) {
        setUserStatus(value);
        return this;
    }

    @Override
    public UsersRecord value10(Short value) {
        setSrchType(value);
        return this;
    }

    @Override
    public UsersRecord value11(Short value) {
        setGenSrch(value);
        return this;
    }

    @Override
    public UsersRecord value12(String value) {
        setSrchVal(value);
        return this;
    }

    @Override
    public UsersRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6, Timestamp value7, Short value8, Integer value9, Short value10, Short value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer ppid, String password, Integer orderCount, Integer acceptedOrders, Integer cancelledOrders, Integer loginCount, Timestamp lastLogin, Short active, Integer userStatus, Short srchType, Short genSrch, String srchVal) {
        super(Users.USERS);

        set(0, ppid);
        set(1, password);
        set(2, orderCount);
        set(3, acceptedOrders);
        set(4, cancelledOrders);
        set(5, loginCount);
        set(6, lastLogin);
        set(7, active);
        set(8, userStatus);
        set(9, srchType);
        set(10, genSrch);
        set(11, srchVal);
    }
}
