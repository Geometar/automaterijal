/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables.records;


import com.automaterijal.db.tables.Proizvodjac;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProizvodjacRecord extends UpdatableRecordImpl<ProizvodjacRecord> implements Record3<String, String, Short> {

    private static final long serialVersionUID = -1766273465;

    /**
     * Setter for <code>automate_orders.proizvodjac.proid</code>.
     */
    public void setProid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>automate_orders.proizvodjac.proid</code>.
     */
    public String getProid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>automate_orders.proizvodjac.naziv</code>.
     */
    public void setNaziv(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>automate_orders.proizvodjac.naziv</code>.
     */
    public String getNaziv() {
        return (String) get(1);
    }

    /**
     * Setter for <code>automate_orders.proizvodjac.mi_uvozimo</code>.
     */
    public void setMiUvozimo(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>automate_orders.proizvodjac.mi_uvozimo</code>.
     */
    public Short getMiUvozimo() {
        return (Short) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Short> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Short> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Proizvodjac.PROIZVODJAC.PROID;
    }

    @Override
    public Field<String> field2() {
        return Proizvodjac.PROIZVODJAC.NAZIV;
    }

    @Override
    public Field<Short> field3() {
        return Proizvodjac.PROIZVODJAC.MI_UVOZIMO;
    }

    @Override
    public String component1() {
        return getProid();
    }

    @Override
    public String component2() {
        return getNaziv();
    }

    @Override
    public Short component3() {
        return getMiUvozimo();
    }

    @Override
    public String value1() {
        return getProid();
    }

    @Override
    public String value2() {
        return getNaziv();
    }

    @Override
    public Short value3() {
        return getMiUvozimo();
    }

    @Override
    public ProizvodjacRecord value1(String value) {
        setProid(value);
        return this;
    }

    @Override
    public ProizvodjacRecord value2(String value) {
        setNaziv(value);
        return this;
    }

    @Override
    public ProizvodjacRecord value3(Short value) {
        setMiUvozimo(value);
        return this;
    }

    @Override
    public ProizvodjacRecord values(String value1, String value2, Short value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProizvodjacRecord
     */
    public ProizvodjacRecord() {
        super(Proizvodjac.PROIZVODJAC);
    }

    /**
     * Create a detached, initialised ProizvodjacRecord
     */
    public ProizvodjacRecord(String proid, String naziv, Short miUvozimo) {
        super(Proizvodjac.PROIZVODJAC);

        set(0, proid);
        set(1, naziv);
        set(2, miUvozimo);
    }
}
