/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.IstuplRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Istupl extends TableImpl<IstuplRecord> {

    private static final long serialVersionUID = -1400910156;

    /**
     * The reference instance of <code>automate_orders.istupl</code>
     */
    public static final Istupl ISTUPL = new Istupl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IstuplRecord> getRecordType() {
        return IstuplRecord.class;
    }

    /**
     * The column <code>automate_orders.istupl.istuplid</code>.
     */
    public final TableField<IstuplRecord, Integer> ISTUPLID = createField(DSL.name("istuplid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.istupl.vrdok</code>.
     */
    public final TableField<IstuplRecord, Short> VRDOK = createField(DSL.name("vrdok"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>automate_orders.istupl.brdok</code>.
     */
    public final TableField<IstuplRecord, Integer> BRDOK = createField(DSL.name("brdok"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.istupl.datum</code>.
     */
    public final TableField<IstuplRecord, Date> DATUM = createField(DSL.name("datum"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>automate_orders.istupl.iznos</code>.
     */
    public final TableField<IstuplRecord, BigDecimal> IZNOS = createField(DSL.name("iznos"), org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>automate_orders.istupl.opis</code>.
     */
    public final TableField<IstuplRecord, String> OPIS = createField(DSL.name("opis"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>automate_orders.istupl.ppid</code>.
     */
    public final TableField<IstuplRecord, Integer> PPID = createField(DSL.name("ppid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.istupl.io</code>.
     */
    public final TableField<IstuplRecord, Byte> IO = createField(DSL.name("io"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>automate_orders.istupl.nuid</code>.
     */
    public final TableField<IstuplRecord, Short> NUID = createField(DSL.name("nuid"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>automate_orders.istupl.valuta</code>.
     */
    public final TableField<IstuplRecord, String> VALUTA = createField(DSL.name("valuta"), org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>automate_orders.istupl.kurs</code>.
     */
    public final TableField<IstuplRecord, BigDecimal> KURS = createField(DSL.name("kurs"), org.jooq.impl.SQLDataType.DECIMAL(15, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("1.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * Create a <code>automate_orders.istupl</code> table reference
     */
    public Istupl() {
        this(DSL.name("istupl"), null);
    }

    /**
     * Create an aliased <code>automate_orders.istupl</code> table reference
     */
    public Istupl(String alias) {
        this(DSL.name(alias), ISTUPL);
    }

    /**
     * Create an aliased <code>automate_orders.istupl</code> table reference
     */
    public Istupl(Name alias) {
        this(alias, ISTUPL);
    }

    private Istupl(Name alias, Table<IstuplRecord> aliased) {
        this(alias, aliased, null);
    }

    private Istupl(Name alias, Table<IstuplRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Istupl(Table<O> child, ForeignKey<O, IstuplRecord> key) {
        super(child, key, ISTUPL);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ISTUPL_IDXPP, Indexes.ISTUPL_PRIMARY);
    }

    @Override
    public UniqueKey<IstuplRecord> getPrimaryKey() {
        return Keys.KEY_ISTUPL_PRIMARY;
    }

    @Override
    public List<UniqueKey<IstuplRecord>> getKeys() {
        return Arrays.<UniqueKey<IstuplRecord>>asList(Keys.KEY_ISTUPL_PRIMARY);
    }

    @Override
    public Istupl as(String alias) {
        return new Istupl(DSL.name(alias), this);
    }

    @Override
    public Istupl as(Name alias) {
        return new Istupl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Istupl rename(String name) {
        return new Istupl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Istupl rename(Name name) {
        return new Istupl(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Short, Integer, Date, BigDecimal, String, Integer, Byte, Short, String, BigDecimal> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
