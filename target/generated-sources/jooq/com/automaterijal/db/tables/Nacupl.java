/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.NacuplRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Nacupl extends TableImpl<NacuplRecord> {

    private static final long serialVersionUID = 1110185775;

    /**
     * The reference instance of <code>automate_orders.nacupl</code>
     */
    public static final Nacupl NACUPL = new Nacupl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NacuplRecord> getRecordType() {
        return NacuplRecord.class;
    }

    /**
     * The column <code>automate_orders.nacupl.nuid</code>.
     */
    public final TableField<NacuplRecord, Short> NUID = createField(DSL.name("nuid"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>automate_orders.nacupl.naziv</code>.
     */
    public final TableField<NacuplRecord, String> NAZIV = createField(DSL.name("naziv"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>automate_orders.nacupl</code> table reference
     */
    public Nacupl() {
        this(DSL.name("nacupl"), null);
    }

    /**
     * Create an aliased <code>automate_orders.nacupl</code> table reference
     */
    public Nacupl(String alias) {
        this(DSL.name(alias), NACUPL);
    }

    /**
     * Create an aliased <code>automate_orders.nacupl</code> table reference
     */
    public Nacupl(Name alias) {
        this(alias, NACUPL);
    }

    private Nacupl(Name alias, Table<NacuplRecord> aliased) {
        this(alias, aliased, null);
    }

    private Nacupl(Name alias, Table<NacuplRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Nacupl(Table<O> child, ForeignKey<O, NacuplRecord> key) {
        super(child, key, NACUPL);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NACUPL_PRIMARY);
    }

    @Override
    public UniqueKey<NacuplRecord> getPrimaryKey() {
        return Keys.KEY_NACUPL_PRIMARY;
    }

    @Override
    public List<UniqueKey<NacuplRecord>> getKeys() {
        return Arrays.<UniqueKey<NacuplRecord>>asList(Keys.KEY_NACUPL_PRIMARY);
    }

    @Override
    public Nacupl as(String alias) {
        return new Nacupl(DSL.name(alias), this);
    }

    @Override
    public Nacupl as(Name alias) {
        return new Nacupl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Nacupl rename(String name) {
        return new Nacupl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Nacupl rename(Name name) {
        return new Nacupl(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Short, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
