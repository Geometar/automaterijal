/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.PartnerRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Partner extends TableImpl<PartnerRecord> {

    private static final long serialVersionUID = -1427833938;

    /**
     * The reference instance of <code>automate_orders.partner</code>
     */
    public static final Partner PARTNER = new Partner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PartnerRecord> getRecordType() {
        return PartnerRecord.class;
    }

    /**
     * The column <code>automate_orders.partner.ppid</code>.
     */
    public final TableField<PartnerRecord, Integer> PPID = createField(DSL.name("ppid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>automate_orders.partner.naziv</code>.
     */
    public final TableField<PartnerRecord, String> NAZIV = createField(DSL.name("naziv"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>automate_orders.partner.email</code>.
     */
    public final TableField<PartnerRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>automate_orders.partner.cenovnikid</code>.
     */
    public final TableField<PartnerRecord, Integer> CENOVNIKID = createField(DSL.name("cenovnikid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.partner.vrstacenovnika</code>.
     */
    public final TableField<PartnerRecord, Integer> VRSTACENOVNIKA = createField(DSL.name("vrstacenovnika"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.partner.vpcid</code>.
     */
    public final TableField<PartnerRecord, Integer> VPCID = createField(DSL.name("vpcid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.partner.procpc</code>.
     */
    public final TableField<PartnerRecord, BigDecimal> PROCPC = createField(DSL.name("procpc"), org.jooq.impl.SQLDataType.DECIMAL(15, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>automate_orders.partner.web_korisnik</code>.
     */
    public final TableField<PartnerRecord, String> WEB_KORISNIK = createField(DSL.name("web_korisnik"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>automate_orders.partner.web_lozinka</code>.
     */
    public final TableField<PartnerRecord, String> WEB_LOZINKA = createField(DSL.name("web_lozinka"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>automate_orders.partner.rabat</code>.
     */
    public final TableField<PartnerRecord, BigDecimal> RABAT = createField(DSL.name("rabat"), org.jooq.impl.SQLDataType.DECIMAL(15, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>automate_orders.partner.web_status</code>.
     */
    public final TableField<PartnerRecord, Short> WEB_STATUS = createField(DSL.name("web_status"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>automate_orders.partner.magacinid</code>.
     */
    public final TableField<PartnerRecord, Integer> MAGACINID = createField(DSL.name("magacinid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>automate_orders.partner.niid</code>.
     */
    public final TableField<PartnerRecord, Integer> NIID = createField(DSL.name("niid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>automate_orders.partner.stanje</code>.
     */
    public final TableField<PartnerRecord, BigDecimal> STANJE = createField(DSL.name("stanje"), org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>automate_orders.partner.stanjeporoku</code>.
     */
    public final TableField<PartnerRecord, BigDecimal> STANJEPOROKU = createField(DSL.name("stanjeporoku"), org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>automate_orders.partner.privilegije</code>.
     */
    public final TableField<PartnerRecord, Integer> PRIVILEGIJE = createField(DSL.name("privilegije"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>automate_orders.partner.gppid</code>.
     */
    public final TableField<PartnerRecord, Integer> GPPID = createField(DSL.name("gppid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.partner.cene_od_grupe</code>.
     */
    public final TableField<PartnerRecord, Byte> CENE_OD_GRUPE = createField(DSL.name("cene_od_grupe"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>automate_orders.partner.nppid</code>.
     */
    public final TableField<PartnerRecord, Integer> NPPID = createField(DSL.name("nppid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.partner.vpc_rabat</code>.
     */
    public final TableField<PartnerRecord, Byte> VPC_RABAT = createField(DSL.name("vpc_rabat"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>automate_orders.partner.imaugovor</code>.
     */
    public final TableField<PartnerRecord, Byte> IMAUGOVOR = createField(DSL.name("imaugovor"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>automate_orders.partner.pol</code>.
     */
    public final TableField<PartnerRecord, Short> POL = createField(DSL.name("pol"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>automate_orders.partner.audit</code>.
     */
    public final TableField<PartnerRecord, Byte> AUDIT = createField(DSL.name("audit"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>automate_orders.partner.dozvoljeniminus</code>.
     */
    public final TableField<PartnerRecord, BigDecimal> DOZVOLJENIMINUS = createField(DSL.name("dozvoljeniminus"), org.jooq.impl.SQLDataType.DECIMAL(15, 2), this, "");

    /**
     * The column <code>automate_orders.partner.dozvoljeniminus_rok</code>.
     */
    public final TableField<PartnerRecord, BigDecimal> DOZVOLJENIMINUS_ROK = createField(DSL.name("dozvoljeniminus_rok"), org.jooq.impl.SQLDataType.DECIMAL(15, 2), this, "");

    /**
     * The column <code>automate_orders.partner.zid</code>.
     */
    public final TableField<PartnerRecord, Short> ZID = createField(DSL.name("zid"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>automate_orders.partner</code> table reference
     */
    public Partner() {
        this(DSL.name("partner"), null);
    }

    /**
     * Create an aliased <code>automate_orders.partner</code> table reference
     */
    public Partner(String alias) {
        this(DSL.name(alias), PARTNER);
    }

    /**
     * Create an aliased <code>automate_orders.partner</code> table reference
     */
    public Partner(Name alias) {
        this(alias, PARTNER);
    }

    private Partner(Name alias, Table<PartnerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Partner(Name alias, Table<PartnerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Partner(Table<O> child, ForeignKey<O, PartnerRecord> key) {
        super(child, key, PARTNER);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PARTNER_IDXKORISNIK, Indexes.PARTNER_IDXNAZIV, Indexes.PARTNER_IDXVPC, Indexes.PARTNER_PRIMARY);
    }

    @Override
    public UniqueKey<PartnerRecord> getPrimaryKey() {
        return Keys.KEY_PARTNER_PRIMARY;
    }

    @Override
    public List<UniqueKey<PartnerRecord>> getKeys() {
        return Arrays.<UniqueKey<PartnerRecord>>asList(Keys.KEY_PARTNER_PRIMARY, Keys.KEY_PARTNER_IDXKORISNIK);
    }

    @Override
    public Partner as(String alias) {
        return new Partner(DSL.name(alias), this);
    }

    @Override
    public Partner as(Name alias) {
        return new Partner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Partner rename(String name) {
        return new Partner(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Partner rename(Name name) {
        return new Partner(name, null);
    }
}
