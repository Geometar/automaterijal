/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.MestaIsporukeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MestaIsporuke extends TableImpl<MestaIsporukeRecord> {

    private static final long serialVersionUID = -1593801847;

    /**
     * The reference instance of <code>automate_orders.mesta_isporuke</code>
     */
    public static final MestaIsporuke MESTA_ISPORUKE = new MestaIsporuke();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MestaIsporukeRecord> getRecordType() {
        return MestaIsporukeRecord.class;
    }

    /**
     * The column <code>automate_orders.mesta_isporuke.ppid</code>.
     */
    public final TableField<MestaIsporukeRecord, Integer> PPID = createField(DSL.name("ppid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.mesta_isporuke.nppid</code>.
     */
    public final TableField<MestaIsporukeRecord, Integer> NPPID = createField(DSL.name("nppid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.mesta_isporuke.naziv</code>.
     */
    public final TableField<MestaIsporukeRecord, String> NAZIV = createField(DSL.name("naziv"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>automate_orders.mesta_isporuke.adresa</code>.
     */
    public final TableField<MestaIsporukeRecord, String> ADRESA = createField(DSL.name("adresa"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>automate_orders.mesta_isporuke</code> table reference
     */
    public MestaIsporuke() {
        this(DSL.name("mesta_isporuke"), null);
    }

    /**
     * Create an aliased <code>automate_orders.mesta_isporuke</code> table reference
     */
    public MestaIsporuke(String alias) {
        this(DSL.name(alias), MESTA_ISPORUKE);
    }

    /**
     * Create an aliased <code>automate_orders.mesta_isporuke</code> table reference
     */
    public MestaIsporuke(Name alias) {
        this(alias, MESTA_ISPORUKE);
    }

    private MestaIsporuke(Name alias, Table<MestaIsporukeRecord> aliased) {
        this(alias, aliased, null);
    }

    private MestaIsporuke(Name alias, Table<MestaIsporukeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MestaIsporuke(Table<O> child, ForeignKey<O, MestaIsporukeRecord> key) {
        super(child, key, MESTA_ISPORUKE);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MESTA_ISPORUKE_IDXNPPID, Indexes.MESTA_ISPORUKE_PRIMARY);
    }

    @Override
    public UniqueKey<MestaIsporukeRecord> getPrimaryKey() {
        return Keys.KEY_MESTA_ISPORUKE_PRIMARY;
    }

    @Override
    public List<UniqueKey<MestaIsporukeRecord>> getKeys() {
        return Arrays.<UniqueKey<MestaIsporukeRecord>>asList(Keys.KEY_MESTA_ISPORUKE_PRIMARY);
    }

    @Override
    public MestaIsporuke as(String alias) {
        return new MestaIsporuke(DSL.name(alias), this);
    }

    @Override
    public MestaIsporuke as(Name alias) {
        return new MestaIsporuke(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MestaIsporuke rename(String name) {
        return new MestaIsporuke(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MestaIsporuke rename(Name name) {
        return new MestaIsporuke(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
