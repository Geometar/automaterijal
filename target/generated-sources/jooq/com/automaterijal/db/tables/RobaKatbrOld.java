/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.RobaKatbrOldRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RobaKatbrOld extends TableImpl<RobaKatbrOldRecord> {

    private static final long serialVersionUID = -1408676486;

    /**
     * The reference instance of <code>automate_orders.roba_katbr_old</code>
     */
    public static final RobaKatbrOld ROBA_KATBR_OLD = new RobaKatbrOld();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RobaKatbrOldRecord> getRecordType() {
        return RobaKatbrOldRecord.class;
    }

    /**
     * The column <code>automate_orders.roba_katbr_old.robaid</code>.
     */
    public final TableField<RobaKatbrOldRecord, Integer> ROBAID = createField(DSL.name("robaid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.roba_katbr_old.katbr</code>.
     */
    public final TableField<RobaKatbrOldRecord, String> KATBR = createField(DSL.name("katbr"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>automate_orders.roba_katbr_old.katbrpro</code>.
     */
    public final TableField<RobaKatbrOldRecord, String> KATBRPRO = createField(DSL.name("katbrpro"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>automate_orders.roba_katbr_old.pin</code>.
     */
    public final TableField<RobaKatbrOldRecord, String> PIN = createField(DSL.name("pin"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>automate_orders.roba_katbr_old</code> table reference
     */
    public RobaKatbrOld() {
        this(DSL.name("roba_katbr_old"), null);
    }

    /**
     * Create an aliased <code>automate_orders.roba_katbr_old</code> table reference
     */
    public RobaKatbrOld(String alias) {
        this(DSL.name(alias), ROBA_KATBR_OLD);
    }

    /**
     * Create an aliased <code>automate_orders.roba_katbr_old</code> table reference
     */
    public RobaKatbrOld(Name alias) {
        this(alias, ROBA_KATBR_OLD);
    }

    private RobaKatbrOld(Name alias, Table<RobaKatbrOldRecord> aliased) {
        this(alias, aliased, null);
    }

    private RobaKatbrOld(Name alias, Table<RobaKatbrOldRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RobaKatbrOld(Table<O> child, ForeignKey<O, RobaKatbrOldRecord> key) {
        super(child, key, ROBA_KATBR_OLD);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ROBA_KATBR_OLD_PRIMARY);
    }

    @Override
    public UniqueKey<RobaKatbrOldRecord> getPrimaryKey() {
        return Keys.KEY_ROBA_KATBR_OLD_PRIMARY;
    }

    @Override
    public List<UniqueKey<RobaKatbrOldRecord>> getKeys() {
        return Arrays.<UniqueKey<RobaKatbrOldRecord>>asList(Keys.KEY_ROBA_KATBR_OLD_PRIMARY);
    }

    @Override
    public RobaKatbrOld as(String alias) {
        return new RobaKatbrOld(DSL.name(alias), this);
    }

    @Override
    public RobaKatbrOld as(Name alias) {
        return new RobaKatbrOld(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RobaKatbrOld rename(String name) {
        return new RobaKatbrOld(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RobaKatbrOld rename(Name name) {
        return new RobaKatbrOld(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
