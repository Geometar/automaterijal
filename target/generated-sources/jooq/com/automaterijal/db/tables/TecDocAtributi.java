/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.TecDocAtributiRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TecDocAtributi extends TableImpl<TecDocAtributiRecord> {

    private static final long serialVersionUID = 803665699;

    /**
     * The reference instance of <code>automate_orders.tec_doc_atributi</code>
     */
    public static final TecDocAtributi TEC_DOC_ATRIBUTI = new TecDocAtributi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TecDocAtributiRecord> getRecordType() {
        return TecDocAtributiRecord.class;
    }

    /**
     * The column <code>automate_orders.tec_doc_atributi.id</code>.
     */
    public final TableField<TecDocAtributiRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.tec_doc_article_id</code>.
     */
    public final TableField<TecDocAtributiRecord, Integer> TEC_DOC_ARTICLE_ID = createField(DSL.name("tec_doc_article_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.roba_id</code>.
     */
    public final TableField<TecDocAtributiRecord, Integer> ROBA_ID = createField(DSL.name("roba_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.ppid</code>.
     */
    public final TableField<TecDocAtributiRecord, String> PPID = createField(DSL.name("ppid"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.tec_doc_ppid</code>.
     */
    public final TableField<TecDocAtributiRecord, Integer> TEC_DOC_PPID = createField(DSL.name("tec_doc_ppid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.katbr</code>.
     */
    public final TableField<TecDocAtributiRecord, String> KATBR = createField(DSL.name("katbr"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.attr_value</code>.
     */
    public final TableField<TecDocAtributiRecord, String> ATTR_VALUE = createField(DSL.name("attr_value"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.attr_unit</code>.
     */
    public final TableField<TecDocAtributiRecord, String> ATTR_UNIT = createField(DSL.name("attr_unit"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.attr_short_name</code>.
     */
    public final TableField<TecDocAtributiRecord, String> ATTR_SHORT_NAME = createField(DSL.name("attr_short_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.attr_type</code>.
     */
    public final TableField<TecDocAtributiRecord, String> ATTR_TYPE = createField(DSL.name("attr_type"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.dokument_id</code>.
     */
    public final TableField<TecDocAtributiRecord, String> DOKUMENT_ID = createField(DSL.name("dokument_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>automate_orders.tec_doc_atributi.dokument</code>.
     */
    public final TableField<TecDocAtributiRecord, byte[]> DOKUMENT = createField(DSL.name("dokument"), org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>automate_orders.tec_doc_atributi</code> table reference
     */
    public TecDocAtributi() {
        this(DSL.name("tec_doc_atributi"), null);
    }

    /**
     * Create an aliased <code>automate_orders.tec_doc_atributi</code> table reference
     */
    public TecDocAtributi(String alias) {
        this(DSL.name(alias), TEC_DOC_ATRIBUTI);
    }

    /**
     * Create an aliased <code>automate_orders.tec_doc_atributi</code> table reference
     */
    public TecDocAtributi(Name alias) {
        this(alias, TEC_DOC_ATRIBUTI);
    }

    private TecDocAtributi(Name alias, Table<TecDocAtributiRecord> aliased) {
        this(alias, aliased, null);
    }

    private TecDocAtributi(Name alias, Table<TecDocAtributiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TecDocAtributi(Table<O> child, ForeignKey<O, TecDocAtributiRecord> key) {
        super(child, key, TEC_DOC_ATRIBUTI);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TEC_DOC_ATRIBUTI_PRIMARY);
    }

    @Override
    public Identity<TecDocAtributiRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TEC_DOC_ATRIBUTI;
    }

    @Override
    public UniqueKey<TecDocAtributiRecord> getPrimaryKey() {
        return Keys.KEY_TEC_DOC_ATRIBUTI_PRIMARY;
    }

    @Override
    public List<UniqueKey<TecDocAtributiRecord>> getKeys() {
        return Arrays.<UniqueKey<TecDocAtributiRecord>>asList(Keys.KEY_TEC_DOC_ATRIBUTI_PRIMARY);
    }

    @Override
    public TecDocAtributi as(String alias) {
        return new TecDocAtributi(DSL.name(alias), this);
    }

    @Override
    public TecDocAtributi as(Name alias) {
        return new TecDocAtributi(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TecDocAtributi rename(String name) {
        return new TecDocAtributi(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TecDocAtributi rename(Name name) {
        return new TecDocAtributi(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, Integer, String, Integer, String, String, String, String, String, String, byte[]> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
