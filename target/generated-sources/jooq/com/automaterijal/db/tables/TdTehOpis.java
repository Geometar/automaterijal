/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.TdTehOpisRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TdTehOpis extends TableImpl<TdTehOpisRecord> {

    private static final long serialVersionUID = -1957688766;

    /**
     * The reference instance of <code>automate_orders.td_teh_opis</code>
     */
    public static final TdTehOpis TD_TEH_OPIS = new TdTehOpis();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TdTehOpisRecord> getRecordType() {
        return TdTehOpisRecord.class;
    }

    /**
     * The column <code>automate_orders.td_teh_opis.teh_opis_id</code>.
     */
    public final TableField<TdTehOpisRecord, Integer> TEH_OPIS_ID = createField(DSL.name("teh_opis_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.robaid</code>.
     */
    public final TableField<TdTehOpisRecord, Integer> ROBAID = createField(DSL.name("robaid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.fabrbroj</code>.
     */
    public final TableField<TdTehOpisRecord, String> FABRBROJ = createField(DSL.name("fabrbroj"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.oznaka</code>.
     */
    public final TableField<TdTehOpisRecord, String> OZNAKA = createField(DSL.name("oznaka"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.vrednost</code>.
     */
    public final TableField<TdTehOpisRecord, String> VREDNOST = createField(DSL.name("vrednost"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.jedinica</code>.
     */
    public final TableField<TdTehOpisRecord, String> JEDINICA = createField(DSL.name("jedinica"), org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.cri_id</code>.
     */
    public final TableField<TdTehOpisRecord, Integer> CRI_ID = createField(DSL.name("cri_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.sort</code>.
     */
    public final TableField<TdTehOpisRecord, Short> SORT = createField(DSL.name("sort"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.cri_is_interval</code>.
     */
    public final TableField<TdTehOpisRecord, Short> CRI_IS_INTERVAL = createField(DSL.name("cri_is_interval"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.cri_successor</code>.
     */
    public final TableField<TdTehOpisRecord, Short> CRI_SUCCESSOR = createField(DSL.name("cri_successor"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>automate_orders.td_teh_opis.nazivid</code>.
     */
    public final TableField<TdTehOpisRecord, Integer> NAZIVID = createField(DSL.name("nazivid"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>automate_orders.td_teh_opis</code> table reference
     */
    public TdTehOpis() {
        this(DSL.name("td_teh_opis"), null);
    }

    /**
     * Create an aliased <code>automate_orders.td_teh_opis</code> table reference
     */
    public TdTehOpis(String alias) {
        this(DSL.name(alias), TD_TEH_OPIS);
    }

    /**
     * Create an aliased <code>automate_orders.td_teh_opis</code> table reference
     */
    public TdTehOpis(Name alias) {
        this(alias, TD_TEH_OPIS);
    }

    private TdTehOpis(Name alias, Table<TdTehOpisRecord> aliased) {
        this(alias, aliased, null);
    }

    private TdTehOpis(Name alias, Table<TdTehOpisRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TdTehOpis(Table<O> child, ForeignKey<O, TdTehOpisRecord> key) {
        super(child, key, TD_TEH_OPIS);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TD_TEH_OPIS_INDEX1, Indexes.TD_TEH_OPIS_PRIMARY);
    }

    @Override
    public Identity<TdTehOpisRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TD_TEH_OPIS;
    }

    @Override
    public UniqueKey<TdTehOpisRecord> getPrimaryKey() {
        return Keys.KEY_TD_TEH_OPIS_PRIMARY;
    }

    @Override
    public List<UniqueKey<TdTehOpisRecord>> getKeys() {
        return Arrays.<UniqueKey<TdTehOpisRecord>>asList(Keys.KEY_TD_TEH_OPIS_PRIMARY);
    }

    @Override
    public TdTehOpis as(String alias) {
        return new TdTehOpis(DSL.name(alias), this);
    }

    @Override
    public TdTehOpis as(Name alias) {
        return new TdTehOpis(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TdTehOpis rename(String name) {
        return new TdTehOpis(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TdTehOpis rename(Name name) {
        return new TdTehOpis(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, String, String, String, String, Integer, Short, Short, Short, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
