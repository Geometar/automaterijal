/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.GrupaPpRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GrupaPp extends TableImpl<GrupaPpRecord> {

    private static final long serialVersionUID = 2110400679;

    /**
     * The reference instance of <code>automate_orders.grupa_pp</code>
     */
    public static final GrupaPp GRUPA_PP = new GrupaPp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GrupaPpRecord> getRecordType() {
        return GrupaPpRecord.class;
    }

    /**
     * The column <code>automate_orders.grupa_pp.gppid</code>.
     */
    public final TableField<GrupaPpRecord, Integer> GPPID = createField(DSL.name("gppid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.naziv</code>.
     */
    public final TableField<GrupaPpRecord, String> NAZIV = createField(DSL.name("naziv"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.vrstacenovnika</code>.
     */
    public final TableField<GrupaPpRecord, Short> VRSTACENOVNIKA = createField(DSL.name("vrstacenovnika"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.cenovnikid</code>.
     */
    public final TableField<GrupaPpRecord, Short> CENOVNIKID = createField(DSL.name("cenovnikid"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.vpcid</code>.
     */
    public final TableField<GrupaPpRecord, Short> VPCID = createField(DSL.name("vpcid"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.procpc</code>.
     */
    public final TableField<GrupaPpRecord, BigDecimal> PROCPC = createField(DSL.name("procpc"), org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.uvpcid</code>.
     */
    public final TableField<GrupaPpRecord, Short> UVPCID = createField(DSL.name("uvpcid"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.uprocpc</code>.
     */
    public final TableField<GrupaPpRecord, BigDecimal> UPROCPC = createField(DSL.name("uprocpc"), org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.valuta_dana</code>.
     */
    public final TableField<GrupaPpRecord, Short> VALUTA_DANA = createField(DSL.name("valuta_dana"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>automate_orders.grupa_pp.vpc_rabat</code>.
     */
    public final TableField<GrupaPpRecord, Short> VPC_RABAT = createField(DSL.name("vpc_rabat"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>automate_orders.grupa_pp</code> table reference
     */
    public GrupaPp() {
        this(DSL.name("grupa_pp"), null);
    }

    /**
     * Create an aliased <code>automate_orders.grupa_pp</code> table reference
     */
    public GrupaPp(String alias) {
        this(DSL.name(alias), GRUPA_PP);
    }

    /**
     * Create an aliased <code>automate_orders.grupa_pp</code> table reference
     */
    public GrupaPp(Name alias) {
        this(alias, GRUPA_PP);
    }

    private GrupaPp(Name alias, Table<GrupaPpRecord> aliased) {
        this(alias, aliased, null);
    }

    private GrupaPp(Name alias, Table<GrupaPpRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GrupaPp(Table<O> child, ForeignKey<O, GrupaPpRecord> key) {
        super(child, key, GRUPA_PP);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GRUPA_PP_PRIMARY);
    }

    @Override
    public UniqueKey<GrupaPpRecord> getPrimaryKey() {
        return Keys.KEY_GRUPA_PP_PRIMARY;
    }

    @Override
    public List<UniqueKey<GrupaPpRecord>> getKeys() {
        return Arrays.<UniqueKey<GrupaPpRecord>>asList(Keys.KEY_GRUPA_PP_PRIMARY);
    }

    @Override
    public GrupaPp as(String alias) {
        return new GrupaPp(DSL.name(alias), this);
    }

    @Override
    public GrupaPp as(Name alias) {
        return new GrupaPp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GrupaPp rename(String name) {
        return new GrupaPp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GrupaPp rename(Name name) {
        return new GrupaPp(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, Short, Short, Short, BigDecimal, Short, BigDecimal, Short, Short> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
