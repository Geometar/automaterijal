/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.KursnalistaistRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Kursnalistaist extends TableImpl<KursnalistaistRecord> {

    private static final long serialVersionUID = -184418720;

    /**
     * The reference instance of <code>automate_orders.kursnalistaist</code>
     */
    public static final Kursnalistaist KURSNALISTAIST = new Kursnalistaist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<KursnalistaistRecord> getRecordType() {
        return KursnalistaistRecord.class;
    }

    /**
     * The column <code>automate_orders.kursnalistaist.valuta</code>.
     */
    public final TableField<KursnalistaistRecord, String> VALUTA = createField(DSL.name("valuta"), org.jooq.impl.SQLDataType.CHAR(3).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>automate_orders.kursnalistaist.datum</code>.
     */
    public final TableField<KursnalistaistRecord, Timestamp> DATUM = createField(DSL.name("datum"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>automate_orders.kursnalistaist.jedodnosa</code>.
     */
    public final TableField<KursnalistaistRecord, Integer> JEDODNOSA = createField(DSL.name("jedodnosa"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>automate_orders.kursnalistaist.kurs</code>.
     */
    public final TableField<KursnalistaistRecord, BigDecimal> KURS = createField(DSL.name("kurs"), org.jooq.impl.SQLDataType.DECIMAL(15, 4), this, "");

    /**
     * The column <code>automate_orders.kursnalistaist.kurszauvoz</code>.
     */
    public final TableField<KursnalistaistRecord, BigDecimal> KURSZAUVOZ = createField(DSL.name("kurszauvoz"), org.jooq.impl.SQLDataType.DECIMAL(15, 4), this, "");

    /**
     * The column <code>automate_orders.kursnalistaist.kurs3</code>.
     */
    public final TableField<KursnalistaistRecord, BigDecimal> KURS3 = createField(DSL.name("kurs3"), org.jooq.impl.SQLDataType.DECIMAL(15, 4), this, "");

    /**
     * Create a <code>automate_orders.kursnalistaist</code> table reference
     */
    public Kursnalistaist() {
        this(DSL.name("kursnalistaist"), null);
    }

    /**
     * Create an aliased <code>automate_orders.kursnalistaist</code> table reference
     */
    public Kursnalistaist(String alias) {
        this(DSL.name(alias), KURSNALISTAIST);
    }

    /**
     * Create an aliased <code>automate_orders.kursnalistaist</code> table reference
     */
    public Kursnalistaist(Name alias) {
        this(alias, KURSNALISTAIST);
    }

    private Kursnalistaist(Name alias, Table<KursnalistaistRecord> aliased) {
        this(alias, aliased, null);
    }

    private Kursnalistaist(Name alias, Table<KursnalistaistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Kursnalistaist(Table<O> child, ForeignKey<O, KursnalistaistRecord> key) {
        super(child, key, KURSNALISTAIST);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.KURSNALISTAIST_PRIMARY);
    }

    @Override
    public UniqueKey<KursnalistaistRecord> getPrimaryKey() {
        return Keys.KEY_KURSNALISTAIST_PRIMARY;
    }

    @Override
    public List<UniqueKey<KursnalistaistRecord>> getKeys() {
        return Arrays.<UniqueKey<KursnalistaistRecord>>asList(Keys.KEY_KURSNALISTAIST_PRIMARY);
    }

    @Override
    public Kursnalistaist as(String alias) {
        return new Kursnalistaist(DSL.name(alias), this);
    }

    @Override
    public Kursnalistaist as(Name alias) {
        return new Kursnalistaist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Kursnalistaist rename(String name) {
        return new Kursnalistaist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Kursnalistaist rename(Name name) {
        return new Kursnalistaist(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, Timestamp, Integer, BigDecimal, BigDecimal, BigDecimal> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
