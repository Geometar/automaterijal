/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.TdBrojeviRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TdBrojevi extends TableImpl<TdBrojeviRecord> {

    private static final long serialVersionUID = -434285900;

    /**
     * The reference instance of <code>automate_orders.td_brojevi</code>
     */
    public static final TdBrojevi TD_BROJEVI = new TdBrojevi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TdBrojeviRecord> getRecordType() {
        return TdBrojeviRecord.class;
    }

    /**
     * The column <code>automate_orders.td_brojevi.robaid</code>.
     */
    public final TableField<TdBrojeviRecord, Integer> ROBAID = createField(DSL.name("robaid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>automate_orders.td_brojevi.fabrbroj</code>.
     */
    public final TableField<TdBrojeviRecord, String> FABRBROJ = createField(DSL.name("fabrbroj"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>automate_orders.td_brojevi.broj</code>.
     */
    public final TableField<TdBrojeviRecord, String> BROJ = createField(DSL.name("broj"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>automate_orders.td_brojevi.opis</code>.
     */
    public final TableField<TdBrojeviRecord, String> OPIS = createField(DSL.name("opis"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>automate_orders.td_brojevi.brojsrch</code>.
     */
    public final TableField<TdBrojeviRecord, String> BROJSRCH = createField(DSL.name("brojsrch"), org.jooq.impl.SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>automate_orders.td_brojevi.naziv</code>.
     */
    public final TableField<TdBrojeviRecord, String> NAZIV = createField(DSL.name("naziv"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>automate_orders.td_brojevi.idpro</code>.
     */
    public final TableField<TdBrojeviRecord, Integer> IDPRO = createField(DSL.name("idpro"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>automate_orders.td_brojevi.nazivpro</code>.
     */
    public final TableField<TdBrojeviRecord, String> NAZIVPRO = createField(DSL.name("nazivpro"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>automate_orders.td_brojevi.vrsta</code>.
     */
    public final TableField<TdBrojeviRecord, Short> VRSTA = createField(DSL.name("vrsta"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>automate_orders.td_brojevi.nadjenpreko</code>.
     */
    public final TableField<TdBrojeviRecord, String> NADJENPREKO = createField(DSL.name("nadjenpreko"), org.jooq.impl.SQLDataType.VARCHAR(25), this, "");

    /**
     * Create a <code>automate_orders.td_brojevi</code> table reference
     */
    public TdBrojevi() {
        this(DSL.name("td_brojevi"), null);
    }

    /**
     * Create an aliased <code>automate_orders.td_brojevi</code> table reference
     */
    public TdBrojevi(String alias) {
        this(DSL.name(alias), TD_BROJEVI);
    }

    /**
     * Create an aliased <code>automate_orders.td_brojevi</code> table reference
     */
    public TdBrojevi(Name alias) {
        this(alias, TD_BROJEVI);
    }

    private TdBrojevi(Name alias, Table<TdBrojeviRecord> aliased) {
        this(alias, aliased, null);
    }

    private TdBrojevi(Name alias, Table<TdBrojeviRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TdBrojevi(Table<O> child, ForeignKey<O, TdBrojeviRecord> key) {
        super(child, key, TD_BROJEVI);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TD_BROJEVI_INDEX1, Indexes.TD_BROJEVI_INDEX2, Indexes.TD_BROJEVI_INDEX3, Indexes.TD_BROJEVI_INDEX4, Indexes.TD_BROJEVI_INDEX5, Indexes.TD_BROJEVI_PRIMARY);
    }

    @Override
    public UniqueKey<TdBrojeviRecord> getPrimaryKey() {
        return Keys.KEY_TD_BROJEVI_PRIMARY;
    }

    @Override
    public List<UniqueKey<TdBrojeviRecord>> getKeys() {
        return Arrays.<UniqueKey<TdBrojeviRecord>>asList(Keys.KEY_TD_BROJEVI_PRIMARY);
    }

    @Override
    public TdBrojevi as(String alias) {
        return new TdBrojevi(DSL.name(alias), this);
    }

    @Override
    public TdBrojevi as(Name alias) {
        return new TdBrojevi(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TdBrojevi rename(String name) {
        return new TdBrojevi(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TdBrojevi rename(Name name) {
        return new TdBrojevi(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, String, String, String, Integer, String, Short, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
