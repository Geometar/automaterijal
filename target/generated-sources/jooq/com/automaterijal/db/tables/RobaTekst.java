/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.RobaTekstRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RobaTekst extends TableImpl<RobaTekstRecord> {

    private static final long serialVersionUID = -1822961734;

    /**
     * The reference instance of <code>automate_orders.roba_tekst</code>
     */
    public static final RobaTekst ROBA_TEKST = new RobaTekst();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RobaTekstRecord> getRecordType() {
        return RobaTekstRecord.class;
    }

    /**
     * The column <code>automate_orders.roba_tekst.robaid</code>.
     */
    public final TableField<RobaTekstRecord, Integer> ROBAID = createField(DSL.name("robaid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.roba_tekst.tekst</code>.
     */
    public final TableField<RobaTekstRecord, String> TEKST = createField(DSL.name("tekst"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>automate_orders.roba_tekst</code> table reference
     */
    public RobaTekst() {
        this(DSL.name("roba_tekst"), null);
    }

    /**
     * Create an aliased <code>automate_orders.roba_tekst</code> table reference
     */
    public RobaTekst(String alias) {
        this(DSL.name(alias), ROBA_TEKST);
    }

    /**
     * Create an aliased <code>automate_orders.roba_tekst</code> table reference
     */
    public RobaTekst(Name alias) {
        this(alias, ROBA_TEKST);
    }

    private RobaTekst(Name alias, Table<RobaTekstRecord> aliased) {
        this(alias, aliased, null);
    }

    private RobaTekst(Name alias, Table<RobaTekstRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RobaTekst(Table<O> child, ForeignKey<O, RobaTekstRecord> key) {
        super(child, key, ROBA_TEKST);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ROBA_TEKST_PRIMARY);
    }

    @Override
    public UniqueKey<RobaTekstRecord> getPrimaryKey() {
        return Keys.KEY_ROBA_TEKST_PRIMARY;
    }

    @Override
    public List<UniqueKey<RobaTekstRecord>> getKeys() {
        return Arrays.<UniqueKey<RobaTekstRecord>>asList(Keys.KEY_ROBA_TEKST_PRIMARY);
    }

    @Override
    public RobaTekst as(String alias) {
        return new RobaTekst(DSL.name(alias), this);
    }

    @Override
    public RobaTekst as(Name alias) {
        return new RobaTekst(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RobaTekst rename(String name) {
        return new RobaTekst(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RobaTekst rename(Name name) {
        return new RobaTekst(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
