/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.TdMotoriRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TdMotori extends TableImpl<TdMotoriRecord> {

    private static final long serialVersionUID = 462951099;

    /**
     * The reference instance of <code>automate_orders.td_motori</code>
     */
    public static final TdMotori TD_MOTORI = new TdMotori();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TdMotoriRecord> getRecordType() {
        return TdMotoriRecord.class;
    }

    /**
     * The column <code>automate_orders.td_motori.id</code>.
     */
    public final TableField<TdMotoriRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>automate_orders.td_motori.idtipa</code>.
     */
    public final TableField<TdMotoriRecord, Integer> IDTIPA = createField(DSL.name("idtipa"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>automate_orders.td_motori.ideng</code>.
     */
    public final TableField<TdMotoriRecord, Integer> IDENG = createField(DSL.name("ideng"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>automate_orders.td_motori.motor</code>.
     */
    public final TableField<TdMotoriRecord, String> MOTOR = createField(DSL.name("motor"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>automate_orders.td_motori.braid</code>.
     */
    public final TableField<TdMotoriRecord, Integer> BRAID = createField(DSL.name("braid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>automate_orders.td_motori</code> table reference
     */
    public TdMotori() {
        this(DSL.name("td_motori"), null);
    }

    /**
     * Create an aliased <code>automate_orders.td_motori</code> table reference
     */
    public TdMotori(String alias) {
        this(DSL.name(alias), TD_MOTORI);
    }

    /**
     * Create an aliased <code>automate_orders.td_motori</code> table reference
     */
    public TdMotori(Name alias) {
        this(alias, TD_MOTORI);
    }

    private TdMotori(Name alias, Table<TdMotoriRecord> aliased) {
        this(alias, aliased, null);
    }

    private TdMotori(Name alias, Table<TdMotoriRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TdMotori(Table<O> child, ForeignKey<O, TdMotoriRecord> key) {
        super(child, key, TD_MOTORI);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TD_MOTORI_PRIMARY, Indexes.TD_MOTORI_TIPENG);
    }

    @Override
    public Identity<TdMotoriRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TD_MOTORI;
    }

    @Override
    public UniqueKey<TdMotoriRecord> getPrimaryKey() {
        return Keys.KEY_TD_MOTORI_PRIMARY;
    }

    @Override
    public List<UniqueKey<TdMotoriRecord>> getKeys() {
        return Arrays.<UniqueKey<TdMotoriRecord>>asList(Keys.KEY_TD_MOTORI_PRIMARY, Keys.KEY_TD_MOTORI_TIPENG);
    }

    @Override
    public TdMotori as(String alias) {
        return new TdMotori(DSL.name(alias), this);
    }

    @Override
    public TdMotori as(Name alias) {
        return new TdMotori(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TdMotori rename(String name) {
        return new TdMotori(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TdMotori rename(Name name) {
        return new TdMotori(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
