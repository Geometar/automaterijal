/*
 * This file is generated by jOOQ.
 */
package com.automaterijal.db.tables;


import com.automaterijal.db.AutomateOrders;
import com.automaterijal.db.Indexes;
import com.automaterijal.db.Keys;
import com.automaterijal.db.tables.records.TipvozilaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tipvozila extends TableImpl<TipvozilaRecord> {

    private static final long serialVersionUID = 648554413;

    /**
     * The reference instance of <code>automate_orders.tipvozila</code>
     */
    public static final Tipvozila TIPVOZILA = new Tipvozila();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TipvozilaRecord> getRecordType() {
        return TipvozilaRecord.class;
    }

    /**
     * The column <code>automate_orders.tipvozila.id</code>.
     */
    public final TableField<TipvozilaRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>automate_orders.tipvozila.naziv</code>.
     */
    public final TableField<TipvozilaRecord, String> NAZIV = createField(DSL.name("naziv"), org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>automate_orders.tipvozila.markaid</code>.
     */
    public final TableField<TipvozilaRecord, Integer> MARKAID = createField(DSL.name("markaid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>automate_orders.tipvozila</code> table reference
     */
    public Tipvozila() {
        this(DSL.name("tipvozila"), null);
    }

    /**
     * Create an aliased <code>automate_orders.tipvozila</code> table reference
     */
    public Tipvozila(String alias) {
        this(DSL.name(alias), TIPVOZILA);
    }

    /**
     * Create an aliased <code>automate_orders.tipvozila</code> table reference
     */
    public Tipvozila(Name alias) {
        this(alias, TIPVOZILA);
    }

    private Tipvozila(Name alias, Table<TipvozilaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tipvozila(Name alias, Table<TipvozilaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Tipvozila(Table<O> child, ForeignKey<O, TipvozilaRecord> key) {
        super(child, key, TIPVOZILA);
    }

    @Override
    public Schema getSchema() {
        return AutomateOrders.AUTOMATE_ORDERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TIPVOZILA_PRIMARY);
    }

    @Override
    public UniqueKey<TipvozilaRecord> getPrimaryKey() {
        return Keys.KEY_TIPVOZILA_PRIMARY;
    }

    @Override
    public List<UniqueKey<TipvozilaRecord>> getKeys() {
        return Arrays.<UniqueKey<TipvozilaRecord>>asList(Keys.KEY_TIPVOZILA_PRIMARY);
    }

    @Override
    public Tipvozila as(String alias) {
        return new Tipvozila(DSL.name(alias), this);
    }

    @Override
    public Tipvozila as(Name alias) {
        return new Tipvozila(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tipvozila rename(String name) {
        return new Tipvozila(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tipvozila rename(Name name) {
        return new Tipvozila(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
