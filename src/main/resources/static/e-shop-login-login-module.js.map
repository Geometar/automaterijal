{"version":3,"sources":["webpack:///./src/app/e-shop/login/login.component.css","webpack:///./src/app/e-shop/login/login.component.html","webpack:///./src/app/e-shop/login/login.component.ts","webpack:///./src/app/e-shop/login/login.module.ts"],"names":[],"mappings":"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","file":"e-shop-login-login-module.js","sourcesContent":["module.exports = \".flex-login {\\r\\n    margin-top: 10%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n.login-form {\\r\\n    width: 400px;\\r\\n    justify-content: center;\\r\\n}\\r\\nh1 {\\r\\n    text-align: center;\\r\\n\\ttext-transform: uppercase;\\r\\n}\\r\\nbutton{\\r\\n    margin:auto;\\r\\n    display:block;\\r\\n}\\r\\np {\\r\\n      text-align: center;\\r\\n}\\r\\n.is-invalid {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n.upozorenje {\\r\\n    text-align: left;\\r\\n    font-size: 0.8em;\\r\\n    margin:0px !important;\\r\\n    color: red;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"flex-login\\\">\\r\\n\\t\\t<div class=\\\"login-form\\\">\\r\\n\\t\\t\\t<h1>Prijavi se</h1>\\r\\n\\t\\t\\t<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"!uspesnoLogovanje\\\">\\r\\n\\t\\t\\t\\t<p>Korisničko ime ili šifra je pogrešna.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"uspesnoLogovanje && partner && partner.webStatus === 4\\\">\\r\\n\\t\\t\\t\\t<p>Vaš nalog trenutno ima zabranu pristupa.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<form role=\\\"form\\\" (keydown)=\\\"enterNaFormi($event)\\\" [formGroup]=\\\"registerForm\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Korisničko ime\\\" id=\\\"username\\\"\\r\\n\\t\\t\\t\\t\\t name=\\\"username\\\" [(ngModel)]=\\\"credentials.username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.controls.username.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerForm.controls.username.errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.username.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Korisničko ime je obavezno</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.username.errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Korisničko ime mora imati minimalno 3 karaktera</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Šifra\\\" id=\\\"password\\\"\\r\\n\\t\\t\\t\\t\\t name=\\\"password\\\" [(ngModel)]=\\\"credentials.password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.controls.password.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerForm.controls.password.errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.password.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.password.errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\r\\n\\t\\t\\t\\t\\t<button mat-button type=\\\"button\\\" (click)=\\\"otvoriResgracijaDialog()\\\" class=\\\"boja-glavna-100\\\">Nemate nalog?</button>\\r\\n\\t\\t\\t\\t\\t<button mat-raised-button (click)=\\\"login()\\\" class=\\\"rounded button-glavni-100\\\">Prijava</button>\\r\\n\\t\\t\\t\\t\\t<button mat-button type=\\\"button\\\" (click)=\\\"otvoriZaboravljenuSifruDialog()\\\" class=\\\"boja-glavna-100\\\">Zaboravili ste šifru?</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Credentials, Partner } from '../model/dto';\r\nimport { LoginService } from '../service/login.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { RegistracijaModalComponent } from 'src/app/shared/modal/registracija-modal/registracija-modal.component';\r\nimport { ZaboravljenaSifraModalComponent } from 'src/app/shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from '../service/data/local-storage.service';\r\nimport { PrvoLogovanjeModalComponent } from 'src/app/shared/modal/prvo-logovanje-modal/prvo-logovanje-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public registerForm: FormGroup;\r\n  public submitted = false;\r\n  public credentials: Credentials = {};\r\n  public partner: Partner;\r\n  public uspesnoLogovanje = true;\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private formBuilder: FormBuilder,\r\n    public dataService: LocalStorageService,\r\n    public router: Router,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      password: ['', [Validators.required, Validators.minLength(3)]]\r\n    });\r\n    this.uspesnoLogovanje = true;\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  login() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    this.loginServis.ulogujSe(this.credentials).subscribe(() => {\r\n      this.vratiKorisnika();\r\n    });\r\n  }\r\n\r\n  vratiKorisnika() {\r\n    this.loginServis.vratiUlogovanogKorisnika(true)\r\n      .subscribe((res: Partner) => {\r\n        if (res !== null) {\r\n          this.partner = res;\r\n          this.uspesnoLogovanje = true;\r\n          if (this.partner.webStatus !== 4) {\r\n            this.router.navigateByUrl('naslovna');\r\n            this.loginServis.setDaLiJeUserLogovan(true);\r\n            this.loginServis.setUlogovanogPartner(this.partner);\r\n            if (this.partner.loginCount === 0) {\r\n              this.dialog.open(PrvoLogovanjeModalComponent, {\r\n                width: '600px',\r\n                data: this.partner,\r\n                disableClose: true\r\n              });\r\n            }\r\n          } else {\r\n            this.loginServis.setDaLiJeUserLogovan(false);\r\n            this.dataService.logout();\r\n          }\r\n        } else {\r\n          this.uspesnoLogovanje = false;\r\n          this.loginServis.setDaLiJeUserLogovan(false);\r\n          this.dataService.logout();\r\n        }\r\n      });\r\n  }\r\n\r\n  otvoriResgracijaDialog() {\r\n    this.dialog.open(RegistracijaModalComponent, {\r\n      width: '400px'\r\n    });\r\n  }\r\n\r\n  otvoriZaboravljenuSifruDialog() {\r\n    this.dialog.open(ZaboravljenaSifraModalComponent, {\r\n      width: '400px'\r\n    });\r\n  }\r\n\r\n  enterNaFormi(event) {\r\n    if (event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/shared/material/material.module';\nimport { SharedMagacinModule } from '../magacin/shared-components/shared-magacin.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MaterialModule,\n    SharedMagacinModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginComponent],\n  exports: [LoginComponent]\n})\nexport class LoginModule { }\n"],"sourceRoot":""}