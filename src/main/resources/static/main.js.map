{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/e-commerce/dasboard/dasboard.component.css","webpack:///./src/app/e-commerce/dasboard/dasboard.component.html","webpack:///./src/app/e-commerce/dasboard/dasboard.component.ts","webpack:///./src/app/e-commerce/kontakt/kontakt.component.html","webpack:///./src/app/e-commerce/kontakt/kontakt.component.scss","webpack:///./src/app/e-commerce/kontakt/kontakt.component.ts","webpack:///./src/app/e-commerce/model/dto.ts","webpack:///./src/app/e-shop/faktura/faktura-detalji/faktura-detalji.component.html","webpack:///./src/app/e-shop/faktura/faktura-detalji/faktura-detalji.component.scss","webpack:///./src/app/e-shop/faktura/faktura-detalji/faktura-detalji.component.ts","webpack:///./src/app/e-shop/faktura/faktura.component.html","webpack:///./src/app/e-shop/faktura/faktura.component.scss","webpack:///./src/app/e-shop/faktura/faktura.component.ts","webpack:///./src/app/e-shop/korpa/izmena-kolicine-modal/izmena-kolicine-modal.component.html","webpack:///./src/app/e-shop/korpa/izmena-kolicine-modal/izmena-kolicine-modal.component.scss","webpack:///./src/app/e-shop/korpa/izmena-kolicine-modal/izmena-kolicine-modal.component.ts","webpack:///./src/app/e-shop/korpa/korpa.component.html","webpack:///./src/app/e-shop/korpa/korpa.component.scss","webpack:///./src/app/e-shop/korpa/korpa.component.ts","webpack:///./src/app/e-shop/korpa/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.html","webpack:///./src/app/e-shop/korpa/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.scss","webpack:///./src/app/e-shop/korpa/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.ts","webpack:///./src/app/e-shop/login/login.component.css","webpack:///./src/app/e-shop/login/login.component.html","webpack:///./src/app/e-shop/login/login.component.ts","webpack:///./src/app/e-shop/login/registracija-modal/registracija-modal.component.html","webpack:///./src/app/e-shop/login/registracija-modal/registracija-modal.component.scss","webpack:///./src/app/e-shop/login/registracija-modal/registracija-modal.component.ts","webpack:///./src/app/e-shop/login/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.html","webpack:///./src/app/e-shop/login/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.scss","webpack:///./src/app/e-shop/login/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.ts","webpack:///./src/app/e-shop/model/dto.ts","webpack:///./src/app/e-shop/model/konstante.ts","webpack:///./src/app/e-shop/model/page.ts","webpack:///./src/app/e-shop/model/porudzbenica.ts","webpack:///./src/app/e-shop/partner/partner.component.html","webpack:///./src/app/e-shop/partner/partner.component.scss","webpack:///./src/app/e-shop/partner/partner.component.ts","webpack:///./src/app/e-shop/resetovanje-sfire/resetovanje-sfire.component.html","webpack:///./src/app/e-shop/resetovanje-sfire/resetovanje-sfire.component.scss","webpack:///./src/app/e-shop/resetovanje-sfire/resetovanje-sfire.component.ts","webpack:///./src/app/e-shop/roba/akumulatori/akumulatori.component.css","webpack:///./src/app/e-shop/roba/akumulatori/akumulatori.component.html","webpack:///./src/app/e-shop/roba/akumulatori/akumulatori.component.ts","webpack:///./src/app/e-shop/roba/filteri/filteri.component.css","webpack:///./src/app/e-shop/roba/filteri/filteri.component.html","webpack:///./src/app/e-shop/roba/filteri/filteri.component.ts","webpack:///./src/app/e-shop/roba/ostalo/kategorija-specificna/kategorija-specificna.component.html","webpack:///./src/app/e-shop/roba/ostalo/kategorija-specificna/kategorija-specificna.component.scss","webpack:///./src/app/e-shop/roba/ostalo/kategorija-specificna/kategorija-specificna.component.ts","webpack:///./src/app/e-shop/roba/ostalo/ostalo.component.html","webpack:///./src/app/e-shop/roba/ostalo/ostalo.component.scss","webpack:///./src/app/e-shop/roba/ostalo/ostalo.component.ts","webpack:///./src/app/e-shop/roba/roba.component.css","webpack:///./src/app/e-shop/roba/roba.component.html","webpack:///./src/app/e-shop/roba/roba.component.ts","webpack:///./src/app/e-shop/roba/ulja/antifriz/antifriz.component.css","webpack:///./src/app/e-shop/roba/ulja/antifriz/antifriz.component.html","webpack:///./src/app/e-shop/roba/ulja/antifriz/antifriz.component.ts","webpack:///./src/app/e-shop/roba/ulja/industrijska/industrijska.component.css","webpack:///./src/app/e-shop/roba/ulja/industrijska/industrijska.component.html","webpack:///./src/app/e-shop/roba/ulja/industrijska/industrijska.component.ts","webpack:///./src/app/e-shop/roba/ulja/kociona/kociona.component.css","webpack:///./src/app/e-shop/roba/ulja/kociona/kociona.component.html","webpack:///./src/app/e-shop/roba/ulja/kociona/kociona.component.ts","webpack:///./src/app/e-shop/roba/ulja/menjacko/menjacko.component.css","webpack:///./src/app/e-shop/roba/ulja/menjacko/menjacko.component.html","webpack:///./src/app/e-shop/roba/ulja/menjacko/menjacko.component.ts","webpack:///./src/app/e-shop/roba/ulja/motorna/motorna.component.css","webpack:///./src/app/e-shop/roba/ulja/motorna/motorna.component.html","webpack:///./src/app/e-shop/roba/ulja/motorna/motorna.component.ts","webpack:///./src/app/e-shop/roba/ulja/ulja.component.css","webpack:///./src/app/e-shop/roba/ulja/ulja.component.html","webpack:///./src/app/e-shop/roba/ulja/ulja.component.ts","webpack:///./src/app/e-shop/service/data/data.service.ts","webpack:///./src/app/e-shop/service/data/local-storage.service.ts","webpack:///./src/app/e-shop/service/faktura.service.ts","webpack:///./src/app/e-shop/service/login.service.ts","webpack:///./src/app/e-shop/service/partner.service.ts","webpack:///./src/app/e-shop/service/proizvodjac.service.ts","webpack:///./src/app/e-shop/service/roba.service.ts","webpack:///./src/app/e-shop/utils/app-utils.service.ts","webpack:///./src/app/navigacija/logout-modal/logout-modal.component.html","webpack:///./src/app/navigacija/logout-modal/logout-modal.component.scss","webpack:///./src/app/navigacija/logout-modal/logout-modal.component.ts","webpack:///./src/app/navigacija/navigacija.component.html","webpack:///./src/app/navigacija/navigacija.component.scss","webpack:///./src/app/navigacija/navigacija.component.ts","webpack:///./src/app/pipes/DatePipe.ts","webpack:///./src/app/pipes/EmptyPipe.ts","webpack:///./src/app/pipes/PrevodilacPipe.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/shared/service/email.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilteriComponent } from './e-shop/roba/filteri/filteri.component';\r\nimport { AkumulatoriComponent } from './e-shop/roba/akumulatori/akumulatori.component';\r\nimport { UljaComponent } from './e-shop/roba/ulja/ulja.component';\r\nimport { KorpaComponent } from './e-shop/korpa/korpa.component';\r\nimport { LoginComponent } from './e-shop/login/login.component';\r\nimport { FakturaComponent } from './e-shop/faktura/faktura.component';\r\nimport { FakturaDetaljiComponent } from './e-shop/faktura/faktura-detalji/faktura-detalji.component';\r\nimport { OstaloComponent } from './e-shop/roba/ostalo/ostalo.component';\r\nimport { KategorijaSpecificnaComponent } from './e-shop/roba/ostalo/kategorija-specificna/kategorija-specificna.component';\r\nimport { PartnerComponent } from './e-shop/partner/partner.component';\r\nimport { RobaComponent } from './e-shop/roba/roba.component';\r\nimport { DasboardComponent } from './e-commerce/dasboard/dasboard.component';\r\nimport { ResetovanjeSfireComponent } from './e-shop/resetovanje-sfire/resetovanje-sfire.component';\r\nimport { KontaktComponent } from './e-commerce/kontakt/kontakt.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/naslovna', pathMatch: 'full' },\r\n  {path: 'naslovna' , component: DasboardComponent},\r\n  {path: 'o-nama' , component: DasboardComponent},\r\n  {path: 'kontakt' , component: KontaktComponent},\r\n  {path: 'roba' , component: RobaComponent},\r\n  {path: 'filteri' , component: FilteriComponent},\r\n  {path: 'ulja' , component: UljaComponent},\r\n  {path: 'akumulatori' , component: AkumulatoriComponent},\r\n  {path: 'ostalo' , component: OstaloComponent},\r\n  {path: 'ostalo/:id', component: KategorijaSpecificnaComponent},\r\n  {path: 'login' , component: LoginComponent},\r\n  {path: 'kontakt' , component: DasboardComponent},\r\n  {path: 'licni-podaci' , component: PartnerComponent},\r\n  {path: 'porudzbenice', component: FakturaComponent},\r\n  {path: 'porudzbenice/:id', component: FakturaDetaljiComponent},\r\n  {path: 'korpa', component: KorpaComponent},\r\n  {path: 'reset-sifre/:id', component: ResetovanjeSfireComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<app-navigacija></app-navigacija>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Automaterijal';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { StorageServiceModule } from 'angular-webstorage-service';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './shared/material/material.module';\nimport { NavigacijaComponent } from './navigacija/navigacija.component';\nimport { RobaComponent } from './e-shop/roba/roba.component';\nimport { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FilteriComponent } from './e-shop/roba/filteri/filteri.component';\nimport { AkumulatoriComponent } from './e-shop/roba/akumulatori/akumulatori.component';\nimport { UljaComponent } from './e-shop/roba/ulja/ulja.component';\nimport { MotornaComponent } from './e-shop/roba/ulja/motorna/motorna.component';\nimport { MenjackoComponent } from './e-shop/roba/ulja/menjacko/menjacko.component';\nimport { KocionaComponent } from './e-shop/roba/ulja/kociona/kociona.component';\nimport { AntifrizComponent } from './e-shop/roba/ulja/antifriz/antifriz.component';\nimport { IndustrijskaComponent } from './e-shop/roba/ulja/industrijska/industrijska.component';\nimport { KorpaComponent } from './e-shop/korpa/korpa.component';\nimport { IzmenaKolicineModalComponent } from './e-shop/korpa/izmena-kolicine-modal/izmena-kolicine-modal.component';\nimport { LoginComponent } from './e-shop/login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LogoutModalComponent } from './navigacija/logout-modal/logout-modal.component';\nimport { FakturaComponent } from './e-shop/faktura/faktura.component';\nimport { TranslatePipe } from './pipes/PrevodilacPipe';\nimport { EmptyPipe } from './pipes/EmptyPipe';\nimport { FakturaDetaljiComponent } from './e-shop/faktura/faktura-detalji/faktura-detalji.component';\nimport { DatePipe } from './pipes/DatePipe';\nimport { OstaloComponent } from './e-shop/roba/ostalo/ostalo.component';\nimport { KategorijaSpecificnaComponent } from './e-shop/roba/ostalo/kategorija-specificna/kategorija-specificna.component';\nimport { PartnerComponent } from './e-shop/partner/partner.component';\nimport { UspesnoPorucivanjeModalComponent } from './e-shop/korpa/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component';\nimport { DasboardComponent } from './e-commerce/dasboard/dasboard.component';\nimport { RegistracijaModalComponent } from './e-shop/login/registracija-modal/registracija-modal.component';\nimport { ZaboravljenaSifraModalComponent } from './e-shop/login/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component';\nimport { ResetovanjeSfireComponent } from './e-shop/resetovanje-sfire/resetovanje-sfire.component';\nimport { KontaktComponent } from './e-commerce/kontakt/kontakt.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigacijaComponent,\n    RobaComponent,\n    DasboardComponent,\n    FilteriComponent,\n    AkumulatoriComponent,\n    UljaComponent,\n    MotornaComponent,\n    MenjackoComponent,\n    KocionaComponent,\n    AntifrizComponent,\n    IndustrijskaComponent,\n    KorpaComponent,\n    IzmenaKolicineModalComponent,\n    LoginComponent,\n    LogoutModalComponent,\n    FakturaComponent,\n    TranslatePipe,\n    EmptyPipe,\n    DatePipe,\n    FakturaDetaljiComponent,\n    OstaloComponent,\n    KategorijaSpecificnaComponent,\n    PartnerComponent,\n    UspesnoPorucivanjeModalComponent,\n    RegistracijaModalComponent,\n    ZaboravljenaSifraModalComponent,\n    ResetovanjeSfireComponent,\n    KontaktComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    StorageServiceModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    ZaboravljenaSifraModalComponent,\n    RegistracijaModalComponent,\n    IzmenaKolicineModalComponent,\n    LogoutModalComponent,\n    UspesnoPorucivanjeModalComponent]\n})\nexport class AppModule { }\n","module.exports = \".dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\"","module.exports = \"<main>\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards | async\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</main>\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dasboard',\n  templateUrl: './dasboard.component.html',\n  styleUrls: ['./dasboard.component.css']\n})\nexport class DasboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","module.exports = \"<main>\\n  <h1>Kontaktirajte nas</h1>\\n  <div class=\\\"pozadina-bela\\\">\\n    <div class=\\\"d-flex flex-fill flex-column flex-lg-row informacije\\\">\\n      <div class=\\\"align-self-center informacije-deo\\\">\\n        <h3>Informacije</h3>\\n      </div>\\n      <div class=\\\"granica-informacije\\\"></div>\\n      <div class=\\\"flex-fill informacije-deo\\\">\\n        <i class=\\\"material-icons  boja-glavna-100\\\">\\n          place\\n        </i>\\n        <div class=\\\"adresa\\\">\\n          <p>Prvomajska 61</p>\\n          <p>15000 Šabac</p>\\n        </div>\\n      </div>\\n      <div class=\\\"granica-informacije\\\"></div>\\n      <div class=\\\"flex-fill informacije-deo\\\">\\n        <i class=\\\"material-icons  boja-glavna-100\\\">\\n          access_alarm\\n        </i>\\n        <div class=\\\"d-flex flex-row adresa\\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Radnim danom:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> 08-18h</li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex flex-row \\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Subotom:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> 09-15h</li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex flex-row \\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Nedelja:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li>Neradan dan</li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"granica-informacije\\\"></div>\\n      <div class=\\\"flex-fill informacije-deo\\\">\\n        <i class=\\\"material-icons boja-glavna-100\\\">\\n          phone\\n        </i>\\n        <div class=\\\"d-flex flex-row \\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Malpoprodaja:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> 015/334-630</li>\\n              <li> 015/310-049 </li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex flex-row veleprodaja-dole\\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Veleprodaja:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> 015/319-000</li>\\n              <li> 015/319-001 Fax </li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex flex-row veleprodaja-dole\\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Email:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> office@automaterijal.com</li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"google-mapa\\\">\\n    <iframe src=\\\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d2833.8797026959655!2d19.695872!3d44.742471!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x6fb532b6b846f3cf!2sAutomaterijal!5e0!3m2!1sen!2sus!4v1548771004118\\\"\\n      frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n  </div>\\n\\n  <div class=\\\"pozadina-bela\\\">\\n    <div class=\\\"d-flex flex-fill flex-column flex-lg-row informacije\\\">\\n      <div class=\\\"flex-fill poruke-deo\\\">\\n        <h2>Pošalji poruku</h2>\\n        <div class=\\\"poruka-div\\\">\\n          <p class=\\\"poruka-informacije\\\">\\n            <i class=\\\"material-icons poruka\\\">\\n              mail_outline\\n            </i>\\n            Pošta </p>\\n          <p class=\\\"poruka-objasnjenje\\\"> office@automaterijal.com </p>\\n        </div>\\n        <div class=\\\"poruka-div\\\">\\n          <p class=\\\"poruka-informacije\\\">\\n            <i class=\\\"material-icons poruka\\\">\\n              chat_bubble_outline\\n            </i>\\n            Pratite nas </p>\\n          <div>\\n            <a href=\\\"https://sr-rs.facebook.com/automaterijal/\\\" target=\\\"_blank\\\" mat-fab id=\\\"drustvena-mreza\\\" matTooltip=\\\"Facebook\\\"\\n              color=\\\"primary\\\">f</a>\\n            <a href=\\\"https://www.instagram.com/automaterijal/\\\" target=\\\"_blank\\\" mat-fab id=\\\"drustvena-mreza\\\" class=\\\"razmak-drus\\\"\\n              matTooltip=\\\"Instagram\\\" color=\\\"primary\\\">\\n              <i class=\\\"material-icons instagram\\\">\\n                photo_camera\\n              </i>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"flex-fill\\\">\\n        <form role=\\\"form\\\" [formGroup]=\\\"porukaForm\\\">\\n          <div class=\\\"forma-poruke\\\">\\n            <table cellspacing=\\\"0\\\">\\n              <tr>\\n                <td>\\n                  <mat-form-field>\\n                    <input matInput formControlName=\\\"ime\\\" placeholder=\\\"Ime\\\">\\n                  </mat-form-field>\\n                </td>\\n                <td>\\n                  <mat-form-field>\\n                    <input matInput formControlName=\\\"prezime\\\" placeholder=\\\"Prezime\\\">\\n                  </mat-form-field>\\n                </td>\\n              </tr>\\n            </table>\\n            <table cellspacing=\\\"0\\\">\\n              <tr>\\n                <td>\\n                  <mat-form-field>\\n                    <input matInput formControlName=\\\"firma\\\" placeholder=\\\"Ima firme\\\">\\n                  </mat-form-field>\\n                </td>\\n                <td>\\n                  <mat-form-field>\\n                    <input matInput type=\\\"tel\\\" formControlName=\\\"telefon\\\" placeholder=\\\"Broj telefona\\\">\\n                  </mat-form-field>\\n                </td>\\n              </tr>\\n            </table>\\n            <div>\\n              <mat-form-field class=\\\"duzina-input\\\">\\n                <input matInput type=\\\"email\\\" formControlName=\\\"posta\\\" placeholder=\\\"Pošta\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"porukaSubmited && p.posta.errors\\\">\\n                <div *ngIf=\\\"p.posta.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Pošta je obavezna</p>\\n                </div>\\n                <div *ngIf=\\\"p.posta.errors.email\\\">\\n                  <p class=\\\"upozorenje\\\">Pošta nije validna</p>\\n                </div>\\n              </div>\\n            </div>\\n            <div>\\n              <mat-form-field class=\\\"duzina-input\\\">\\n                <textarea matInput formControlName=\\\"poruka\\\" rows=\\\"8\\\" placeholder=\\\"Poruka\\\"></textarea>\\n              </mat-form-field>\\n              <div *ngIf=\\\"porukaSubmited && p.poruka.errors\\\">\\n                <div *ngIf=\\\"p.poruka.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Poruka je obavezna</p>\\n                </div>\\n                <div *ngIf=\\\"p.poruka.errors.minlength\\\">\\n                  <p class=\\\"upozorenje\\\">Poruka mora imate minimalno 3 karaktera</p>\\n                </div>\\n              </div>\\n            </div>\\n            <button mat-flat-button class=\\\"duzina-input\\\" (click)=\\\"posaljiPoruku()\\\" color=\\\"primary\\\">Pošalji</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"h1 {\\n  text-align: center;\\n  color: #273747;\\n  font-size: 35px;\\n  margin-top: 30px; }\\n\\nh2 {\\n  text-align: left;\\n  color: #345cac !important;\\n  margin-top: 15px;\\n  padding-left: 25px; }\\n\\nh3 {\\n  color: #345cac; }\\n\\nul {\\n  list-style-type: none;\\n  display: inline;\\n  text-align: left;\\n  margin: 0px;\\n  padding: 0px; }\\n\\nli {\\n  color: #263238;\\n  font-size: 16px;\\n  font-weight: 400; }\\n\\np {\\n  color: #263238;\\n  font-size: 18px; }\\n\\ntd {\\n  margin: 0px !important;\\n  padding: 0px !important; }\\n\\niframe {\\n  width: 80%;\\n  height: 450px; }\\n\\n.informacije {\\n  width: 80%;\\n  margin-left: 10%;\\n  margin-top: 50px; }\\n\\n.informacije-deo {\\n  padding: 10px;\\n  width: 33%;\\n  text-align: center;\\n  font-weight: 500; }\\n\\n.poruka-div {\\n  text-align: left;\\n  margin-top: 40px; }\\n\\n.poruka {\\n  color: #345cac !important;\\n  font-size: 25px;\\n  position: relative;\\n  top: 5px; }\\n\\n.poruke-deo {\\n  padding-left: 9%; }\\n\\n.poruka-informacije {\\n  display: inline;\\n  font-size: 16px; }\\n\\n.poruka-objasnjenje {\\n  font-size: 17px;\\n  color: #345cac !important; }\\n\\n#drustvena-mreza {\\n  width: 45px;\\n  height: 45px;\\n  font-size: 30px; }\\n\\n#drustvena-mreza:hover {\\n  background-color: #547aa1; }\\n\\n.razmak-drus {\\n  margin-left: 10px; }\\n\\n.instagram {\\n  top: -4px;\\n  position: relative; }\\n\\n.mat-fab .mat-button-wrapper {\\n  padding: 0px !important;\\n  display: inline-block;\\n  line-height: 24px;\\n  border-radius: 50%; }\\n\\n.granica-informacije {\\n  border-right: 1px solid #cfd8dc;\\n  border-left: 1px solid #cfd8dc;\\n  margin-top: 30px;\\n  height: 150px; }\\n\\n.telefoni {\\n  color: #263238;\\n  font-family: inherit;\\n  text-align: left;\\n  font-size: 17px; }\\n\\n.sirina-telefona {\\n  width: 125px;\\n  margin-left: 5%;\\n  text-align: left; }\\n\\n.veleprodaja-dole {\\n  margin-top: 15px; }\\n\\n.adresa {\\n  margin-top: 10px; }\\n\\n.google-mapa {\\n  margin-top: 5px;\\n  margin-left: 15%;\\n  height: 405px; }\\n\\n.forma-poruke {\\n  box-shadow: 0 0px 15px 2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  width: 500px;\\n  padding: 10px;\\n  margin-top: 20px;\\n  margin-left: 10%;\\n  margin-bottom: 50px;\\n  text-align: center; }\\n\\n.duzina-input {\\n  width: 350px; }\\n\\n.upozorenje {\\n  text-align: left;\\n  font-family: sans-serif;\\n  font-size: 12px !important;\\n  color: red;\\n  margin-top: -20px;\\n  margin-bottom: 0px;\\n  padding-left: 65px; }\\n\\n@media only screen and (max-width: 1000px) {\\n  iframe {\\n    width: 100%;\\n    height: 350px; }\\n  .google-mapa {\\n    height: 305px;\\n    margin-top: 5px;\\n    margin-left: 0px; }\\n  .granica-informacije {\\n    border-right: 0px solid #cfd8dc !important;\\n    border-left: 0px solid #cfd8dc !important;\\n    height: 60%; }\\n  .informacije[_ngcontent-c9] {\\n    width: 100%;\\n    margin-left: 0%;\\n    margin-top: 50px; }\\n  .informacije-deo {\\n    width: 100%;\\n    text-align: center;\\n    font-weight: 500; }\\n  .forma-poruke {\\n    box-shadow: 0 0px 0px 0px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n    width: 99%;\\n    padding: 0px;\\n    margin-left: 2px;\\n    margin-right: 2px;\\n    margin-top: 20px;\\n    margin-bottom: 50px;\\n    text-align: center; }\\n  .my-snack-bar {\\n    background-color: #b71c1c !important; } }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EmailService } from 'src/app/shared/service/email.service';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { MatSnackBar } from '@angular/material';\nimport { Poruka } from '../model/dto';\n\n@Component({\n  selector: 'app-kontakt',\n  templateUrl: './kontakt.component.html',\n  styleUrls: ['./kontakt.component.scss']\n})\nexport class KontaktComponent implements OnInit {\n  public porukaForm: FormGroup;\n  public porukaSubmited = false;\n  public mailUspesnoPoslat = false;\n\n  private alive = true;\n  public ucitavanje = false;\n\n  ngOnInit() {\n    this.inicijalizujForme();\n    }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private emailServis: EmailService,\n    public snackBar: MatSnackBar\n  ) {}\n\n  inicijalizujForme() {\n    this.porukaForm = this.formBuilder.group({\n      ime: [''],\n      prezime: [''],\n      firma: [''],\n      telefon: [''],\n      posta: ['', [Validators.required, Validators.email]],\n      poruka: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n\n  posaljiPoruku() {\n    this.porukaSubmited = true;\n    if (this.porukaForm.invalid) {\n      return;\n    }\n    const poruka = this.popuniPoruku();\n    this.emailServis.posaljiPoruku(poruka)\n    .pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) =>  throwError(error)),\n      finalize(() => this.ucitavanje = false)\n    ).subscribe(res => {\n      this.mailUspesnoPoslat = true;\n      console.log('Poruka uspesno poslat');\n      this.otvoriSnackBar('Poruka uspešno poslatata');\n    }, error => {\n      console.log('Error pri slanju poruke', error);\n      this.otvoriSnackBar('Poruka nije poslata, pokusajte kasnije.');\n    });\n  }\n\n  popuniPoruku(): Poruka {\n    const poruka = new Poruka();\n    poruka.ime = this.p.ime.value;\n    poruka.prezime = this.p.prezime.value;\n    poruka.firma = this.p.firma.value;\n    poruka.telefon = this.p.telefon.value;\n    poruka.posta = this.p.posta.value;\n    poruka.poruka = this.p.poruka.value;\n    return poruka;\n  }\n  // convenience getter for easy access to form fields\n  get p() { return this.porukaForm.controls; }\n\n\n  otvoriSnackBar(poruka: string) {\n    this.snackBar.open(poruka, '', {\n      duration: 2000\n    });\n  }\n  otvoriErrorSnackBar(poruka: string) {\n    this.snackBar.open(poruka, '', {\n      duration: 2000,\n      panelClass: ['my-snack-bar']\n    });\n  }\n}\n","export class Poruka {\r\n    ime?: string;\r\n    prezime?: string;\r\n    firma?: string;\r\n    telefon?: string;\r\n    posta?: string;\r\n    poruka?: string;\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <main>\\r\\n        <div *ngIf=\\\"faktura && fakturaDetalji && dataSource != null && dataSource.length > 0\\\">\\r\\n            <h1>Detalji fakture: {{faktura.orderId}}</h1>\\r\\n            <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\r\\n                <button class=\\\"button-glavni-100 nazad-button\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\r\\n                    <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"d-flex bd-highlight flex-sm-row flex-column detalji-div\\\">\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p *ngIf=\\\"faktura.status\\\" class=\\\"boja-siva-400\\\">Status: {{faktura.status.naziv}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Datum: {{faktura.vremePorucivanja | datum}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p *ngIf=\\\"faktura.nacinPlacanja\\\" class=\\\"boja-siva-400\\\">Nacin placanja:\\r\\n                            {{faktura.nacinPlacanja.naziv}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p *ngIf=\\\"faktura.nacinPrevoza\\\" class=\\\"boja-siva-400\\\">Nacin prevoza: {{\\\"prevoz_\\\" +\\r\\n                            faktura.nacinPrevoza.id | translate}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p *ngIf=\\\"faktura.adresa\\\" class=\\\"boja-siva-400\\\">Adresa: {{faktura.adresa.naziv}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n                <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                    <!-- Kataloski broj Column -->\\r\\n                    <ng-container matColumnDef=\\\"robaId\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Kataloski Broj </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2\\\">\\r\\n                                {{faktura.kataloskiBroj}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Kataloski broj Column -->\\r\\n                    <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\">\\r\\n                                {{faktura.proizvodjac.naziv}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Narucena Kolicina Column -->\\r\\n                    <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Narucena Kolicina</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\">\\r\\n                                {{faktura.kolicina}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Potvrdjena Kolicina Column -->\\r\\n                    <ng-container matColumnDef=\\\"potvrdjenaKolicina\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Potvrdjena Kolicina </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\">\\r\\n                                {{faktura.potvrdjenaKolicina}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Rabat Column -->\\r\\n                    <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Rabat </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\">\\r\\n                                {{faktura.rabat}}%\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Cena Column -->\\r\\n                    <ng-container matColumnDef=\\\"cena\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1 text-right iznos-margin\\\">\\r\\n                                {{faktura.cena | currency:\\\" \\\"}} RSD\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- tatus Column -->\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\">Status</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"text-center mat-body-1\\\">\\r\\n                                {{faktura.status.naziv}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <div class=\\\"d-flex flex-column flex-sm-row\\\">\\r\\n                    <div class=\\\"d-flex flex-fill justify-content-end\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"d-flex flex-fill justify-content-end\\\">\\r\\n                        <table class=\\\"table sirina-cena\\\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td class=\\\"pozadina-glavna-50 boja-siva-400\\\">Ukupno za iznos: </td>\\r\\n                                    <td class=\\\"text-right\\\"><b>{{faktura.iznos | currency:\\\" \\\"}} RSD</b></td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"dataSource == null || dataSource.length == 0\\\">\\r\\n            <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\r\\n                <button class=\\\"button-glavni-100 nazad-button nazad-dugme-dole\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\r\\n                    <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n                <i class=\\\"material-icons icon-size\\\">\\r\\n                    error_outline\\r\\n                </i>\\r\\n                <h1 class=\\\"h1-faktura-upozorenje\\\">Porudzbenica je prazna</h1>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"error\\\">\\r\\n            <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\r\\n                <button class=\\\"button-glavni-100 nazad-button greska-dugme-pozicija\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\r\\n                    <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex flex-column prazna-tabela\\\">\\r\\n                <i class=\\\"material-icons icon-size\\\">\\r\\n                    error_outline\\r\\n                </i>\\r\\n                <h1 class=\\\"h1-faktura-upozorenje\\\">Porudzbenica ne postoji</h1>\\r\\n            </div>\\r\\n        </div>\\r\\n    </main>\\r\\n</div>\"","module.exports = \"h1 {\\n  margin-top: 30px;\\n  margin-left: 5%; }\\n\\np {\\n  font-size: 15px; }\\n\\ntable {\\n  margin: 0px !important; }\\n\\n.nazad-dugme-dole {\\n  top: 40px; }\\n\\n.greska-dugme-pozicija {\\n  position: relative;\\n  top: 50px; }\\n\\n.detalji-div {\\n  width: 90%;\\n  margin-left: 5%; }\\n\\n@media only screen and (max-device-width: 640px) {\\n  h1 {\\n    margin-top: 0px;\\n    font-size: 30px; }\\n  .nazad-dugme-dole {\\n    top: 10px; }\\n  .greska-dugme-pozicija {\\n    position: relative;\\n    top: 5px; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Partner, FakturaDetalji, Fakutra } from '../../model/dto';\r\nimport { LoginService } from '../../service/login.service';\r\nimport { FakturaService } from '../../service/faktura.service';\r\n\r\n@Component({\r\n  selector: 'app-faktura-detalji',\r\n  templateUrl: './faktura-detalji.component.html',\r\n  styleUrls: ['./faktura-detalji.component.scss']\r\n})\r\nexport class FakturaDetaljiComponent implements OnInit {\r\n\r\n  public partner: Partner;\r\n  public faktura: Fakutra = new Fakutra();\r\n  public fakturaDetalji: FakturaDetalji[];\r\n  public dataSource: any;\r\n\r\n  public error = false;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n\r\n  public displayedColumns: string[] = ['robaId', 'proizvodjac', 'kolicina', 'potvrdjenaKolicina'\r\n  , 'rabat', 'cena', 'status'];\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private route: ActivatedRoute,\r\n    private fakturaServis: FakturaService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.fakturaServis.vratiFakturuPojedinacno(params.id, this.partner.ppid)\r\n        .subscribe((res: Fakutra) => {\r\n          this.error = false;\r\n          this.faktura = res;\r\n          this.fakturaDetalji = res.detalji;\r\n          this.dataSource = this.fakturaDetalji;\r\n        },\r\n          error => {\r\n            this.error = true;\r\n            console.log('Pronaci detalje fakture je bacilo gresku', error);\r\n          });\r\n    });\r\n  }\r\n\r\n  idiNazad() {\r\n    this.router.navigate(['/porudzbenice']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <main>\\r\\n        <div *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n            <h1>Moje porudzbenice</h1>\\r\\n            <div class=\\\"tabela-div\\\">\\r\\n                <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                    <!-- Kataloski broj Column -->\\r\\n                    <ng-container matColumnDef=\\\"orderId\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Broj Fakture </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2\\\">\\r\\n                                {{faktura.orderId}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Kataloski broj proizvodjaca Column -->\\r\\n                    <ng-container matColumnDef=\\\"nacinPlacanja\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Nacin Placanja</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\">\\r\\n                                {{faktura.nacinPlacanja.naziv}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Naziv Column -->\\r\\n                    <ng-container matColumnDef=\\\"nacinPrevoza\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Nacin Prevoza </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\">\\r\\n                                {{\\\"prevoz_\\\" + faktura.nacinPrevoza.id | translate}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Proizvodjac Column -->\\r\\n                    <ng-container matColumnDef=\\\"adresa\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Adresa </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\">\\r\\n                                {{faktura.adresa.naziv}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Cena Column -->\\r\\n                    <ng-container matColumnDef=\\\"napomena\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Napomena </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1 napomena\\\">\\r\\n                                {{faktura.napomena | empty}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Broj stavki Column -->\\r\\n                    <ng-container matColumnDef=\\\"brojStavki\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Broj stavki</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\">\\r\\n                                {{faktura.brojStavki}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Cena Column -->\\r\\n                    <ng-container matColumnDef=\\\"iznos\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Ukupan iznos </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                                {{faktura.iznos | currency:\\\" \\\"}} RSD\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Vreme porucivanja Column -->\\r\\n                    <ng-container matColumnDef=\\\"vremePorucivanja\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Datum </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1\\\" class=\\\"text-center\\\">\\r\\n                                {{faktura.vremePorucivanja | datum}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Status Column -->\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2\\\">\\r\\n                                {{faktura.status.naziv}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Akcije Column -->\\r\\n                    <ng-container matColumnDef=\\\"ackije\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <button class=\\\"button-glavni-100\\\" mat-raised-button (click)=\\\"detaljiFakture(faktura.id)\\\">Detalji</button>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n                    [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n                </mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"error\\\">\\r\\n            <i class=\\\"material-icons icon-size\\\">\\r\\n                error_outline\\r\\n            </i>\\r\\n            <h1 class=\\\"h1-faktura-upozorenje\\\">Istorija porucivanja je prazna</h1>\\r\\n        </div>\\r\\n    </main>\\r\\n</div>\"","module.exports = \".napomena {\\n  width: 300px; }\\n\\nh1 {\\n  margin-top: 30px;\\n  margin-left: 5%; }\\n\\n@media only screen and (max-device-width: 640px) {\\n  h1 {\\n    margin-top: 0px;\\n    font-size: 30px; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../service/login.service';\r\nimport { Partner, Fakutra, FakturaPage } from '../model/dto';\r\nimport { FakturaService } from '../service/faktura.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-faktura',\r\n  templateUrl: './faktura.component.html',\r\n  styleUrls: ['./faktura.component.scss']\r\n})\r\nexport class FakturaComponent implements OnInit {\r\n\r\n  public partner: Partner;\r\n  private fakure: Fakutra[];\r\n  public dataSource: any;\r\n\r\n  public error = false;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public displayedColumns: string[] = ['orderId', 'nacinPlacanja', 'nacinPrevoza'\r\n  , 'adresa', 'napomena', 'brojStavki', 'iznos', 'vremePorucivanja', 'status', 'ackije'];\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private fakturaService: FakturaService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.vratiFaktureKorisnika();\r\n  }\r\n\r\n  vratiFaktureKorisnika() {\r\n    this.fakturaService.vratiFaktureKorisnika(this.pageIndex, this.rowsPerPage, this.partner.ppid)\r\n    .subscribe((res: FakturaPage) => {\r\n      this.error = false;\r\n      this.fakure = res.content;\r\n      this.dataSource = this.fakure;\r\n      this.rowsPerPage = res.size;\r\n      this.pageIndex = res.number;\r\n      this.tableLength = res.totalElements;\r\n    },\r\n      error => {\r\n        this.error = true;\r\n        console.log('Pronaci fakture je bacilo gresku', error);\r\n      });\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.vratiFaktureKorisnika();\r\n  }\r\n\r\n  detaljiFakture(id: number) {\r\n    this.router.navigate(['/porudzbenice/' + id]);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main>\\r\\n    <div class=\\\"pozadina-glavna-50 boja-siva-400\\\">\\r\\n      <h1>Artikal broj: {{data.katbr}}</h1>\\r\\n    </div>\\r\\n    <table class=\\\"table\\\">\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td>Proizvodjac</td>\\r\\n          <td>{{data.proizvodjac.naziv}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Cena</td>\\r\\n          <td>{{data.cenaKom | currency:\\\" \\\"}} RSD</td>\\r\\n        <tr>\\r\\n          <td>Kolicina</td>\\r\\n          <td>\\r\\n            <select class=\\\"custom-select custom-select-md\\\" [(ngModel)]=\\\"data.kolicina\\\">\\r\\n              <option *ngFor=\\\"let kolicina of stanje\\\" [value]=\\\"kolicina\\\">{{kolicina}}</option>\\r\\n            </select>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Ukupno za placanje</td>\\r\\n          <td><b>{{data.kolicina * data.cenaKom | currency:\\\" \\\"}} RSD</b></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\r\\n      <button class=\\\"button-glavni-100\\\" mat-raised-button (click)=\\\"sacuvajIzmene()\\\">Sacuvaj</button>\\r\\n      <span class=\\\"col-2\\\"></span>\\r\\n      <button class=\\\"button-crveni-50\\\" mat-raised-button (click)=\\\"bezIzmena()\\\">Ponisti</button>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"p {\\n  text-align: center; }\\n\\nh1 {\\n  text-align: center;\\n  font-size: 20px;\\n  padding: 10px; }\\n\\n.pomeri {\\n  margin-left: 10px; }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport * as _ from 'lodash';\r\nimport { RobaKorpa } from '../../model/porudzbenica';\r\n\r\n@Component({\r\n  selector: 'app-izmena-kolicine-modal',\r\n  templateUrl: './izmena-kolicine-modal.component.html',\r\n  styleUrls: ['./izmena-kolicine-modal.component.scss']\r\n})\r\nexport class IzmenaKolicineModalComponent implements OnInit {\r\n\r\n  public stanje = [];\r\n  public data: RobaKorpa;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<IzmenaKolicineModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public roba: RobaKorpa) {}\r\n\r\n  ngOnInit() {\r\n    this.data = _.clone(this.roba);\r\n    this.popuniSelectStanja();\r\n  }\r\n\r\n  popuniSelectStanja() {\r\n    let index = 1;\r\n    while (index <= this.data.stanje) {\r\n      this.stanje[index - 1] = index;\r\n      index++;\r\n    }\r\n  }\r\n\r\n  sacuvajIzmene() {\r\n    this.data.kolicina = _.toNumber(this.data.kolicina);\r\n    this.data.cenaUkupno = this.data.kolicina * this.data.cenaKom;\r\n    this.dialogRef.close(this.data);\r\n  }\r\n\r\n  bezIzmena() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"<main>\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"dataSource.length == 0\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            shopping_cart\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Korpa je trenutno prazna</h1>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource.length > 0\\\">\\r\\n        <div style=\\\"overflow-x:auto;\\\">\\r\\n            <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <!-- Kataloski broj Column -->\\r\\n                <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.katbr}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Kataloski broj proizvodjaca Column -->\\r\\n                <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-1\\\">\\r\\n                            {{roba.katbrpro}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Naziv Column -->\\r\\n                <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-1\\\">\\r\\n                            {{roba.naziv}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Proizvodjac Column -->\\r\\n                <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.proizvodjac.naziv}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Cena Column -->\\r\\n                <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kolicina </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.kolicina}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Cena Column -->\\r\\n                <ng-container matColumnDef=\\\"cena\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Ukupno </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.cenaUkupno | currency:\\\" \\\"}} DIN\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Kolicina Column -->\\r\\n                <ng-container matColumnDef=\\\"izbaciDugme\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba; let i = index;\\\">\\r\\n                        <div class=\\\"d-flex flex-column flex-lg-row bd-highlight\\\">\\r\\n                            <div class=\\\"p-1 bd-highlight\\\">\\r\\n                                <button class=\\\"button-glavni-100\\\" mat-raised-button (click)=\\\"otvoriDialog(roba)\\\">Izmeni</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"p-1 bd-highlight\\\">\\r\\n                                <button class=\\\"button-crveni-50\\\" mat-raised-button (click)='izbaciIzKorpe(i)'>Izbaci</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex flex-column flex-xl-row\\\">\\r\\n            <div class=\\\"d-flex flex-column flex-xl-row flex-fill \\\">\\r\\n                <div class=\\\"flex-fill\\\">\\r\\n                    <div class=\\\"d-flex flex-fill flex-column pomeri-dole\\\">\\r\\n                        <div *ngIf=\\\"nacinPlacanja && nacinPlacanja.length > 0\\\" class=\\\"granice\\\">\\r\\n                            <h3>Način plaćanja</h3>\\r\\n                            <hr>\\r\\n                            <mat-radio-group class=\\\"radio-grupa\\\" [(ngModel)]=\\\"izabranNacinPlacanja\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" class=\\\"radio-dugme\\\" *ngFor=\\\"let placanje of nacinPlacanja\\\"\\r\\n                                    [value]=\\\"placanje\\\">\\r\\n                                    {{placanje.naziv}}\\r\\n                                </mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"nacinPrevoza && nacinPrevoza.length > 0\\\" class=\\\"d-flex flex-fill flex-column pomeri-dole\\\">\\r\\n                        <div class=\\\"granice visina-prevoza\\\">\\r\\n                            <h3>Način prevoza</h3>\\r\\n                            <hr>\\r\\n                            <mat-radio-group class=\\\"radio-grupa\\\" [(ngModel)]=\\\"izabranNacinPrevoza\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" class=\\\"radio-dugme\\\" *ngFor=\\\"let prevoz of nacinPrevoza\\\"\\r\\n                                    [value]=\\\"prevoz\\\">\\r\\n                                    {{\\\"prevoz_\\\" + prevoz.id | translate}}\\r\\n                                </mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"izabranNacinPrevoza.id === 2\\\" class=\\\"granice pomeri-dole\\\">\\r\\n                            <h4>Izaberite način dostave</h4>\\r\\n                            <mat-radio-group class=\\\"radio-grupa\\\" [(ngModel)]=\\\"izabranaTrecaLiceOpcija\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" class=\\\"radio-dugme\\\" *ngFor=\\\"let opcije of treceLiceOpcije\\\"\\r\\n                                    [value]=\\\"opcije\\\">\\r\\n                                    {{opcije}}\\r\\n                                </mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                            <div>\\r\\n                                <div *ngIf=\\\"izabranaTrecaLiceOpcija === treceLiceOpcije[0]\\\">\\r\\n                                    <mat-form-field>\\r\\n                                        <mat-select placeholder=\\\"Kurirske sluzbe\\\" [(ngModel)]=\\\"izabraneKurirskeSluzbe\\\">\\r\\n                                            <mat-option *ngFor=\\\"let sluzbe of kurirskeSluzbe\\\" [value]=\\\"sluzbe\\\">\\r\\n                                                {{sluzbe}}\\r\\n                                            </mat-option>\\r\\n                                        </mat-select>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"izabranaTrecaLiceOpcija === treceLiceOpcije[1]\\\">\\r\\n                                    <mat-form-field role=\\\"form\\\" [formGroup]=\\\"drugiNacinPrevoza\\\">\\r\\n                                        <textarea matInput #prevoz formControlName=\\\"prevoz\\\" placeholder=\\\"Upišite drugi način prevoza...\\\"></textarea>\\r\\n                                    </mat-form-field>\\r\\n                                    <div *ngIf=\\\"dugmeZaPorucivanjeStisnuto && d.prevoz.errors\\\">\\r\\n                                        <div *ngIf=\\\"d.prevoz.errors.required\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Ovo polje je obavezno</p>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"d.prevoz.errors.minlength\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Minimalno 3 karaktera</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"flex-fill\\\">\\r\\n                    <div class=\\\"d-flex flex-fill flex-column pomeri-dole\\\">\\r\\n                        <div *ngIf=\\\"nacinPlacanja && nacinPlacanja.length > 0\\\" class=\\\"granice visina\\\">\\r\\n                            <h3>Napomena</h3>\\r\\n                            <hr>\\r\\n                            <mat-form-field class=\\\"sirina-cena\\\">\\r\\n                                <textarea matInput class=\\\"napomena\\\" [(ngModel)]=\\\"napomena\\\" placeholder=\\\"Unesite napomenu...\\\"></textarea>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"d-flex flex-fill flex-column pomeri-dole\\\">\\r\\n\\r\\n                        <div *ngIf=\\\"nacinPlacanja && nacinPlacanja.length > 0\\\" class=\\\"granice\\\">\\r\\n                            <h3>Izaberite adresu dostave</h3>\\r\\n                            <hr>\\r\\n                            <mat-radio-group class=\\\"radio-grupa\\\" [(ngModel)]=\\\"izabraneAdresaDostave\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" class=\\\"radio-dugme\\\" *ngFor=\\\"let adresa of adresaDostave\\\"\\r\\n                                    [value]=\\\"adresa\\\">\\r\\n                                    {{adresa}}\\r\\n                                </mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                        </div>\\r\\n                        <div class=\\\"granice pomeri-dole\\\">\\r\\n                            <div *ngIf=\\\"izabraneAdresaDostave === adresaDostave[0]\\\" class=\\\"pomeri-dole\\\">\\r\\n                                <h4>Adresa</h4>\\r\\n                                <label> {{partner.adresa}}</label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"izabraneAdresaDostave === adresaDostave[1]\\\" class=\\\"pomeri-dole\\\">\\r\\n                                <h4>Druga adresa dostave</h4>\\r\\n                                <form role=\\\"form\\\" [formGroup]=\\\"adresaForm\\\">\\r\\n                                    <div>\\r\\n                                        <mat-form-field role=\\\"form\\\">\\r\\n                                            <input type=\\\"text\\\" #ulica formControlName=\\\"ulica\\\" matInput placeholder=\\\"Ulica i broj\\\">\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"dugmeZaPorucivanjeStisnuto && a.ulica.errors\\\">\\r\\n                                        <div *ngIf=\\\"a.ulica.errors.required\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Naziv ulice je obavezan</p>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"a.ulica.errors.minlength\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Naziv ulice mora imati minimalno 3 karaktera</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <mat-form-field role=\\\"form\\\">\\r\\n                                            <input type=\\\"text\\\" #grad formControlName=\\\"grad\\\" matInput placeholder=\\\"Grad\\\">\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"dugmeZaPorucivanjeStisnuto && a.grad.errors\\\">\\r\\n                                        <div *ngIf=\\\"a.grad.errors.required\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"a.grad.errors.minlength\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Naziv grada mora imati minimalno 2 karaktera</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex flex-fill flex-column\\\">\\r\\n                <table class=\\\"table sirina-cena\\\">\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td class=\\\"pozadina-glavna-50 boja-siva-400\\\">Bez pdv-a: </td>\\r\\n                            <td class=\\\"text-right\\\">{{bezPdv | currency:\\\" \\\"}} RSD</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"pozadina-glavna-50 boja-siva-400\\\">Pdv: </td>\\r\\n                            <td class=\\\"text-right\\\">{{pdv | currency:\\\" \\\"}} RSD</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"pozadina-glavna-50 boja-siva-400\\\">Ukupno za uplatu: </td>\\r\\n                            <td class=\\\"text-right\\\"><b>{{ukupno | currency:\\\" \\\"}} RSD</b></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div>\\r\\n                    <button class=\\\"button-glavni-100 dugme-sirina float-right\\\" mat-raised-button (click)=\\\"posaljiPorudzbinu(roba)\\\">Potvrdi</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</main>\"","module.exports = \"p {\\n  text-align: left !important; }\\n\\nh3 {\\n  font-size: 20px;\\n  font-weight: bold;\\n  padding-left: 10px;\\n  padding-top: 10px;\\n  color: #345cac; }\\n\\nhr {\\n  width: 90%;\\n  margin-bottom: 5px;\\n  margin-top: 5px; }\\n\\nh4 {\\n  font-size: 16px;\\n  font-weight: bold;\\n  padding-left: 10px;\\n  color: #345cac; }\\n\\ntextarea {\\n  font-size: 15px;\\n  color: #273747; }\\n\\nlabel {\\n  font-size: 15px;\\n  color: #273747;\\n  font-weight: bold; }\\n\\n.radio-grupa {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.radio-dugme {\\n  margin: 2px;\\n  font-size: 14px !important; }\\n\\n.sirina-cena {\\n  width: 95%; }\\n\\n.dugme-sirina {\\n  width: 150px;\\n  height: 40px;\\n  border-radius: 5px; }\\n\\n.granice {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  background-color: white;\\n  padding-left: 5px;\\n  width: 95%;\\n  margin: 5px; }\\n\\n.pomeri-dole {\\n  margin-top: 5px; }\\n\\n.visina {\\n  height: 180px; }\\n\\n.visina-prevoza {\\n  height: 177px; }\\n\\n.napomena {\\n  height: 80px; }\\n\\n.google-mapa {\\n  margin-left: 10%;\\n  width: 80%; }\\n\\n@media only screen and (max-device-width: 640px) {\\n  .sirina-cena {\\n    width: 95%;\\n    margin-left: 2%; } }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataService } from '../service/data/data.service';\r\nimport { Korpa, RobaKorpa } from '../model/porudzbenica';\r\nimport { LocalStorageService } from '../service/data/local-storage.service';\r\nimport { MatTable, MatDialog } from '@angular/material';\r\nimport { IzmenaKolicineModalComponent } from './izmena-kolicine-modal/izmena-kolicine-modal.component';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { ValueHelp, Partner, Fakutra, FakturaDetalji, Proizvodjac } from '../model/dto';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../service/login.service';\r\nimport { FakturaService } from '../service/faktura.service';\r\nimport { UspesnoPorucivanjeModalComponent } from './uspesno-porucivanje-modal/uspesno-porucivanje-modal.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-korpa',\r\n  templateUrl: './korpa.component.html',\r\n  styleUrls: ['./korpa.component.scss']\r\n})\r\nexport class KorpaComponent implements OnInit {\r\n\r\n  public korpa: Korpa;\r\n  public partner: Partner;\r\n  public bezPdv: string;\r\n  public pdv: string;\r\n  public ukupno: string;\r\n  public dataSource: any;\r\n  public nacinPlacanja: ValueHelp[];\r\n  public izabranNacinPlacanja: ValueHelp;\r\n  public nacinPrevoza: ValueHelp[];\r\n  public izabranNacinPrevoza: ValueHelp;\r\n  private faktura: Fakutra;\r\n\r\n  // sve forme\r\n  public drugiNacinPrevoza: FormGroup;\r\n  public adresaForm: FormGroup;\r\n  public dugmeZaPorucivanjeStisnuto = false;\r\n\r\n  public displayedColumns: string[] = ['katbr', 'katbrpro', 'naziv'\r\n    , 'proizvodjac', 'kolicina', 'cena', 'izbaciDugme'];\r\n\r\n  public treceLiceOpcije: string[] = ['Kurirske službe', 'Drugo'];\r\n  public izabranaTrecaLiceOpcija: string;\r\n  public kurirskeSluzbe: string[] = ['Aks', 'Beks', 'City'];\r\n  public izabraneKurirskeSluzbe: string;\r\n  public adresaDostave: string[] = ['Vaša adresa', 'Druga'];\r\n  public izabraneAdresaDostave: string;\r\n  public napomena: string;\r\n  public ucitavanje = false;\r\n  private alive = true;\r\n  @ViewChild(MatTable) table: MatTable<any>;\r\n\r\n  constructor(\r\n    private dataService: DataService,\r\n    private loginServis: LoginService,\r\n    public storage: LocalStorageService,\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private fakturaServis: FakturaService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.vratiOpsteInformacije();\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => {\r\n      this.korpa = korpa;\r\n      this.preracunajUkupno();\r\n      this.dataSource = this.korpa.roba;\r\n    });\r\n    this.izabranaTrecaLiceOpcija = this.treceLiceOpcije[0];\r\n    this.izabraneKurirskeSluzbe = this.kurirskeSluzbe[0];\r\n    this.izabraneAdresaDostave = this.adresaDostave[0];\r\n    this.inicijalizujSveForme();\r\n  }\r\n\r\n  inicijalizujSveForme() {\r\n    this.drugiNacinPrevoza = this.formBuilder.group({\r\n      prevoz: ['', [Validators.required, Validators.minLength(3)]]\r\n    });\r\n    this.adresaForm = this.formBuilder.group({\r\n      ulica: ['', [Validators.required, Validators.minLength(3)]],\r\n      grad: ['', [Validators.required, Validators.minLength(2)]]\r\n    });\r\n  }\r\n\r\n  vratiOpsteInformacije() {\r\n    const vrsteInformacije = ['placanje', 'prevoz'];\r\n    vrsteInformacije.forEach(vrsta => {\r\n      this.dataService.vratiOpsteInformacije(vrsta).pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => throwError(error)),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n        .subscribe(\r\n          res => {\r\n            if (vrsta === vrsteInformacije[0]) {\r\n              this.nacinPlacanja = res;\r\n              this.izabranNacinPlacanja = res[0];\r\n            } else {\r\n              this.nacinPrevoza = res;\r\n              this.izabranNacinPrevoza = res[0];\r\n            }\r\n          },\r\n          error => {\r\n            console.log('Podnaci informaciju je izbacilo gresku izbacilo je gresko');\r\n          });\r\n    });\r\n\r\n  }\r\n\r\n  izbaciIzKorpe(index: number) {\r\n    this.dataService.izbaciIzKorpe(index);\r\n    this.table.renderRows();\r\n  }\r\n\r\n  otvoriDialog(roba: RobaKorpa): void {\r\n    const dialogRef = this.dialog.open(IzmenaKolicineModalComponent, {\r\n      width: '400px',\r\n      data: roba\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      if (result) {\r\n        this.promeniKolicinuArtikla(result);\r\n      }\r\n    });\r\n  }\r\n  otvoriDialogUspesnoPorucivanje(faktura: Fakutra): void {\r\n    const dialogRef = this.dialog.open(UspesnoPorucivanjeModalComponent, {\r\n      width: '400px',\r\n      data: faktura\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.router.navigate(['/naslovna']);\r\n    });\r\n  }\r\n\r\n  promeniKolicinuArtikla(artikal: RobaKorpa) {\r\n    this.korpa.roba.forEach(roba => {\r\n      if (roba.katbr === artikal.katbr) {\r\n        roba.kolicina = artikal.kolicina;\r\n        roba.cenaUkupno = artikal.cenaUkupno;\r\n      }\r\n    });\r\n    this.storage.zameniArtikalSaNovim(artikal);\r\n    this.preracunajUkupno();\r\n    this.dataSource = this.korpa.roba;\r\n    this.table.renderRows();\r\n  }\r\n\r\n  private preracunajUkupno() {\r\n    this.korpa.ukupno = 0;\r\n    this.korpa.roba.forEach(roba => {\r\n      this.korpa.ukupno = this.korpa.ukupno + roba.cenaUkupno;\r\n    });\r\n    this.bezPdv = (this.korpa.ukupno / 1.2).toFixed(2);\r\n    this.pdv = (this.korpa.ukupno - this.korpa.ukupno / 1.2).toFixed(2);\r\n    this.ukupno = this.korpa.ukupno.toFixed(2);\r\n  }\r\n\r\n  // glavna metoda\r\n  posaljiPorudzbinu() {\r\n    this.dugmeZaPorucivanjeStisnuto = true;\r\n    if (this.izabraneAdresaDostave === this.adresaDostave[1]) {\r\n      if (this.adresaForm.invalid) {\r\n        return;\r\n      }\r\n    }\r\n    if (this.izabranNacinPrevoza === this.treceLiceOpcije[1]) {\r\n      if (this.drugiNacinPrevoza.invalid) {\r\n        return;\r\n      }\r\n    }\r\n    this.korpa.nacinIsporuke = this.izabranNacinPrevoza.id;\r\n    this.korpa.nacinPlacanja = this.izabranNacinPlacanja.id;\r\n    this.popuniNapomenu();\r\n    this.korpaUFakturu();\r\n    this.fakturaServis.sacuvajFakturu(this.faktura).pipe(\r\n      takeWhile(() => this.alive),\r\n      catchError((error: Response) => throwError(error)),\r\n      finalize(() => this.ucitavanje = false)\r\n    )\r\n      .subscribe(\r\n        res => {\r\n          this.faktura = res;\r\n          this.otvoriDialogUspesnoPorucivanje(this.faktura);\r\n          this.dataService.ocistiKorpu();\r\n          this.router.navigate(['/naslovna']);\r\n        },\r\n        error => {\r\n          console.log('Cuvaj fakturu u bazi');\r\n        });\r\n\r\n    console.log('Kora za porudzbinu  ' + JSON.stringify(this.faktura));\r\n    console.log('Porucivanje je uspesno! :)');\r\n  }\r\n\r\n  korpaUFakturu() {\r\n    this.faktura = new Fakutra();\r\n    this.faktura.adresa = this.napraviIPopuniValueHelp(this.partner.ppid);\r\n    this.faktura.nacinPlacanja = this.napraviIPopuniValueHelp(this.korpa.nacinPlacanja);\r\n    this.faktura.nacinPrevoza = this.napraviIPopuniValueHelp(this.korpa.nacinIsporuke);\r\n    this.faktura.napomena = this.korpa.napomena;\r\n    this.faktura.iznos = this.korpa.ukupno;\r\n    this.faktura.detalji = [];\r\n    this.korpa.roba.forEach((roba: RobaKorpa) => {\r\n      this.faktura.detalji.push(this.popuniStavke(roba));\r\n    });\r\n  }\r\n\r\n  popuniStavke(roba: RobaKorpa) {\r\n    const stavka = new FakturaDetalji();\r\n    stavka.kataloskiBroj = roba.katbr;\r\n    stavka.proizvodjac = roba.proizvodjac;\r\n    stavka.kolicina = roba.kolicina;\r\n    stavka.rabat = roba.rabat;\r\n    stavka.robaId = roba.robaid;\r\n    stavka.cena = roba.cenaKom;\r\n    return stavka;\r\n  }\r\n\r\n  napraviIPopuniValueHelp(id: number): ValueHelp {\r\n    const valueHelp = new ValueHelp();\r\n    valueHelp.id = id;\r\n    return valueHelp;\r\n  }\r\n\r\n  popuniNapomenu() {\r\n    this.korpa.napomena = '';\r\n    if (this.izabranNacinPrevoza === this.nacinPrevoza[2]) {\r\n      let nacinPrevoza;\r\n      if (this.izabranaTrecaLiceOpcija === this.treceLiceOpcije[0]) {\r\n        nacinPrevoza = this.izabraneKurirskeSluzbe;\r\n      } else {\r\n        nacinPrevoza = this.drugiNacinPrevoza.controls.prevoz.value;\r\n      }\r\n      this.korpa.napomena = this.korpa.napomena + 'Način prevoza: ' + nacinPrevoza + ' - ';\r\n    }\r\n\r\n    if (this.izabraneAdresaDostave === this.adresaDostave[1]) {\r\n      let adresaDostave;\r\n      if (this.izabranaTrecaLiceOpcija === this.treceLiceOpcije[0]) {\r\n        adresaDostave = this.adresaForm.controls.ulica.value + ', ' + this.adresaForm.controls.grad.value;\r\n      }\r\n      this.korpa.napomena = this.korpa.napomena + 'Adresa dostave: ' + adresaDostave + ' - ';\r\n    }\r\n    if (this.napomena) {\r\n      this.korpa.napomena = this.korpa.napomena + 'Napomena: ' + this.napomena;\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get a() { return this.adresaForm.controls; }\r\n  get d() { return this.drugiNacinPrevoza.controls; }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main class=\\\"text-center\\\">\\r\\n      <p>Porudžbina je uspešno poslata.</p>\\r\\n      <p>Broj porudžbine je <b>{{faktura.orderId}}</b></p>\\r\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\r\\n      <button mat-raised-button class=\\\"button-glavni-100 pomeri\\\" (click)=\\\"zatvori()\\\">Zatvori</button>\\r\\n      </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"p {\\n  color: #273747 !important;\\n  font-size: 17px !important; }\\n\\n.pomeri {\\n  margin-top: 15px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport * as _ from 'lodash';\r\nimport { Fakutra } from '../../model/dto';\r\n\r\n@Component({\r\n  selector: 'app-uspesno-porucivanje-modal',\r\n  templateUrl: './uspesno-porucivanje-modal.component.html',\r\n  styleUrls: ['./uspesno-porucivanje-modal.component.scss']\r\n})\r\nexport class UspesnoPorucivanjeModalComponent implements OnInit {\r\n\r\n  public data: Fakutra;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UspesnoPorucivanjeModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public faktura: Fakutra) {}\r\n\r\n  ngOnInit() {\r\n    this.data = this.faktura;\r\n  }\r\n\r\n  zatvori() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \".flex-login {\\r\\n    margin-top: 10%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n.login-form {\\r\\n    width: 400px;\\r\\n    justify-content: center;\\r\\n}\\r\\nh1 {\\r\\n    text-align: center;\\r\\n\\tfont-family: serif;\\r\\n\\tfont-weight: normal;\\r\\n\\ttext-transform: uppercase;\\r\\n}\\r\\nbutton{\\r\\n    margin:auto;\\r\\n    display:block;\\r\\n}\\r\\np {\\r\\n      text-align: center;\\r\\n      font-family: sans-serif;\\r\\n      padding: 0;\\r\\n      margin: 0;\\r\\n}\\r\\n.is-invalid {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n.upozorenje {\\r\\n    text-align: left;\\r\\n    font-family: sans-serif;\\r\\n    font-size: 14px;\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"flex-login\\\">\\r\\n\\t\\t<div class=\\\"login-form\\\">\\r\\n\\t\\t\\t<h1>Prijavi se</h1>\\r\\n\\t\\t\\t<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"!uspesnoLogovanje\\\">\\r\\n\\t\\t\\t\\t<p>Korisničko ime ili šifra je pogrešna.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<form role=\\\"form\\\" (keydown)=\\\"enterNaFormi($event)\\\" [formGroup]=\\\"registerForm\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Korisničko ime\\\" id=\\\"username\\\"\\r\\n\\t\\t\\t\\t\\t name=\\\"username\\\" [(ngModel)]=\\\"credentials.username\\\" />\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerForm.controls.username.errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.username.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Korisničko ime je obavezno</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.username.errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Korisničko ime mora imati minimalno 3 karaktera</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Šifra\\\" id=\\\"password\\\"\\r\\n\\t\\t\\t\\t\\t name=\\\"password\\\" [(ngModel)]=\\\"credentials.password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.controls.password.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerForm.controls.password.errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.password.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.password.errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\r\\n\\t\\t\\t\\t\\t<button mat-button type=\\\"button\\\" (click)=\\\"otvoriResgracijaDialog()\\\" class=\\\"boja-glavna-100\\\">Nemate nalog?</button>\\r\\n\\t\\t\\t\\t\\t<button mat-raised-button (click)=\\\"login()\\\" class=\\\"rounded button-glavni-100\\\">Prijava</button>\\r\\n\\t\\t\\t\\t\\t<button mat-button type=\\\"button\\\" (click)=\\\"otvoriZaboravljenuSifruDialog()\\\" class=\\\"boja-glavna-100\\\">Zaboravili ste šifru?</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Credentials, Partner } from '../model/dto';\r\nimport { LoginService } from '../service/login.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { RegistracijaModalComponent } from './registracija-modal/registracija-modal.component';\r\nimport { ZaboravljenaSifraModalComponent } from './zaboravljena-sifra-modal/zaboravljena-sifra-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public registerForm: FormGroup;\r\n  public submitted = false;\r\n  public credentials: Credentials = {};\r\n  public partner: Partner;\r\n  public uspesnoLogovanje = true;\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private formBuilder: FormBuilder,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      password: ['', [Validators.required, Validators.minLength(3)]]\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  login() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n        return;\r\n    }\r\n    this.loginServis.ulogujSe(this.credentials);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.loginServis.daLiJeLogovanjeUspesno.subscribe(b => this.uspesnoLogovanje = b);\r\n  }\r\n\r\n  otvoriResgracijaDialog() {\r\n    const dialogRef = this.dialog.open(RegistracijaModalComponent, {\r\n      width: '400px'\r\n    });\r\n  }\r\n\r\n  otvoriZaboravljenuSifruDialog() {\r\n    const dialogRef = this.dialog.open(ZaboravljenaSifraModalComponent, {\r\n      width: '400px'\r\n    });\r\n  }\r\n\r\n  enterNaFormi(event) {\r\n    if (event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<main>\\n  <div class=\\\"modal-naslov\\\">\\n    <h1 class=\\\"h1-modal-naslov\\\">Registracija</h1>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n    <mat-step>\\n      <ng-template matStepLabel>Vrsta</ng-template>\\n      <mat-radio-group class=\\\"radio-group\\\" [(ngModel)]=\\\"vrstaRegistracije\\\">\\n        <mat-radio-button color=\\\"primary\\\" *ngFor=\\\"let registracija of registracije\\\" [value]=\\\"registracija\\\">\\n          {{registracija}}\\n        </mat-radio-button>\\n      </mat-radio-group>\\n      <div>\\n        <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"odrediFormu()\\\" matStepperNext>Dalje</button>\\n      </div>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"odredjenaForma\\\">\\n      <ng-template matStepLabel>Forma</ng-template>\\n      <form role=\\\"form\\\" [formGroup]=\\\"privatnoLiceForm\\\" *ngIf=\\\"vrstaRegistracije == registracije[0]\\\">\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #imeIPrezime formControlName=\\\"imeIPrezime\\\" matInput placeholder=\\\"Ime i prezime\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && privatno.imeIPrezime.errors\\\">\\n          <div *ngIf=\\\"privatno.imeIPrezime.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Ime i prezime je obavezno</p>\\n          </div>\\n          <div *ngIf=\\\"privatno.imeIPrezime.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Ime i prezime mora imati minimalno 3 karaktera</p>\\n          </div>\\n        </div>\\n\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #grad formControlName=\\\"grad\\\" matInput placeholder=\\\"Grad\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && privatno.grad.errors\\\">\\n          <div *ngIf=\\\"privatno.grad.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"privatno.grad.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Grad mora imati minimalno 2 karaktera</p>\\n          </div>\\n        </div>\\n\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #adresa formControlName=\\\"adresa\\\" matInput placeholder=\\\"Adresa\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && privatno.adresa.errors\\\">\\n          <div *ngIf=\\\"privatno.adresa.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Adresa je obavezna</p>\\n          </div>\\n          <div *ngIf=\\\"privatno.adresa.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Adresa mora imati minimalno 3 karaktera</p>\\n          </div>\\n        </div>\\n\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"Email\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && privatno.email.errors\\\">\\n          <div *ngIf=\\\"privatno.email.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Email je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"privatno.email.errors.email\\\">\\n            <p class=\\\"upozorenje\\\">Email nije validan</p>\\n          </div>\\n        </div>\\n\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #kontaktTelefon formControlName=\\\"kontaktTelefon\\\" matInput type=\\\"tel\\\" placeholder=\\\"Broj telefona\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && privatno.kontaktTelefon.errors\\\">\\n          <div *ngIf=\\\"privatno.kontaktTelefon.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Broj telefona je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"privatno.kontaktTelefon.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Broj telefona mora imati vise od 5 karakera</p>\\n          </div>\\n        </div>\\n\\n      </form>\\n      <form role=\\\"form\\\" [formGroup]=\\\"parvnoLiceForm\\\" *ngIf=\\\"vrstaRegistracije == registracije[1]\\\">\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #grad formControlName=\\\"nazivFirme\\\" matInput placeholder=\\\"Naziv firme\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && pravno.nazivFirme.errors\\\">\\n          <div *ngIf=\\\"pravno.nazivFirme.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Naziv firme je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"pravno.nazivFirme.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Ime i prezime mora imati minimalno 3 karaktera</p>\\n          </div>\\n        </div>\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #pib formControlName=\\\"pib\\\" matInput placeholder=\\\"Pib\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && pravno.pib.errors\\\">\\n          <div *ngIf=\\\"pravno.pib.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Pib je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"pravno.pib.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Pib mora imati minimalno 3 karaktera</p>\\n          </div>\\n        </div>\\n\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #grad formControlName=\\\"grad\\\" matInput placeholder=\\\"Grad\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && pravno.grad.errors\\\">\\n          <div *ngIf=\\\"pravno.grad.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"pravno.grad.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Grad mora imati minimalno 2 karaktera</p>\\n          </div>\\n        </div>\\n\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #adresa formControlName=\\\"adresa\\\" matInput placeholder=\\\"Adresa\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && pravno.adresa.errors\\\">\\n          <div *ngIf=\\\"pravno.adresa.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Adresa je obavezna</p>\\n          </div>\\n          <div *ngIf=\\\"pravno.adresa.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Adresa mora imati minimalno 3 karaktera</p>\\n          </div>\\n        </div>\\n\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"Email\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && pravno.email.errors\\\">\\n          <div *ngIf=\\\"pravno.email.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Email je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"pravno.email.errors.email\\\">\\n            <p class=\\\"upozorenje\\\">Email nije validan</p>\\n          </div>\\n        </div>\\n        <mat-form-field class=\\\"puna-duzina\\\">\\n          <input #kontaktTelefon formControlName=\\\"kontaktTelefon\\\" matInput type=\\\"tel\\\" placeholder=\\\"Broj telefona\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && pravno.kontaktTelefon.errors\\\">\\n          <div *ngIf=\\\"pravno.kontaktTelefon.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Telefon je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"pravno.kontaktTelefon.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">>Telefon mora imati minimalno 5 karaktera</p>\\n          </div>\\n        </div>\\n      </form>\\n      <div>\\n        <button mat-button matStepperPrevious>Nazad</button>\\n        <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"registracijaKorisnika()\\\" matStepperNext>Registruj se</button>\\n      </div>\\n    </mat-step>\\n    <mat-step>\\n      <ng-template matStepLabel>Uspešno</ng-template>\\n      <h2>Registracija je uspešno poslata</h2>\\n      <p> U narednih 24h vaš zahtev će biti obradjen i dobićete mail sa detaljima vašeg naloga.</p>\\n      <div>\\n        <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"zatvoriDialog()\\\">Zatvori</button>\\n      </div>\\n    </mat-step>\\n  </mat-horizontal-stepper>\\n</main>\"","module.exports = \"h2 {\\n  color: #273747 !important;\\n  font-size: 18px;\\n  padding-bottom: 10px; }\\n\\np {\\n  font-size: 16px;\\n  text-align: left;\\n  font-family: inherit; }\\n\\n.radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.puna-duzina {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material';\nimport { Registracija } from '../../model/dto';\nimport { EmailService } from '../../../shared/service/email.service';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\n\n@Component({\n  selector: 'app-registracija-modal',\n  templateUrl: './registracija-modal.component.html',\n  styleUrls: ['./registracija-modal.component.scss']\n})\nexport class RegistracijaModalComponent implements OnInit {\n\n  registracije: string[] = ['Fizičko lice', 'Pravno lice'];\n  public vrstaRegistracije: string;\n\n  // forme\n  public privatnoLiceForm: FormGroup;\n  public parvnoLiceForm: FormGroup;\n  public odredjenaForma: FormGroup;\n  public formaSubmited = false;\n\n  private registracija: Registracija = new Registracija();\n\n  private alive = true;\n  public ucitavanje = false;\n  constructor(\n    public dialogRef: MatDialogRef<RegistracijaModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailService: EmailService) { }\n\n  ngOnInit() {\n    this.vrstaRegistracije = this.registracije[0];\n    this.inicijalizujSveRegistracioneForme();\n  }\n\n  inicijalizujSveRegistracioneForme() {\n    this.privatnoLiceForm = this.formBuilder.group({\n      imeIPrezime: ['', [Validators.required, Validators.minLength(3)]],\n      grad: ['', [Validators.required, Validators.minLength(2)]],\n      adresa: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      kontaktTelefon: ['', [Validators.required, Validators.minLength(5)]]\n    });\n    this.parvnoLiceForm = this.formBuilder.group({\n      nazivFirme: ['', [Validators.required, Validators.minLength(3)]],\n      pib: ['', [Validators.required, Validators.minLength(3)]],\n      grad: ['', [Validators.required, Validators.minLength(2)]],\n      adresa: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      kontaktTelefon: ['', [Validators.required, Validators.minLength(5)]]\n    });\n    this.odredjenaForma = this.parvnoLiceForm;\n  }\n\n  registracijaKorisnika() {\n    this.formaSubmited = true;\n    if (this.vrstaRegistracije === this.registracije[0]) {\n      if (this.privatnoLiceForm.invalid) {\n        return;\n      } else {\n        this.registracija = new Registracija();\n        this.popuniRegistracijuZaPrivatnaLica();\n      }\n    } else {\n      if (this.parvnoLiceForm.invalid) {\n        return;\n      } else {\n        this.registracija = new Registracija();\n        this.popuniRegistracijuZaPravnaLica();\n      }\n    }\n    this.emailService.posaljiMailZaRegistraciju(this.registracija).pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => throwError(error)),\n      finalize(() => this.ucitavanje = false)\n    ).subscribe(res => {\n      console.log('Mail uspesno poslat');\n    }, error => {\n      console.log('Error pri slanju registracionog maila', error);\n    });\n  }\n\n  public odrediFormu() {\n    if (this.vrstaRegistracije === this.registracije[0]) {\n      this.odredjenaForma = this.privatnoLiceForm;\n    } else {\n      this.odredjenaForma = this.parvnoLiceForm;\n    }\n  }\n\n  private popuniRegistracijuZaPrivatnaLica() {\n    this.registracija.imeIPrezime = this.privatno.imeIPrezime.value;\n    this.registracija.grad = this.privatno.grad.value;\n    this.registracija.adresa = this.privatno.adresa.value;\n    this.registracija.email = this.privatno.email.value;\n    this.registracija.kontaktTelefon = this.privatno.kontaktTelefon.value;\n    this.registracija.daLiJePravnoLice = false;\n  }\n\n  private popuniRegistracijuZaPravnaLica() {\n    this.registracija.nazivFirme = this.pravno.nazivFirme.value;\n    this.registracija.pib = this.pravno.pib.value;\n    this.registracija.grad = this.pravno.grad.value;\n    this.registracija.adresa = this.pravno.adresa.value;\n    this.registracija.email = this.pravno.email.value;\n    this.registracija.kontaktTelefon = this.pravno.kontaktTelefon.value;\n    this.registracija.daLiJePravnoLice = true;\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n  // convenience getter for easy access to form fields\n  get privatno() { return this.privatnoLiceForm.controls; }\n  get pravno() { return this.parvnoLiceForm.controls; }\n\n}\n","module.exports = \"<main>\\n    <div class=\\\"modal-naslov\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n  <section *ngIf=\\\"!mailUspesnoPoslat\\\">\\n    <h1>Pronađi svoj Automaterijal nalog</h1>\\n    <p>Unesi svoju e-mail ili korisničko ime</p>\\n    <form role=\\\"form\\\" [formGroup]=\\\"zaboravljeSifraForma\\\">\\n      <mat-form-field class=\\\"email-input\\\">\\n        <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"E-mail ili korisničko ime\\\">\\n      </mat-form-field>\\n      <div *ngIf=\\\"formaSubmited && zaboravljeno.email.errors\\\">\\n        <div *ngIf=\\\"zaboravljeno.email.errors.required\\\">\\n          <p class=\\\"upozorenje\\\">Podatak je obavezan</p>\\n        </div>\\n        <div *ngIf=\\\"zaboravljeno.email.errors.minlength\\\">\\n          <p class=\\\"upozorenje\\\">Podatak mora da ima vise od 3 karaktera</p>\\n        </div>\\n      </div>\\n      <div class=\\\"pomeri-dole\\\">\\n        <button mat-raised-button (click)=\\\"posaljiMailZaboravljenaSifra()\\\" class=\\\"button-glavni-100\\\">Potvrdi</button>\\n      </div>\\n    </form>\\n  </section>\\n  <section *ngIf=\\\"mailUspesnoPoslat\\\">\\n    <h1>Mail uspešno poslat</h1>\\n    <p>Uskoro će vam stići mail sa linkom gde možete promeniti vašu šifru.</p>\\n    <div class=\\\"pomeri-dole\\\">\\n        <button mat-raised-button (click)=\\\"zatvoriDialog()\\\" class=\\\"button-glavni-100\\\">Zatvori</button>\\n      </div>\\n  </section>\\n</main>\"","module.exports = \"h1 {\\n  color: #273747 !important;\\n  font-size: 19px;\\n  font-weight: bold;\\n  margin-bottom: 25px; }\\n\\np {\\n  font-size: 17px;\\n  margin-bottom: 10px;\\n  font-family: inherit; }\\n\\n.email-input {\\n  width: 80%; }\\n\\n.pomeri-dole {\\n  margin-top: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EmailService } from '../../../shared/service/email.service';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { ResetSifre } from '../../model/dto';\n\n@Component({\n  selector: 'app-zaboravljena-sifra-modal',\n  templateUrl: './zaboravljena-sifra-modal.component.html',\n  styleUrls: ['./zaboravljena-sifra-modal.component.scss']\n})\nexport class ZaboravljenaSifraModalComponent implements OnInit {\n\n  public resetSifre: ResetSifre = new ResetSifre();\n  public mailUspesnoPoslat = false;\n\n  // forme\n  public zaboravljeSifraForma: FormGroup;\n  public formaSubmited = false;\n\n  private alive = true;\n  public ucitavanje = false;\n  constructor(\n    public dialogRef: MatDialogRef<ZaboravljenaSifraModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailService: EmailService,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.inicijalizujSveRegistracioneForme();\n  }\n  inicijalizujSveRegistracioneForme() {\n    this.zaboravljeSifraForma = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.minLength(3)]],\n    });\n  }\n\n  posaljiMailZaboravljenaSifra() {\n    this.formaSubmited = true;\n    if (this.zaboravljeSifraForma.invalid) {\n      return;\n    }\n    this.resetSifre.email = this.zaboravljeno.email.value;\n    this.emailService\n    .posaljiMailZaResetovanjeSifre(this.resetSifre)\n    .pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => {\n        if (error.status === 400) {\n          const snackPoruka = 'E-mail ili korisničko ime ne postoji u našoj bazi.';\n          this.otvoriSnackBar(snackPoruka);\n          return EMPTY;\n        }\n        throwError(error);\n      }),\n      finalize(() => this.ucitavanje = false)\n    ).subscribe(res => {\n      this.mailUspesnoPoslat = true;\n      console.log('Mail za resetovanje sifre uspesno poslat');\n    }, error => {\n      console.log('Error pri slanju za resetovanje sifre', error);\n    });\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n  // convenience getter for easy access to form fields\n  get zaboravljeno() { return this.zaboravljeSifraForma.controls; }\n\n  otvoriSnackBar(poruka: string) {\n    this.snackBar.open(poruka, '', {\n      duration: 2000,\n      panelClass: ['my-snack-bar']\n    });\n  }\n}\n","import { Page } from './page';\r\n\r\nexport class ValueHelp {\r\n   id?: number;\r\n   naziv?: string;\r\n}\r\n\r\nexport class Roba {\r\n    public robaid: number;\r\n    public katbr: string;\r\n    public katbrpro: string;\r\n    public naziv: string;\r\n    public proizvodjac: Proizvodjac;\r\n    public grupa: string;\r\n    public podGrupa: string;\r\n    public stanje: number;\r\n    public cena: number;\r\n    public rabat: number;\r\n    public kolicina: number;\r\n}\r\n\r\nexport class RobaPage extends Page {\r\n    content: Roba[] = null;\r\n}\r\n\r\nexport class Partner {\r\n    ppid?: number;\r\n    naziv?: string;\r\n    email?: string;\r\n    adresa?: string;\r\n    webKorisnik?: string;\r\n    noviPassword?: string;\r\n    stariPassword?: string;\r\n    stanje?: number;\r\n    stanjeporoku?: number;\r\n}\r\n\r\nexport class Fakutra {\r\n    id?: number;\r\n    orderId?: number;\r\n    vremePorucivanja?: string;\r\n    status?: ValueHelp;\r\n    nacinPlacanja?: ValueHelp;\r\n    nacinPrevoza?: ValueHelp;\r\n    adresa?: ValueHelp;\r\n    napomena?: string;\r\n    brojStavki?: number;\r\n    iznos?: number;\r\n    detalji?: FakturaDetalji[];\r\n}\r\n\r\nexport class FakturaPage extends Page {\r\n    content: Fakutra[] = null;\r\n}\r\n\r\nexport class FakturaDetalji {\r\n    robaId?: number;\r\n    kataloskiBroj?: string;\r\n    proizvodjac?: Proizvodjac;\r\n    kolicina?: number;\r\n    potvrdjenaKolicina?: number;\r\n    cena?: number;\r\n    status?: ValueHelp;\r\n    rabat?: number;\r\n    vremePorucivanja?: string;\r\n}\r\n\r\nexport class Proizvodjac {\r\n    public proid: string;\r\n    public naziv: string;\r\n}\r\n\r\nexport declare class Credentials {\r\n    username?: string;\r\n    password?: boolean;\r\n}\r\n\r\nexport class Registracija {\r\n    // Pravno Lice\r\n    nazivFirme?: string;\r\n    pib?: string;\r\n    // Fizicko Lice\r\n    imeIPrezime?: string;\r\n    // zajednicki sadrzilac\r\n    grad?: string;\r\n    adresa?: string;\r\n    email?: string;\r\n    kontaktTelefon?: string;\r\n    daLiJePravnoLice?: boolean;\r\n}\r\n\r\nexport class ResetSifre {\r\n    email?: string;\r\n}\r\n\r\nexport class PromenaSifre {\r\n    ppid?: number;\r\n    staraSifra?: string;\r\n    sifra?: string;\r\n    ponovljenjaSifra?: string;\r\n}\r\n","export declare const TIMEOUT = 100000;\r\n\r\nexport const transformator = {\r\n    prevoz_0: 'Automaterijal vozi robu',\r\n    prevoz_1: 'Vi vozite robu',\r\n    prevoz_2: 'Treće lice vozi robu',\r\n    kategorija_AMORTIZER: 'Amortizeri',\r\n    kategorija_BRAVA: 'Brava vrata i elek. ulozak brave',\r\n    kategorija_BREGASTA: 'Bregasta osovina',\r\n    kategorija_BRISAČ: 'Brisači - metlice',\r\n    kategorija_CILINDAR: 'Cilindri-kočioni',\r\n    kategorija_DIHTUNG: 'Dihtunzi svi',\r\n    kategorija_DISK_PLOČICE: 'Disk pločice',\r\n    kategorija_DISKOVI: 'Diskovi',\r\n    kategorija_DVOTAKTOL: 'Dvotaktol ulje',\r\n    kategorija_GREJAČ: 'Grejači',\r\n    kategorija_GUMICE: 'Gumice',\r\n    kategorija_HEMIJA: 'Hemija za automobile',\r\n    kategorija_HIDROPODIZAČ: 'Hidropodizači ventila',\r\n    kategorija_HLADNJAK: 'Hladnjak',\r\n    kategorija_ZGLOB: 'Zglob homokinetički',\r\n    kategorija_INTERKULER: 'Interkuler',\r\n    kategorija_KABLOVI: 'Kablovi za svećice',\r\n    kategorija_KARIKE: 'Karike',\r\n    kategorija_KARTER: 'Karter',\r\n    kategorija_KLACKALICA: 'Klackalica',\r\n    kategorija_KVAČILO: 'Kvačilo - Zamajci',\r\n    kategorija_KLIP: 'Klip',\r\n    kategorija_KOZMETIKA: 'Kozmetika',\r\n    kategorija_KUGLA: 'Kugla',\r\n    kategorija_LANAC: 'Lanac - klizači, setovi',\r\n    kategorija_LETVA: 'Letva volana - spone',\r\n    kategorija_LEŽAJEVI: 'Ležajevi radilice',\r\n    kategorija_MANŽENTA: 'Manžetne',\r\n    kategorija_PAKNOVI: 'Paknovi',\r\n    kategorija_PREKIDAČ: 'Prekidači',\r\n    kategorija_PROTOKOMER: 'Protokomer',\r\n    kategorija_PUMPA: 'Pumpa za vodu',\r\n    kategorija_RAME: 'Rame',\r\n    kategorija_RAZVODNIK: 'Razvodnik paljenja',\r\n    kategorija_REMENICA: 'Remenice',\r\n    kategorija_SEMERING: 'Semering',\r\n    kategorija_SVEĆICA: 'Svećica i kablovi',\r\n    kategorija_SIJALICA: 'Sijalice',\r\n    kategorija_SILEN: 'Silen blokovi',\r\n    kategorija_STABILIZATOR: 'Stabilizator',\r\n    kategorija_TERMODAVAČ: 'Termodavač',\r\n    kategorija_TERMOSTAT: 'Termostat',\r\n    kategorija_VENTIL: 'Ventili',\r\n    kategorija_VENTILATOR: 'Ventilator',\r\n    kategorija_ZUPČANIK: 'Zupčanici',\r\n    empty: 'N/A'\r\n};\r\n\r\nexport const mesec = {\r\n    mesec_01: 'Januar',\r\n    mesec_02: 'Februar',\r\n    mesec_03: 'Mart',\r\n    mesec_04: 'April',\r\n    mesec_05: 'Maj',\r\n    mesec_06: 'Jun',\r\n    mesec_07: 'Jul',\r\n    mesec_08: 'Avgust',\r\n    mesec_09: 'Septembar',\r\n    mesec_10: 'Oktobar',\r\n    mesec_11: 'Novembar',\r\n    mesec_12: 'Decembar'\r\n};\r\n","export class Page {\r\n    last?: boolean = null;\r\n    totalPages?: number = null;\r\n    totalElements: number = null;\r\n    numberOfElements: number = null;\r\n    first ?: boolean = null;\r\n    sort?: string = null;\r\n    size?: number = null;\r\n    number?: number = null;\r\n}\r\n","import { ValueHelp, Proizvodjac } from \"./dto\";\r\n\r\nexport class Korpa {\r\n    public roba: RobaKorpa[] = [];\r\n    public ukupno: number;\r\n    public nacinPlacanja: number;\r\n    public nacinIsporuke: number;\r\n    public napomena: string;\r\n}\r\n\r\nexport class RobaKorpa {\r\n\r\n    public robaid: number;\r\n    public katbr: string;\r\n    public katbrpro: string;\r\n    public naziv: string;\r\n    public proizvodjac: Proizvodjac;\r\n    public kolicina: number;\r\n    public rabat: number;\r\n    public cenaKom: number;\r\n    public stanje: number;\r\n    public cenaUkupno: number;\r\n\r\n    constructor(robaid: number, katbr: string, katbrpro: string, naziv: string, proizvodjac: Proizvodjac,\r\n         kolicina: number, rabat: number, cena: number, stanje: number) {\r\n        this.robaid = robaid;\r\n        this.katbr = katbr;\r\n        this.katbrpro = katbrpro;\r\n        this.naziv = naziv;\r\n        this.proizvodjac = proizvodjac;\r\n        this.kolicina = kolicina;\r\n        this.rabat = rabat;\r\n        this.cenaKom = cena;\r\n        this.cenaUkupno = cena * kolicina;\r\n        this.stanje = stanje;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <main class=\\\"licni-podaci\\\">\\r\\n    <div class=\\\"d-flex flex-column  flex-xl-row\\\">\\r\\n      <div class=\\\"strana\\\">\\r\\n        <div class=\\\"header2\\\">\\r\\n          <h1>Licni podaci</h1>\\r\\n        </div>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <span class=\\\"leva-strana\\\">\\r\\n              Naziv:\\r\\n            </span> <span class=\\\"desna-strana\\\"> {{partner.naziv}} </span>\\r\\n          </li>\\r\\n          <li><span class=\\\"leva-strana\\\">Adresa:</span> {{partner.adresa}}</li>\\r\\n          <li><span class=\\\"leva-strana\\\">Email:</span> {{partner.email | lowercase}}</li>\\r\\n          <li><span class=\\\"leva-strana\\\">Stanje:</span> <span [ngClass]=\\\"{'dugovanje': daLiDuguje}\\\"><b>{{partner.stanje\\r\\n                | currency:\\\" \\\"}} RSD</b></span></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"strana\\\">\\r\\n        <div class=\\\"header2\\\">\\r\\n          <h1>Akcije</h1>\\r\\n        </div>\\r\\n        <mat-accordion>\\r\\n          <mat-expansion-panel class=\\\"exp-panel\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <p class=\\\"panel\\\">Promenite adresu</p>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <form role=\\\"form\\\" [formGroup]=\\\"adresaForm\\\">\\r\\n              <div>\\r\\n                <mat-form-field>\\r\\n                  <input type=\\\"text\\\" #ulica formControlName=\\\"ulica\\\" [ngClass]=\\\"{ 'is-invalid': adresaSubmited && a.ulica.errors }\\\"\\r\\n                    matInput placeholder=\\\"Ulica i broj\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"adresaSubmited && a.ulica.errors\\\">\\r\\n                <div *ngIf=\\\"a.ulica.errors.required\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Naziv ulice je obavezan</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"a.ulica.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Naziv ulice mora imati minimalno 3 karaktera</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field>\\r\\n                  <input type=\\\"text\\\" #grad formControlName=\\\"grad\\\" matInput [ngClass]=\\\"{ 'is-invalid': adresaSubmited && a.grad.errors }\\\"\\r\\n                    placeholder=\\\"Grad\\\">\\r\\n                </mat-form-field>\\r\\n                <div *ngIf=\\\"adresaSubmited && a.grad.errors\\\">\\r\\n                  <div *ngIf=\\\"a.grad.errors.required\\\">\\r\\n                      <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"a.grad.errors.minlength\\\">\\r\\n                      <p class=\\\"upozorenje\\\">Naziv grada mora imati minimalno 2 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"button-div\\\">\\r\\n                <button class=\\\"button-glavni-100\\\" (click)=\\\"promeniAdresu(ulica.value, grad.value)\\\" mat-raised-button>Sacuvaj</button>\\r\\n                <button class=\\\"button-crveni-50 float-right\\\" (click)=\\\"ulica.value = ''; grad.value = ''; adresaSubmited=false\\\"\\r\\n                  mat-raised-button>Poništi</button>\\r\\n              </div>\\r\\n            </form>\\r\\n\\r\\n          </mat-expansion-panel>\\r\\n          <mat-expansion-panel class=\\\"exp-panel\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <p class=\\\"panel\\\">Promenite email</p>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <form role=\\\"form\\\" [formGroup]=\\\"emailForm\\\">\\r\\n              <div>\\r\\n                <mat-form-field>\\r\\n                  <input type=\\\"email\\\" #email formControlName=\\\"email\\\" matInput [ngClass]=\\\"{ 'is-invalid': emailSubmited && e.email.errors }\\\"\\r\\n                    placeholder=\\\"Novi email...\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"emailSubmited && e.email.errors\\\">\\r\\n                <div *ngIf=\\\"e.email.errors.required\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Email je obavezan</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"e.email.errors.email\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Email nije validan</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"button-div\\\">\\r\\n                <button class=\\\"button-glavni-100\\\" (click)=\\\"promeniLEmail(email.value)\\\" mat-raised-button>Sacuvaj</button>\\r\\n                <button class=\\\"button-crveni-50 float-right\\\" (click)=\\\"email.value = ''; emailSubmited=false\\\"\\r\\n                  mat-raised-button>Poništi</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-expansion-panel>\\r\\n          <mat-expansion-panel class=\\\"exp-panel\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <p class=\\\"panel\\\">Promenite korisničko ime</p>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <div>\\r\\n              <mat-radio-group class=\\\"radio-group\\\" [(ngModel)]=\\\"korisnickoImeMetod\\\">\\r\\n                <mat-radio-button color=\\\"primary\\\" value=\\\"email\\\">Koristi trenutni email</mat-radio-button>\\r\\n                <mat-radio-button color=\\\"primary\\\" value=\\\"novo\\\">\\r\\n                  <p>Kreirajte novi</p>\\r\\n                </mat-radio-button>\\r\\n              </mat-radio-group>\\r\\n            </div>\\r\\n\\r\\n            <form role=\\\"form\\\" [formGroup]=\\\"usernameForm\\\">\\r\\n              <div>\\r\\n                <mat-form-field *ngIf=\\\"korisnickoImeMetod != 'email'\\\">\\r\\n                  <input type=\\\"text\\\" #username formControlName=\\\"username\\\" [ngClass]=\\\"{ 'email-selected': korisnickoImeMetod === 'email'}\\\"\\r\\n                    [attr.disabled]=\\\"daLiKorisnickoImeTrebaDaBudeEmail() ? '' : null\\\" matInput placeholder=\\\"Novo korisničko ime\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <div *ngIf=\\\"usernameSubmited && u.username.errors\\\">\\r\\n                <div *ngIf=\\\"u.username.errors.required && korisnickoImeMetod != 'email'\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Korisničko ime je obavezno</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"u.username.errors.minlength && korisnickoImeMetod != 'email'\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Korisničko ime mora imati vise od 3 karaktera</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"usernameSubmited && korisnickoImeJeZauzeto\\\">\\r\\n                <p class=\\\"upozorenje\\\">Korisničko ime je vec zazueto</p>\\r\\n              </div>\\r\\n              <div class=\\\"button-div\\\">\\r\\n                <button class=\\\"button-glavni-100\\\" (click)=\\\"promeniUsername()\\\" mat-raised-button>Sacuvaj</button>\\r\\n                <button *ngIf=\\\"korisnickoImeMetod != 'email'\\\" class=\\\"button-crveni-50 float-right\\\" (click)=\\\"username.value = ''; usernameSubmited=false\\\"\\r\\n                  mat-raised-button>Poništi</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-expansion-panel>\\r\\n          <mat-expansion-panel class=\\\"exp-panel\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <p class=\\\"panel\\\">Promenite šifru</p>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <form role=\\\"form\\\" [formGroup]=\\\"passwordForm\\\">\\r\\n              <div>\\r\\n                <mat-form-field>\\r\\n                  <input matInput type=\\\"password\\\" #staraSifra formControlName=\\\"staraSifra\\\" placeholder=\\\"Stara šifra\\\">\\r\\n                </mat-form-field>\\r\\n                <div *ngIf=\\\"passwordSubmited && !s.staraSifra.errors && losaSifra\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Stara šifra nije tačna</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"passwordSubmited && s.staraSifra.errors\\\">\\r\\n                  <div *ngIf=\\\"s.staraSifra.errors.required\\\">\\r\\n                    <p class=\\\" upozorenje\\\">Stara šifra je obavezna</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"s.staraSifra.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Korisničko ime mora imati vise od 3 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput type=\\\"password\\\" #novaSifra formControlName=\\\"novaSifra\\\" placeholder=\\\"Nova šifra\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"passwordSubmited && s.novaSifra.errors\\\">\\r\\n                  <div *ngIf=\\\"s.novaSifra.errors.required\\\">\\r\\n                    <p class=\\\" upozorenje\\\">Nova šifra je obavezna</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"s.novaSifra.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Nova sifra mora imati vise od 3 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput type=\\\"password\\\" #novaSifra2 formControlName=\\\"novaSifra2\\\" placeholder=\\\"Ponovite novu šifru\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"passwordSubmited && s.novaSifra2.errors\\\">\\r\\n                  <div *ngIf=\\\"s.novaSifra2.errors.required\\\">\\r\\n                    <p class=\\\" upozorenje\\\">Nova šifra je obavezna</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"s.novaSifra2.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Nova sifra mora imati vise od 3 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"novaSifra.value != novaSifra2.value && !s.novaSifra.errors && !s.novaSifra2.errors  && passwordSubmited\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Nova sifra nije ista</p>\\r\\n                </div>\\r\\n                <div class=\\\"button-div\\\">\\r\\n                  <button class=\\\"button-glavni-100\\\" (click)=\\\"promeniSifru(staraSifra.value, novaSifra.value, novaSifra2.value)\\\"\\r\\n                    mat-raised-button>Sacuvaj</button>\\r\\n                  <button *ngIf=\\\"korisnickoImeMetod != 'email'\\\" class=\\\"button-crveni-50 float-right\\\" (click)=\\\"username.value = ''; passwordSubmited=false\\\"\\r\\n                    mat-raised-button>Poništi</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"h1 {\\n  font-size: 25px;\\n  color: #273747;\\n  font-weight: bold;\\n  text-align: center; }\\n\\nul {\\n  list-style-type: none; }\\n\\nli {\\n  padding: 10px;\\n  margin-top: 12px; }\\n\\n.exp-panel {\\n  margin-top: 12px; }\\n\\n.header2 {\\n  text-align: center;\\n  margin-top: 20px;\\n  margin-bottom: 30px; }\\n\\n.leva-strana {\\n  width: 80px;\\n  float: left;\\n  color: #345cac;\\n  font-weight: bold; }\\n\\n.desna-strana {\\n  font-weight: bold; }\\n\\n.licni-podaci {\\n  margin-top: 6%;\\n  width: 80%;\\n  margin-left: 10%; }\\n\\n.radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.panel {\\n  color: #345cac;\\n  font-weight: bold; }\\n\\n.email-selected {\\n  color: #8ea7b4 !important; }\\n\\n.dugovanje {\\n  color: #b71c1c; }\\n\\n.button-div {\\n  width: 70%;\\n  margin-left: 15%; }\\n\\n.strana {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  width: 90%;\\n  margin-left: 10px;\\n  height: 100%;\\n  margin-top: 10px;\\n  padding: 10px;\\n  border-bottom: 0.5px solid #273747;\\n  background-color: white; }\\n\\n@media only screen and (max-device-width: 640px) {\\n  .strana {\\n    width: 100%;\\n    height: 100%;\\n    margin-top: 10px;\\n    border-bottom: 0.5px solid #273747;\\n    background-color: white; }\\n  li {\\n    padding: 0px; }\\n  ul {\\n    margin: 0px;\\n    padding: 2px; }\\n  .licni-podaci {\\n    margin-top: 1%;\\n    width: 95%;\\n    margin-left: 0%; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../service/login.service';\r\nimport { Partner } from '../model/dto';\r\nimport { PartnerService } from '../service/partner.service';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-partner',\r\n  templateUrl: './partner.component.html',\r\n  styleUrls: ['./partner.component.scss']\r\n})\r\nexport class PartnerComponent implements OnInit {\r\n\r\n  public partner: Partner;\r\n  public daLiDuguje = false;\r\n  public korisnickoImeMetod = 'novo';\r\n  public losaSifra = false;\r\n  public korisnickoImeJeZauzeto = false;\r\n\r\n  public ucitavanje = false;\r\n  private alive = true;\r\n\r\n  // sve forme\r\n  public adresaForm: FormGroup;\r\n  public adresaSubmited = false;\r\n  public emailForm: FormGroup;\r\n  public emailSubmited = false;\r\n  public usernameForm: FormGroup;\r\n  public usernameSubmited = false;\r\n  public passwordForm: FormGroup;\r\n  public passwordSubmited = false;\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private partnerServis: PartnerService,\r\n    private formBuilder: FormBuilder,\r\n    public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    if (this.partner) {\r\n      this.daLiDuguje = this.partner.stanje < 0;\r\n    }\r\n    this.inicijalizujSveRegistracioneForme();\r\n  }\r\n\r\n  inicijalizujSveRegistracioneForme() {\r\n    this.adresaForm = this.formBuilder.group({\r\n      ulica: ['', [Validators.required, Validators.minLength(3)]],\r\n      grad: ['', [Validators.required, Validators.minLength(2)]]\r\n    });\r\n    this.emailForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n    this.usernameForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n    });\r\n    this.passwordForm = this.formBuilder.group({\r\n      staraSifra: ['', [Validators.required, Validators.minLength(3)]],\r\n      novaSifra: ['', [Validators.required, Validators.minLength(3)]],\r\n      novaSifra2: ['', [Validators.required, Validators.minLength(3)]],\r\n    });\r\n  }\r\n\r\n  public daLiKorisnickoImeTrebaDaBudeEmail() {\r\n    return this.korisnickoImeMetod === 'email';\r\n  }\r\n\r\n  promeniAdresu(ulica: string, grad: string) {\r\n    const poruka = 'Adresa uspesno promenjena.';\r\n    this.adresaSubmited = true;\r\n    if (this.adresaForm.invalid) {\r\n      return;\r\n    }\r\n    this.partner.adresa = ulica + ', ' + grad;\r\n    this.updejtPartnera(this.partner, poruka);\r\n  }\r\n\r\n  promeniLEmail(email: string) {\r\n    const poruka = 'Email je uspesno promenjen.';\r\n    this.emailSubmited = true;\r\n    if (this.emailForm.invalid) {\r\n      return;\r\n    }\r\n    this.partner.email = email;\r\n    this.updejtPartnera(this.partner, poruka);\r\n  }\r\n\r\n  promeniUsername() {\r\n    let username = '';\r\n    this.usernameSubmited = true;\r\n    if (this.korisnickoImeMetod === 'email') {\r\n      username = this.partner.email;\r\n    } else if (this.usernameForm.invalid) {\r\n      return;\r\n    } else if (this.usernameForm.controls.username.value) {\r\n      username = this.usernameForm.controls.username.value;\r\n    }\r\n    const poruka = 'Vaše novo korisničko ime je: ' + username;\r\n    this.partner.webKorisnik = username;\r\n    this.partnerServis.updejtujPartnera(this.partner)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 400) {\r\n            this.korisnickoImeJeZauzeto = true;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.korisnickoImeJeZauzeto = false;\r\n          this.partner = res;\r\n          this.otvoriSnackBar(poruka);\r\n        },\r\n        error => {\r\n          console.log('Updejtovanje partnera nije uspelo');\r\n        });\r\n  }\r\n\r\n  promeniSifru(staraSifra: string, novaSifra: string, novaSifra2: string) {\r\n    this.passwordSubmited = true;\r\n    if (this.passwordForm.invalid ||\r\n      novaSifra === staraSifra) {\r\n      const a = this.s.staraSifra.errors.minLength;\r\n      return;\r\n    }\r\n    this.partner.noviPassword = novaSifra;\r\n    this.partner.stariPassword = staraSifra;\r\n    const poruka = 'Vaša šifra je uspeno promenjena';\r\n    this.partnerServis.updejtujPartnera(this.partner)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 400) {\r\n            this.losaSifra = true;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.partner = res;\r\n          this.losaSifra = false;\r\n          this.otvoriSnackBar(poruka);\r\n        },\r\n        error => {\r\n          console.log('Updejtovanje partnera nije uspelo');\r\n        });\r\n  }\r\n\r\n  updejtPartnera(partner: Partner, poruka: string) {\r\n    this.partnerServis.updejtujPartnera(this.partner)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => throwError(error)),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.partner = res;\r\n          this.otvoriSnackBar(poruka);\r\n        },\r\n        error => {\r\n          console.log('Updejtovanje partnera nije uspelo');\r\n        });\r\n  }\r\n\r\n  otvoriSnackBar(poruka: string) {\r\n    this.snackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get a() { return this.adresaForm.controls; }\r\n  get e() { return this.emailForm.controls; }\r\n  get u() { return this.usernameForm.controls; }\r\n  get s() { return this.passwordForm.controls; }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"flex-login\\\">\\n    <div class=\\\"login-form\\\">\\n      <h1>Promeni šifru</h1>\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"submitted == true && uspesnaPromena == false\\\">\\n        <p>Promena šifre nije uspela, zahtevajte ponovo poštu za resetovanje šifre.</p>\\n      </div>\\n      <form role=\\\"form\\\" [formGroup]=\\\"promenaSifreForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"password\\\" #pass1 formControlName=\\\"pass1\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Šifra\\\" id=\\\"pass1\\\"\\n            name=\\\"pass1\\\" />\\n          <div *ngIf=\\\"submitted && r.pass1.errors\\\">\\n            <div *ngIf=\\\"r.pass1.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\n            </div>\\n            <div *ngIf=\\\"r.pass1.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"password\\\" #pass2 formControlName=\\\"pass2\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Ponovite šifru\\\"\\n            id=\\\"password\\\" name=\\\"password\\\" />\\n          <div *ngIf=\\\"submitted && r.pass2.errors\\\">\\n            <div *ngIf=\\\"r.pass2.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\n            </div>\\n            <div *ngIf=\\\"r.pass2.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"submitted && !r.pass2.errors && pass1.value != pass2.value\\\">\\n            <p class=\\\"upozorenje\\\">Šifre nisu iste</p>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex\\\">\\n          <button mat-raised-button (click)=\\\"promeniSifru()\\\" class=\\\"rounded\\\" color=\\\"primary\\\">Promeni</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".flex-login {\\n  margin-top: 10%;\\n  display: flex;\\n  justify-content: center; }\\n\\n.login-form {\\n  width: 400px;\\n  justify-content: center; }\\n\\nh1 {\\n  text-align: center;\\n  font-family: serif;\\n  font-weight: normal;\\n  text-transform: uppercase; }\\n\\nbutton {\\n  margin: auto;\\n  display: block; }\\n\\np {\\n  text-align: center;\\n  font-family: sans-serif;\\n  padding: 0;\\n  margin: 0; }\\n\\n.is-invalid {\\n  border: 1px solid red; }\\n\\n.upozorenje {\\n  text-align: left;\\n  font-family: sans-serif;\\n  font-size: 14px;\\n  color: red; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { PromenaSifre } from '../model/dto';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { PartnerService } from '../service/partner.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-resetovanje-sfire',\n  templateUrl: './resetovanje-sfire.component.html',\n  styleUrls: ['./resetovanje-sfire.component.scss']\n})\nexport class ResetovanjeSfireComponent implements OnInit {\n  public promenaSifreForm: FormGroup;\n  public submitted = false;\n  public uspesnoLogovanje = true;\n  private staraSifra: string;\n  private ppid: number;\n  \n  public ucitavanje = false;\n  private alive = true;\n  public uspesnaPromena = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private partnerServis: PartnerService,\n    public snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.promenaSifreForm = this.formBuilder.group({\n      pass1: ['', [Validators.required, Validators.minLength(3)]],\n      pass2: ['', [Validators.required, Validators.minLength(3)]]\n    });\n    this.route.params.subscribe((params: Params) => {\n      this.staraSifra = params.id;\n    });\n    this.route.queryParams.subscribe((params: Params) => {\n      this.ppid = params.id;\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get r() { return this.promenaSifreForm.controls; }\n\n  promeniSifru() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.promenaSifreForm.invalid || this.r.pass1.value !== this.r.pass2.value) {\n      return;\n    }\n    const dto = this.napraviDto();\n    this.partnerServis.promeniSifru(dto).pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => {\n        if (error.status === 400) {\n          this.uspesnaPromena = false;\n          return EMPTY;\n        }\n        return throwError(error);\n      }),\n      finalize(() => this.ucitavanje = false)\n    )\n    .subscribe(\n      res => {\n        this.uspesnaPromena = true;\n        this.otvoriSnackBar('Šifra uspešno promenjena');\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.uspesnaPromena = false;\n        console.log('Updejtovanje partnera nije uspelo');\n      });\n  }\n\n  otvoriSnackBar(poruka: string) {\n    this.snackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  private napraviDto(): PromenaSifre {\n    const dto = new PromenaSifre();\n    dto.sifra = this.r.pass1.value;\n    dto.ponovljenjaSifra = this.r.pass2.value;\n    dto.ppid = this.ppid;\n    dto.staraSifra = this.staraSifra;\n    return dto;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h2>\\r\\n                    Filter\\r\\n                </h2>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        {{proizvodjac.naziv}}\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Raspolozivost: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                    </button>\\r\\n                    <span class=\\\"col-2\\\"></span>\\r\\n                    <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n        <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n            <!-- Kataloski broj Column -->\\r\\n            <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.katbr}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kataloski broj proizvodjaca Column -->\\r\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.katbrpro}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Naziv Column -->\\r\\n            <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Proizvodjac Column -->\\r\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.proizvodjac.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Rabat </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.rabat | currency:\\\" \\\"}}%\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"cena\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Stanje Column -->\\r\\n            <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- Kolicina Column -->\\r\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                            placeholder=\\\"0\\\" [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kropa dugme Column -->\\r\\n            <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Da li ima na stanju ikona -->\\r\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Sort, MatSnackBar } from '@angular/material';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Proizvodjac, Partner } from '../../model/dto';\r\nimport { Korpa } from '../../model/porudzbenica';\r\nimport { RobaService } from '../../service/roba.service';\r\nimport { AppUtilsService } from '../../utils/app-utils.service';\r\nimport { LoginService } from '../../service/login.service';\r\nimport { DataService } from '../../service/data/data.service';\r\nimport { ProizvodjacService } from '../../service/proizvodjac.service';\r\n@Component({\r\n  selector: 'app-akumulatori',\r\n  templateUrl: './akumulatori.component.html',\r\n  styleUrls: ['./akumulatori.component.css']\r\n})\r\nexport class AkumulatoriComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'rabat', ifNotAuth: false },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private utilsService: AppUtilsService,\r\n    private loginServis: LoginService,\r\n    private dataService: DataService,\r\n    private proizvodjacService: ProizvodjacService,\r\n    public korpaSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  pronandjiSveAkumulatore() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiAkumulatore(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiAkumulatorePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiAkumulatore(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.proizvodjacService.pronadjiSveProizvodjaceAkumulatora()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronandjiSveAkumulatore();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiAkumulatorePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiAkumulatorePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    this.pronadjiAkumulatorePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiAkumulatorePoPretrazi(recZaPretragu);\r\n  }\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string) {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <main>\\r\\n        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n            <div class=\\\"forms-input\\\">\\r\\n                <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n                <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                    <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                        <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                    <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                        <mat-icon>view_headline</mat-icon>\\r\\n                    </button>\\r\\n                    <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                        <mat-icon>view_headline</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n                <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n            </label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n            <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n                <div class=\\\"d-flex justify-content-center\\\">\\r\\n                    <h2>\\r\\n                        Filter\\r\\n                    </h2>\\r\\n                </div>\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                        <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                            <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                        <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                            {{proizvodjac.naziv}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n\\r\\n                    <div class=\\\"input-group-prepend razmak\\\">\\r\\n                        <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                            Raspolozivost:\\r\\n                        </label>\\r\\n                    </div>\\r\\n                    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                        <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex justify-content-center\\\">\\r\\n                    <div>\\r\\n                        <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                            <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                        </button>\\r\\n                        <span class=\\\"col-2\\\"></span>\\r\\n                        <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                            <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n            <i class=\\\"material-icons icon-size\\\">\\r\\n                error_outline\\r\\n            </i>\\r\\n            <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n            <mat-spinner></mat-spinner>\\r\\n        </div>\\r\\n        <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n            <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                <!-- Kataloski broj Column -->\\r\\n                <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.katbr}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Kataloski broj proizvodjaca Column -->\\r\\n                <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-1\\\">\\r\\n                            {{roba.katbrpro}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Naziv Column -->\\r\\n                <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-1\\\">\\r\\n                            {{roba.naziv}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Proizvodjac Column -->\\r\\n                <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.proizvodjac.naziv}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Cena Column -->\\r\\n                <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Rabat </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                            {{roba.rabat | currency:\\\" \\\"}}%\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Cena Column -->\\r\\n                <ng-container matColumnDef=\\\"cena\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                            {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Stanje Column -->\\r\\n                <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                            <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                            <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n\\r\\n                <!-- Kolicina Column -->\\r\\n                <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                            <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                                [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                        </div>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Kropa dugme Column -->\\r\\n                <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                            <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u\\r\\n                                korpu</button>\\r\\n                        </div>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Da li ima na stanju ikona -->\\r\\n                <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                            <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                        </div>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n                [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n            </mat-paginator>\\r\\n        </div>\\r\\n    </main>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Sort, MatSnackBar } from '@angular/material';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Proizvodjac, Partner } from '../../model/dto';\r\nimport { RobaService } from '../../service/roba.service';\r\nimport { ProizvodjacService } from '../../service/proizvodjac.service';\r\nimport { LoginService } from '../../service/login.service';\r\nimport { Korpa } from '../../model/porudzbenica';\r\nimport { DataService } from '../../service/data/data.service';\r\nimport { AppUtilsService } from '../../utils/app-utils.service';\r\n\r\n@Component({\r\n  selector: 'app-filteri',\r\n  templateUrl: './filteri.component.html',\r\n  styleUrls: ['./filteri.component.css']\r\n})\r\nexport class FilteriComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'rabat', ifNotAuth: false },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n\r\n  constructor(private robaService: RobaService,\r\n    private proizvodjacService: ProizvodjacService,\r\n    private loginServis: LoginService,\r\n    private dataService: DataService,\r\n    private utilsService: AppUtilsService,\r\n    public korpaSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  pronandjiSveFiltere() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiFiltere(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko', error);\r\n        });\r\n  }\r\n\r\n  pronadjiFilterePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiFiltere(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.proizvodjacService.pronadjiSveProizvodjaceFiltera()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronandjiSveFiltere();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiFilterePoPretrazi(searchValue);\r\n\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiFilterePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    this.pronadjiFilterePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiFilterePoPretrazi(recZaPretragu);\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string): boolean {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <main>\\r\\n        <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\r\\n            <button class=\\\"button-glavni-100 nazad-button\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\r\\n                <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n            <div class=\\\"forms-input\\\">\\r\\n                <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n                <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                    <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                        <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                    <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                        <mat-icon>view_headline</mat-icon>\\r\\n                    </button>\\r\\n                    <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                        <mat-icon>view_headline</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n                <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n            </label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n            <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n                <div class=\\\"d-flex justify-content-center\\\">\\r\\n                    <h2>\\r\\n                        Filter\\r\\n                    </h2>\\r\\n                </div>\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                        <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                            <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                        <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                            {{proizvodjac.naziv}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n\\r\\n                    <div class=\\\"input-group-prepend razmak\\\">\\r\\n                        <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                            <p class=\\\"boja-siva-400\\\">Raspolozivost: </p>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                        <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex justify-content-center\\\">\\r\\n                    <div>\\r\\n                        <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                            <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                        </button>\\r\\n                        <span class=\\\"col-2\\\"></span>\\r\\n                        <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                            <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n            <i class=\\\"material-icons icon-size\\\">\\r\\n                error_outline\\r\\n            </i>\\r\\n            <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n            <mat-spinner></mat-spinner>\\r\\n        </div>\\r\\n        <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                <!-- Kataloski broj Column -->\\r\\n                <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.katbr}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Kataloski broj proizvodjaca Column -->\\r\\n                <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-1\\\">\\r\\n                            {{roba.katbrpro}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Naziv Column -->\\r\\n                <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-1\\\">\\r\\n                            {{roba.naziv}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Proizvodjac Column -->\\r\\n                <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.proizvodjac.naziv}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Cena Column -->\\r\\n                <ng-container matColumnDef=\\\"cena\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                            {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Stanje Column -->\\r\\n                <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                            <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                            <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n\\r\\n                <!-- Kolicina Column -->\\r\\n                <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                            <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                                [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                        </div>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Kropa dugme Column -->\\r\\n                <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                            <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u\\r\\n                                korpu</button>\\r\\n                        </div>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Da li ima na stanju ikona -->\\r\\n                <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                            <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                        </div>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n                [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n            </mat-paginator>\\r\\n        </div>\\r\\n    </main>\\r\\n</div>\"","module.exports = \".forms-input {\\n  margin-top: 0px !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { MatSnackBar, Sort } from '@angular/material';\r\nimport { Roba, Proizvodjac, Partner } from 'src/app/e-shop/model/dto';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\nimport { ProizvodjacService } from 'src/app/e-shop/service/proizvodjac.service';\r\nimport { LoginService } from 'src/app/e-shop/service/login.service';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\n\r\n@Component({\r\n  selector: 'app-kategorija-specificna',\r\n  templateUrl: './kategorija-specificna.component.html',\r\n  styleUrls: ['./kategorija-specificna.component.scss']\r\n})\r\nexport class KategorijaSpecificnaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private proizvodjacService: ProizvodjacService,\r\n    private loginServis: LoginService,\r\n    private utilsService: AppUtilsService,\r\n    private dataService: DataService,\r\n    private robaServis: RobaService,\r\n    public korpaSnackBar: MatSnackBar,\r\n    private router: Router\r\n  ) { }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.route.params.subscribe((params: Params) => {\r\n    this.proizvodjacService.pronadjiSveProizvodjaceKategorije(params.id)\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronandjiRobu();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n      });\r\n  }\r\n\r\n  pronandjiRobu() {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.robaServis.pronadjiPoKategoriji(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, params.id)\r\n        .pipe(\r\n          takeWhile(() => this.alive),\r\n          catchError((error: Response) => {\r\n            if (error.status === 404) {\r\n              this.pronadjenaRoba = false;\r\n              return EMPTY;\r\n            }\r\n            return throwError(error);\r\n          }),\r\n          finalize(() => this.ucitavanje = false)\r\n        )\r\n        .subscribe(\r\n          res => {\r\n            this.pronadjenaRoba = true;\r\n            this.roba = res.content;\r\n            this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n            this.dataSource = this.roba;\r\n            this.rowsPerPage = res.size;\r\n            this.pageIndex = res.number;\r\n            this.tableLength = res.totalElements;\r\n          },\r\n          error => {\r\n            this.roba = null;\r\n            console.log('Podnaci robu izbacilo je gresko');\r\n          });\r\n    });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiSvuRobuPoPretrazi(searchValue);\r\n  }\r\n\r\n  pronadjiSvuRobuPoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.robaServis.pronadjiPoKategoriji(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, params.id)\r\n        .pipe(\r\n          takeWhile(() => this.alive),\r\n          catchError((error: Response) => {\r\n            if (error.status === 404) {\r\n              this.pronadjenaRoba = false;\r\n              return EMPTY;\r\n            }\r\n            return throwError(error);\r\n          }),\r\n          finalize(() => this.ucitavanje = false)\r\n        )\r\n        .subscribe(\r\n          res => {\r\n            this.pronadjenaRoba = true;\r\n            this.roba = res.content;\r\n            this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n            this.dataSource = this.roba;\r\n            this.rowsPerPage = res.size;\r\n            this.pageIndex = res.number;\r\n            this.tableLength = res.totalElements;\r\n          },\r\n          error => {\r\n            this.roba = null;\r\n            console.log('Podnaci robu izbacilo je gresko');\r\n          });\r\n    });\r\n  }\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    let searchTerm;\r\n    if (this.lastSearchValue) {\r\n      searchTerm = this.lastSearchValue;\r\n    } else if (this.searchValue) {\r\n      searchTerm = this.searchValue;\r\n    } else {\r\n      searchTerm = null;\r\n    }\r\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiSvuRobuPoPretrazi(recZaPretragu);\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string) {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n\r\n  idiNazad() {\r\n    this.router.navigate(['/ostalo']);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <main *ngIf=\\\"kategorije\\\">\\r\\n    <h1>Kategorije</h1>\\r\\n    <div *ngFor=\\\"let slovo of pocetnaSlova\\\">\\r\\n      <div class=\\\"d-flex flex-row flex-wrap\\\">\\r\\n        <div class=\\\"slovo\\\">\\r\\n          <h2>{{slovo}}</h2>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let kategorija of vratiKategorijuNaSlovo(slovo)\\\">\\r\\n          <a [routerLink]=\\\"[kategorija  | lowercase]\\\" mat-button color=\\\"primary\\\">{{\\\"kategorija_\\\" + kategorija | translate}}</a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"h1 {\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  margin-bottom: 50px; }\\n\\n.slovo {\\n  width: 30px;\\n  margin-top: 0px;\\n  padding: 0px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { RobaService } from '../../service/roba.service';\r\n\r\n@Component({\r\n  selector: 'app-ostalo',\r\n  templateUrl: './ostalo.component.html',\r\n  styleUrls: ['./ostalo.component.scss']\r\n})\r\nexport class OstaloComponent implements OnInit {\r\n\r\n  public kategorije: string[];\r\n  private alive = true;\r\n  public ucitavanje = false;\r\n  public pocetnaSlova = ['A', 'B', 'C', 'D', 'G', 'H', 'Z', 'I', 'K', 'L', 'M', 'P', 'R', 'S', 'T', 'V', 'Z'];\r\n\r\n  constructor(private robaServis: RobaService) { }\r\n\r\n  ngOnInit() {\r\n    this.robaServis.ostaleKategorije().pipe(\r\n      takeWhile(() => this.alive),\r\n      catchError((error: Response) => throwError(error)),\r\n      finalize(() => this.ucitavanje = false)\r\n    )\r\n      .subscribe(\r\n        res => {\r\n          this.kategorije = res;\r\n        },\r\n        error => {\r\n          console.log('Podnaci kategorije je izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  vratiKategorijuNaSlovo(slovo: string): string[] {\r\n    const kategorije = [];\r\n    this.kategorije.forEach(kategorija => {\r\n      if (kategorija[0] === slovo) {\r\n        kategorije.push(kategorija);\r\n      }\r\n    });\r\n    return kategorije;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h2>\\r\\n                    Filter\\r\\n                </h2>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        {{proizvodjac.naziv}}\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Raspolozivost: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                    </button>\\r\\n                    <span class=\\\"col-2\\\"></span>\\r\\n                    <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n        <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n            <!-- Kataloski broj Column -->\\r\\n            <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.katbr}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kataloski broj proizvodjaca Column -->\\r\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.katbrpro}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Naziv Column -->\\r\\n            <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Proizvodjac Column -->\\r\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.proizvodjac.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Rabat </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.rabat | currency:\\\" \\\"}}%\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"cena\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Stanje Column -->\\r\\n            <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- Kolicina Column -->\\r\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                            [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kropa dugme Column -->\\r\\n            <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Da li ima na stanju ikona -->\\r\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RobaService } from '../service/roba.service';\r\nimport { Roba, Proizvodjac, Partner } from '../model/dto';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Sort, MatSnackBar } from '@angular/material';\r\nimport { ProizvodjacService } from '../service/proizvodjac.service';\r\nimport { DataService } from '../service/data/data.service';\r\nimport { Korpa } from '../model/porudzbenica';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { LoginService } from '../service/login.service';\r\n\r\n@Component({\r\n  selector: 'app-roba',\r\n  templateUrl: './roba.component.html',\r\n  styleUrls: ['./roba.component.css']\r\n})\r\nexport class RobaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'rabat', ifNotAuth: false },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n\r\n  constructor(private robaService: RobaService,\r\n    private proizvodjacService: ProizvodjacService,\r\n    private loginServis: LoginService,\r\n    private dataService: DataService,\r\n    private utilsService: AppUtilsService,\r\n    public korpaSnackBar: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  pronadjiSvuRobu() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiSvuRobu(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiSvuRobuPoPretrazi(searchValue);\r\n  }\r\n\r\n  pronadjiSvuRobuPoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiSvuRobu(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.proizvodjacService.pronadjiSveProizvodjace()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronadjiSvuRobu();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    let searchTerm;\r\n    if (this.lastSearchValue) {\r\n      searchTerm = this.lastSearchValue;\r\n    } else if (this.searchValue) {\r\n      searchTerm = this.searchValue;\r\n    } else {\r\n      searchTerm = null;\r\n    }\r\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiSvuRobuPoPretrazi(recZaPretragu);\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string) {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h2>\\r\\n                    Filter\\r\\n                </h2>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        {{proizvodjac.naziv}}\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Raspolozivost: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                    </button>\\r\\n                    <span class=\\\"col-2\\\"></span>\\r\\n                    <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n        <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n            <!-- Kataloski broj Column -->\\r\\n            <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.katbr}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kataloski broj proizvodjaca Column -->\\r\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.katbrpro}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Naziv Column -->\\r\\n            <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Proizvodjac Column -->\\r\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.proizvodjac.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Rabat </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.rabat | currency:\\\" \\\"}}%\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"cena\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Stanje Column -->\\r\\n            <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- Kolicina Column -->\\r\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                            [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kropa dugme Column -->\\r\\n            <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Da li ima na stanju ikona -->\\r\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Sort, MatSnackBar } from '@angular/material';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Proizvodjac, Partner } from 'src/app/e-shop/model/dto';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { LoginService } from 'src/app/e-shop/service/login.service';\r\nimport { ProizvodjacService } from 'src/app/e-shop/service/proizvodjac.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\n\r\n@Component({\r\n  selector: 'app-antifriz',\r\n  templateUrl: './antifriz.component.html',\r\n  styleUrls: ['./antifriz.component.css']\r\n})\r\nexport class AntifrizComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'rabat', ifNotAuth: false },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n\r\n  private vrstaUlja = 'antifriz';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private utilsService: AppUtilsService,\r\n    private loginServis: LoginService,\r\n    private proizvodjacService: ProizvodjacService,\r\n    private dataService: DataService,\r\n    public korpaSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  pronandjiSavAntifriz() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronandjiSavAntifriz();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string): boolean {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n\r\n}\r\n","module.exports = \".sirina-odabira-vrste {\\r\\n    width: 450px;\\r\\n    float: right;\\r\\n}\\r\\n.forms-input-industrija {\\r\\n    display: flex;\\r\\n    border-radius: 45px;\\r\\n    padding: 1px;\\r\\n    margin-top: 5px;\\r\\n    background: white;\\r\\n    border:2px solid grey;\\r\\n    width: 40%;\\r\\n    font-weight: bold;\\r\\n    text-align: center;\\r\\n}\\r\\n@media only screen and (max-device-width :1025px) { \\r\\n\\r\\n    .forms-input-industrija {\\r\\n      display: flex;\\r\\n      border-radius: 45px;\\r\\n      padding: 1px;\\r\\n      margin-top: 30px;\\r\\n      background: white;\\r\\n      border:2px solid grey;\\r\\n      width: 80%;\\r\\n      font-weight: bold;\\r\\n      text-align: center;\\r\\n    }\\r\\n  }\\r\\n@media only screen and (max-device-width : 640px) { \\r\\n    .sirina-odabira-vrste {\\r\\n        width: 100%;\\r\\n    }\\r\\n    .forms-input-industrija {\\r\\n      border-radius: 45px;\\r\\n      background: white;\\r\\n      border:2px solid grey;\\r\\n      width:100%;\\r\\n      margin-top: 5px;\\r\\n      font-weight: bold;\\r\\n      text-align: center;\\r\\n      display: flex;\\r\\n      }  \\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"d-flex col-lg p-2 justify-content-center sirina-odabira-vrste\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n            <label class=\\\"pozadina-glavna-100 boja-siva-400 input-group-text \\\" for=\\\"inputGroupSelect01\\\">Izaberite vrstu\\r\\n                maziva:</label>\\r\\n        </div>\\r\\n        <select class=\\\"custom-select\\\" (change)=\\\"onChange()\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaVrsta\\\">\\r\\n            <option *ngFor=\\\"let izabranaVrsta of vrste\\\" [value]=\\\"izabranaVrsta\\\">{{izabranaVrsta}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex align-items-center col-lg justify-content-center\\\">\\r\\n        <div class=\\\"forms-input-industrija\\\">\\r\\n            <input class=\\\"flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h2>\\r\\n                    Filter\\r\\n                </h2>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        {{proizvodjac.naziv}}\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Raspolozivost: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                    </button>\\r\\n                    <span class=\\\"col-2\\\"></span>\\r\\n                    <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n        <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n            <!-- Kataloski broj Column -->\\r\\n            <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.katbr}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kataloski broj proizvodjaca Column -->\\r\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.katbrpro}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Naziv Column -->\\r\\n            <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Proizvodjac Column -->\\r\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.proizvodjac.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Rabat </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.rabat | currency:\\\" \\\"}}%\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"cena\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Stanje Column -->\\r\\n            <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- Kolicina Column -->\\r\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                            [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kropa dugme Column -->\\r\\n            <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Da li ima na stanju ikona -->\\r\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Sort, MatSnackBar } from '@angular/material';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Proizvodjac, Partner } from 'src/app/e-shop/model/dto';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { LoginService } from 'src/app/e-shop/service/login.service';\r\nimport { ProizvodjacService } from 'src/app/e-shop/service/proizvodjac.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\n\r\n@Component({\r\n  selector: 'app-industrijska',\r\n  templateUrl: './industrijska.component.html',\r\n  styleUrls: ['./industrijska.component.css']\r\n})\r\nexport class IndustrijskaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'rabat', ifNotAuth: false },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  public vrste: string[] = ['Hidraulično ulje', 'Kompresorkso ulje', 'Reduktorsko ulje',\r\n    'Transformatorsko ulje', 'Turbinska ulja', 'Ulja za pneumatske alate', 'Ulja za klizne staze', 'Ulja za prenos toplote'];\r\n  public izabranaVrsta: string = this.vrste[0];\r\n\r\n  public vrsteUlja = [\r\n    { 'url': 'hidraulicna', 'naziv': 'Hidraulično ulje' },\r\n    { 'url': 'kompresorska', 'naziv': 'Kompresorkso ulje' },\r\n    { 'url': 'redutktorska', 'naziv': 'Reduktorsko ulje' },\r\n    { 'url': 'transformatorska', 'naziv': 'Transformatorsko ulje' },\r\n    { 'url': 'turbinska', 'naziv': 'Turbinska ulja' },\r\n    { 'url': 'pneumatska', 'naziv': 'Ulja za pneumatske alate' },\r\n    { 'url': 'klizna', 'naziv': 'Ulja za klizne staze' },\r\n    { 'url': 'prenosna', 'naziv': 'Ulja za prenos toplote' },\r\n  ];\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n\r\n  private vrstaUlja = 'hidraulicna';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private utilsService: AppUtilsService,\r\n    private loginServis: LoginService,\r\n    private proizvodjacService: ProizvodjacService,\r\n    private dataService: DataService,\r\n    public korpaSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  pronandjiUlja() {\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronandjiUlja();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\r\n  }\r\n\r\n  onChange() {\r\n    this.vrsteUlja.forEach(vrsta => {\r\n      if (vrsta.naziv === this.izabranaVrsta) {\r\n        this.vrstaUlja = vrsta.url;\r\n      }\r\n    });\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string): boolean {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h2>\\r\\n                    Filter\\r\\n                </h2>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        {{proizvodjac.naziv}}\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Raspolozivost: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                    </button>\\r\\n                    <span class=\\\"col-2\\\"></span>\\r\\n                    <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n        <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n            <!-- Kataloski broj Column -->\\r\\n            <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.katbr}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kataloski broj proizvodjaca Column -->\\r\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.katbrpro}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Naziv Column -->\\r\\n            <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Proizvodjac Column -->\\r\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.proizvodjac.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Rabat </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.rabat | currency:\\\" \\\"}}%\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"cena\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Stanje Column -->\\r\\n            <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- Kolicina Column -->\\r\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                            [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kropa dugme Column -->\\r\\n            <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Da li ima na stanju ikona -->\\r\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Sort, MatSnackBar } from '@angular/material';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Proizvodjac, Partner } from 'src/app/e-shop/model/dto';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { LoginService } from 'src/app/e-shop/service/login.service';\r\nimport { ProizvodjacService } from 'src/app/e-shop/service/proizvodjac.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\n\r\n@Component({\r\n  selector: 'app-kociona',\r\n  templateUrl: './kociona.component.html',\r\n  styleUrls: ['./kociona.component.css']\r\n})\r\nexport class KocionaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'rabat', ifNotAuth: false },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n\r\n  private vrstaUlja = 'kociona';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private utilsService: AppUtilsService,\r\n    private loginServis: LoginService,\r\n    private proizvodjacService: ProizvodjacService,\r\n    private dataService: DataService,\r\n    public korpaSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  pronandjiSvaKocionaUlja() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronandjiSvaKocionaUlja();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string): boolean {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h2>\\r\\n                    Filter\\r\\n                </h2>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        {{proizvodjac.naziv}}\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Raspolozivost: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                    </button>\\r\\n                    <span class=\\\"col-2\\\"></span>\\r\\n                    <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n        <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n            <!-- Kataloski broj Column -->\\r\\n            <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.katbr}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kataloski broj proizvodjaca Column -->\\r\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.katbrpro}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Naziv Column -->\\r\\n            <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Proizvodjac Column -->\\r\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.proizvodjac.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Rabat </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.rabat | currency:\\\" \\\"}}%\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"cena\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Stanje Column -->\\r\\n            <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- Kolicina Column -->\\r\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                            [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kropa dugme Column -->\\r\\n            <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Da li ima na stanju ikona -->\\r\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Sort, MatSnackBar } from '@angular/material';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Proizvodjac, Partner } from 'src/app/e-shop/model/dto';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { LoginService } from 'src/app/e-shop/service/login.service';\r\nimport { ProizvodjacService } from 'src/app/e-shop/service/proizvodjac.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\n\r\n@Component({\r\n  selector: 'app-menjacko',\r\n  templateUrl: './menjacko.component.html',\r\n  styleUrls: ['./menjacko.component.css']\r\n})\r\nexport class MenjackoComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'rabat', ifNotAuth: false },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n\r\n  private vrstaUlja = 'menjacka';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private utilsService: AppUtilsService,\r\n    private proizvodjacService: ProizvodjacService,\r\n    private loginServis: LoginService,\r\n    private dataService: DataService,\r\n    public korpaSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  pronandjiSvaMenjackaUlja() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronandjiSvaMenjackaUlja();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string): boolean {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h2>\\r\\n                    Filter\\r\\n                </h2>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Proizvodjac: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        {{proizvodjac.naziv}}\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Raspolozivost: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                    </button>\\r\\n                    <span class=\\\"col-2\\\"></span>\\r\\n                    <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                        <p class=\\\"boja-siva-400\\\">Ponisti</p>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n        <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n            <!-- Kataloski broj Column -->\\r\\n            <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.katbr}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kataloski broj proizvodjaca Column -->\\r\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.katbrpro}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Naziv Column -->\\r\\n            <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Proizvodjac Column -->\\r\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.proizvodjac.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Rabat </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.rabat | currency:\\\" \\\"}}%\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"cena\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                        {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Stanje Column -->\\r\\n            <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- Kolicina Column -->\\r\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n                            [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kropa dugme Column -->\\r\\n            <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Da li ima na stanju ikona -->\\r\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                        <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Sort, MatSnackBar } from '@angular/material';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Proizvodjac, Partner } from 'src/app/e-shop/model/dto';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { LoginService } from 'src/app/e-shop/service/login.service';\r\nimport { ProizvodjacService } from 'src/app/e-shop/service/proizvodjac.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\n@Component({\r\n  selector: 'app-motorna',\r\n  templateUrl: './motorna.component.html',\r\n  styleUrls: ['./motorna.component.css']\r\n})\r\nexport class MotornaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public proizvodjaci: Proizvodjac[];\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  // Filteri\r\n  public izabraniProizvodjac = '';\r\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\r\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilterDiv = false;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'rabat', ifNotAuth: false },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n  private korpa: Korpa;\r\n  public partner: Partner;\r\n\r\n  private vrstaUlja = 'motorna';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private utilsService: AppUtilsService,\r\n    private proizvodjacService: ProizvodjacService,\r\n    private loginServis: LoginService,\r\n    private dataService: DataService,\r\n    public korpaSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.pronadjiSveProizvodjace();\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  pronandjiSvoMotornoUlje() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\r\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiSveProizvodjace() {\r\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(res => {\r\n        this.proizvodjaci = res;\r\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n        this.pronandjiSvoMotornoUlje();\r\n      },\r\n        error => {\r\n          this.proizvodjaci = null;\r\n          console.log('Pronaci svu robu je bacilo gresku', error);\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sort = sort;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\r\n  }\r\n\r\n  resetujFilter() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.izabranaRaspolozivost = this.raspolozivost[1];\r\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\r\n    this.filtriraj();\r\n  }\r\n\r\n  filtriraj() {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    let recZaPretragu: string;\r\n    recZaPretragu = this.searchValue;\r\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.openKorpaSnackBar(snackBarPoruka);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  openKorpaSnackBar(poruka: string) {\r\n    this.korpaSnackBar.open(poruka, '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string): boolean {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n}\r\n","module.exports = \".industrijski-stil {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n.spusti {\\r\\n    margin-top: 0px;\\r\\n}\\r\\n@media only screen and (max-device-width :1025px) { \\r\\n    .spusti {\\r\\n        margin-top: 30px;\\r\\n    }\\r\\n}\\r\\n@media only screen and (max-device-width : 1000px) { \\r\\n    .spusti {\\r\\n        margin-top: 10px;\\r\\n    }\\r\\n}\"","module.exports = \"<main class=\\\"spusti\\\">\\r\\n    <mat-tab-group mat-stretch-tabs>\\r\\n        <mat-tab label=\\\"Motorna ulja\\\">\\r\\n            <app-motorna></app-motorna>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Menjacka ulja\\\">\\r\\n            <app-menjacko></app-menjacko>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Kociona ulja\\\">\\r\\n            <app-kociona></app-kociona>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Antifiriz\\\">\\r\\n            <app-antifriz></app-antifriz>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Industrijska ulja\\\">\\r\\n            <app-industrijska></app-industrijska>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n</main>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ulja',\r\n  templateUrl: './ulja.component.html',\r\n  styleUrls: ['./ulja.component.css']\r\n})\r\nexport class UljaComponent {\r\n  selectedTab = 0;\r\n  changeTab(tabIndex: number) {\r\n    this.selectedTab = tabIndex;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport {  timeoutWith, catchError } from 'rxjs/operators';\r\nimport { Korpa, RobaKorpa } from '../../model/porudzbenica';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { Roba } from '../../model/dto';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst DOMAIN_URL = 'http://localhost:8080/api/informacije/';\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  private korpa: Korpa = this.korpaStorage.vratiKorpuIzMemorije() || new Korpa();\r\n  private korpaSubjekat = new BehaviorSubject(this.korpa);\r\n  public trenutnaKorpa = this.korpaSubjekat.asObservable();\r\n\r\n  constructor(private korpaStorage: LocalStorageService, private http: HttpClient) { }\r\n\r\n  ubaciUKorpu(robaKorpa: RobaKorpa) {\r\n    if (this.korpa.roba.length === 0) {\r\n      this.korpa.roba.push(robaKorpa);\r\n    } else {\r\n      let daLiPostojiVecUKorpi = false;\r\n      this.korpa.roba.forEach(roba => {\r\n        if (roba.katbr === robaKorpa.katbr) {\r\n          roba.kolicina = roba.kolicina + robaKorpa.kolicina;\r\n          roba.cenaUkupno = roba.kolicina * robaKorpa.cenaKom;\r\n          daLiPostojiVecUKorpi = true;\r\n        }\r\n      });\r\n      if (daLiPostojiVecUKorpi === false) {\r\n        this.korpa.roba.push(robaKorpa);\r\n      }\r\n    }\r\n    this.korpaStorage.cuvajKorpuULokalnojMemoriji(robaKorpa);\r\n    this.korpaSubjekat.next(this.korpa);\r\n  }\r\n\r\n  public skiniSaStanjaUkolikoJeUKorpi(robaBaza: Roba[]) {\r\n    const korpa = this.korpaStorage.vratiKorpuIzMemorije();\r\n    if (korpa && robaBaza) {\r\n      korpa.roba.forEach(storage => {\r\n        robaBaza.forEach(roba => {\r\n          if (storage.katbr === roba.katbr) {\r\n            roba.stanje = roba.stanje - storage.kolicina;\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n  public izbaciIzKorpe(index: number) {\r\n    this.korpa.roba.splice(index, 1);\r\n    this.korpaStorage.izbaciIzMemorije(index);\r\n    this.korpaSubjekat.next(this.korpa);\r\n  }\r\n\r\n  public vratiOpsteInformacije(vrsta: string): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + vrsta;\r\n    return this.http\r\n    .get(fullUrl)\r\n    .pipe(\r\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n      catchError((error: any) => throwError(error))\r\n    );\r\n  }\r\n\r\n  public ocistiKorpu() {\r\n    this.korpa = new Korpa();\r\n    this.korpaSubjekat.next(this.korpa);\r\n    this.korpaStorage.ocistiKorpuIzMemorije();\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { SESSION_STORAGE, StorageService } from 'angular-webstorage-service';\r\nimport { Korpa, RobaKorpa } from '../../model/porudzbenica';\r\nimport { Partner } from '../../model/dto';\r\n\r\nconst KORPA_KLJUC = 'korpa_roba';\r\nconst PARTNER_KLJUC = 'partner_kljuc';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor(@Inject(SESSION_STORAGE) private storage: StorageService) { }\r\n\r\n  public sacuvajPartneraUMemoriju(partner: Partner ) {\r\n    if (partner != null && partner.ppid != null) {\r\n    this.storage.set(PARTNER_KLJUC, partner);\r\n    }\r\n  }\r\n\r\n  public logout() {\r\n    this.storage.remove(PARTNER_KLJUC);\r\n    this.storage.remove(KORPA_KLJUC);\r\n  }\r\n\r\n  public procitajPartneraIzMemorije() {\r\n    return this.storage.get(PARTNER_KLJUC);\r\n  }\r\n\r\n  public vratiKorpuIzMemorije(): Korpa {\r\n    return this.storage.get(KORPA_KLJUC);\r\n  }\r\n\r\n  public cuvajKorpuULokalnojMemoriji(robaKorpa: RobaKorpa) {\r\n    let trenutnaKorpa: Korpa;\r\n    if (this.storage.get(KORPA_KLJUC)) {\r\n      trenutnaKorpa = this.storage.get(KORPA_KLJUC);\r\n      this.ubaciRobuUMemoriju(trenutnaKorpa, robaKorpa);\r\n    } else {\r\n      trenutnaKorpa = new Korpa();\r\n      trenutnaKorpa.roba.push(robaKorpa);\r\n    }\r\n\r\n    this.storage.set(KORPA_KLJUC, trenutnaKorpa);\r\n  }\r\n\r\n  private ubaciRobuUMemoriju(trenutnaKorpa: Korpa, robaKorpa: RobaKorpa) {\r\n      let daLiPostojiVecUMemoriji = false;\r\n      trenutnaKorpa.roba.forEach(storage => {\r\n        if (storage.katbr === robaKorpa.katbr) {\r\n          storage.kolicina = storage.kolicina + robaKorpa.kolicina;\r\n          storage.cenaUkupno = storage.kolicina * robaKorpa.cenaKom;\r\n          daLiPostojiVecUMemoriji = true;\r\n        }\r\n      });\r\n      if (daLiPostojiVecUMemoriji === false) {\r\n        trenutnaKorpa.roba.push(robaKorpa);\r\n      }\r\n  }\r\n\r\n  public izbaciIzMemorije(index: number) {\r\n    const korpa = this.vratiKorpuIzMemorije();\r\n    korpa.roba.splice(index, 1);\r\n    this.storage.set(KORPA_KLJUC, korpa);\r\n  }\r\n\r\n  public zameniArtikalSaNovim(robaKorpa: RobaKorpa) {\r\n    const trenutnaKorpa: Korpa = this.storage.get(KORPA_KLJUC);\r\n    trenutnaKorpa.roba.forEach(storage => {\r\n      if (storage.katbr === robaKorpa.katbr) {\r\n        storage.kolicina = robaKorpa.kolicina;\r\n        storage.cenaUkupno = robaKorpa.cenaUkupno;\r\n      }\r\n    });\r\n    this.storage.set(KORPA_KLJUC, trenutnaKorpa);\r\n  }\r\n\r\n  public ocistiKorpuIzMemorije() {\r\n    this.storage.remove(KORPA_KLJUC);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { timeoutWith, catchError, map } from 'rxjs/operators';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { Fakutra } from '../model/dto';\r\n\r\nconst DOMAIN_URL = 'http://localhost:8080/api';\r\nconst FAKTURA_URL = '/fakture';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FakturaService {\r\n\r\n  constructor(private http: HttpClient, private utils: AppUtilsService) { }\r\n\r\n  public vratiFaktureKorisnika(page: number, pageSize: number, ppid: number) {\r\n    const parameterObject = {};\r\n    parameterObject['page'] = page;\r\n    parameterObject['pageSize'] = pageSize;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + FAKTURA_URL + '/' + ppid + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error)));\r\n  }\r\n\r\n  public vratiFakturuPojedinacno(id: number, ppid: number) {\r\n    const fullUrl = DOMAIN_URL + FAKTURA_URL + '/' + ppid + '/' + id;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error)));\r\n  }\r\n\r\n  public sacuvajFakturu(faktura: Fakutra) {\r\n    const fullUrl = DOMAIN_URL + FAKTURA_URL;\r\n    return this.http\r\n      .post(fullUrl, faktura)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { throwError, BehaviorSubject, EMPTY } from 'rxjs';\r\nimport { Credentials, Partner } from '../model/dto';\r\nimport { timeoutWith, catchError, finalize } from 'rxjs/operators';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from './data/local-storage.service';\r\nimport { DataService } from './data/data.service';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\nconst DOMAIN_URL = 'http://localhost:8080';\r\nconst LOGIN_URL = '/login';\r\nconst LOGOUT_URL = '/logout';\r\nconst PARTNER_URL = '/api/partner';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  private partner: Partner = this.storageServis.procitajPartneraIzMemorije() || new Partner();\r\n  private partnerSubjekat = new BehaviorSubject(this.partner);\r\n  public ulogovaniPartner = this.partnerSubjekat.asObservable();\r\n\r\n  private uspesnoLogovanje = true;\r\n  private logovanjeSubjekat = new BehaviorSubject(this.uspesnoLogovanje);\r\n  public daLiJeLogovanjeUspesno = this.logovanjeSubjekat.asObservable();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private utils: AppUtilsService,\r\n    private korpaServis: DataService,\r\n    private storageServis: LocalStorageService) { }\r\n\r\n  public ulogujSe(credentials: Credentials) {\r\n    const parameterObject = {};\r\n    parameterObject['username'] = credentials.username;\r\n    parameterObject['password'] = credentials.password;\r\n    parameterObject['submit'] = 'Login';\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + LOGIN_URL + parametersString;\r\n\r\n    this.http.post(fullUrl, {}, { responseType: 'text' })\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      ).subscribe(res => {\r\n        this.vratiUlogovanogKorisnika();\r\n      },\r\n        error => {\r\n          this.logovanjeSubjekat.next(false);\r\n          this.storageServis.logout();\r\n          console.log('Greska kod logovanja');\r\n        });\r\n  }\r\n\r\n  private vratiUlogovanogKorisnika() {\r\n    const fullUrl = DOMAIN_URL + PARTNER_URL;\r\n    this.http.get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: HttpErrorResponse) => {\r\n          if (error.status === 404) {\r\n            this.logovanjeSubjekat.next(false);\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        })\r\n      ).subscribe(res => {\r\n        this.partner = res;\r\n        this.storageServis.sacuvajPartneraUMemoriju(this.partner);\r\n        this.partnerSubjekat.next(this.partner);\r\n        this.router.navigateByUrl('naslovna');\r\n      },\r\n        error => {\r\n          this.logovanjeSubjekat.next(false);\r\n          console.log('Logovanje nije uspelo.');\r\n        });\r\n  }\r\n\r\n  public logout() {\r\n    const fullUrl = DOMAIN_URL + LOGOUT_URL;\r\n    this.http.post(fullUrl, {}, { responseType: 'text' })\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      )\r\n      .subscribe(() => {\r\n        this.partner = new Partner();\r\n        this.logovanjeSubjekat.next(true);\r\n        this.partnerSubjekat.next(this.partner);\r\n        this.korpaServis.ocistiKorpu();\r\n        this.storageServis.logout();\r\n        this.router.navigateByUrl('naslovna');\r\n      },\r\n        error => {\r\n          this.logovanjeSubjekat.next(false);\r\n          console.log('Greska kod logout-a');\r\n        });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Partner, ResetSifre, PromenaSifre } from '../model/dto';\r\n\r\nconst PARTNER_URL = 'http://localhost:8080/api/partner';\r\nconst RESETOVANJE_SIFRE_URL = '/promena-sifre';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PartnerService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public updejtujPartnera(partner: Partner): Observable<Partner> {\r\n    const fullUrl = PARTNER_URL;\r\n\r\n    return this.http\r\n        .put(fullUrl, partner)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public promeniSifru(reset: PromenaSifre): Observable<any> {\r\n    const fullUrl = PARTNER_URL + RESETOVANJE_SIFRE_URL;\r\n\r\n    return this.http\r\n        .put(fullUrl, reset)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst DOMAIN_URL = 'http://localhost:8080/api';\r\nconst ROBA_URL = '/proizvodjaci';\r\nconst FILTERI_URL = '/filteri';\r\nconst AKUMULATORI_URL = '/akumulatori';\r\nconst ULJA_URL = '/ulja';\r\nconst KATEGORIJA_URL = '/kategorija';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProizvodjacService {\r\n\r\n  constructor(private http: HttpClient, private utils: AppUtilsService) { }\r\n\r\n  public pronadjiSveProizvodjace(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceFiltera(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + FILTERI_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceKategorije(kategorija: string): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + KATEGORIJA_URL + '/' + kategorija.toUpperCase();\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceAkumulatora(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + AKUMULATORI_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceUljaPoVrsti(vrstaUlja): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + ULJA_URL + this.utils.vratiPutDoResursaZaUlje(vrstaUlja);\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { Sort } from '@angular/material';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\n\r\nconst DOMAIN_URL = 'http://localhost:8080/api';\r\nconst ROBA_URL = '/roba';\r\nconst FILTERI_URL = '/filteri';\r\nconst AKUMULATORI_URL = '/akumulatori';\r\nconst ULJA_URL = '/ulja';\r\nconst OSTALE_KATEGORIJE_URL = '/kategorije';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RobaService {\r\n\r\n\r\n  constructor(private http: HttpClient, private utils: AppUtilsService) { }\r\n\r\n  public pronadjiSvuRobu(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + parametersString;\r\n\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public pronadjiFiltere(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + FILTERI_URL + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public pronadjiAkumulatore(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + AKUMULATORI_URL + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public pronadjiUlje(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId, vrstaUlja): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + ULJA_URL + this.utils.vratiPutDoResursaZaUlje(vrstaUlja) + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public pronadjiPoKategoriji(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId, kategorija: string): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + OSTALE_KATEGORIJE_URL + '/' + kategorija.toUpperCase() + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public ostaleKategorije(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + OSTALE_KATEGORIJE_URL;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Proizvodjac, Roba } from '../model/dto';\r\nimport { RobaKorpa, Korpa } from '../model/porudzbenica';\r\nimport { DataService } from '../service/data/data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppUtilsService {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  public vratiIdProizvodjacaAkoPostoji(izabraniProizvodjac: string, proizvodjaci: Proizvodjac[]): string {\r\n    let proId = null;\r\n    if (izabraniProizvodjac && izabraniProizvodjac === 'SVI') {\r\n      proId = null;\r\n    } else {\r\n      proizvodjaci.forEach(pr => {\r\n        if (pr.naziv === izabraniProizvodjac) {\r\n          proId = pr.proid;\r\n        }\r\n      });\r\n    }\r\n    return proId;\r\n  }\r\n\r\n  public daLiRobaTrebaDaBudeNaStanju(raspolozivost: string[], izabranaRaspolozivost: string): boolean {\r\n    if (raspolozivost && izabranaRaspolozivost === raspolozivost[1]) {\r\n      return null;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public dodajUKorpu(roba: Roba): string {\r\n    let snackBarPoruka = 'Artikal je ubacen u korpu.';\r\n    if (roba.kolicina == null || roba.kolicina <= 0) {\r\n      roba.kolicina = 1;\r\n    }\r\n    if (roba.stanje < roba.kolicina) {\r\n      snackBarPoruka = 'Maksimalan kolicina ' + roba.stanje + '. ' + snackBarPoruka;\r\n      roba.kolicina = roba.stanje;\r\n    }\r\n    const robaKorpa =\r\n      new RobaKorpa(roba.robaid, roba.katbr, roba.katbrpro, roba.naziv, roba.proizvodjac, \r\n        roba.kolicina, roba.rabat, roba.cena, roba.stanje);\r\n    this.dataService.ubaciUKorpu(robaKorpa);\r\n    return snackBarPoruka;\r\n  }\r\n\r\n  public izbrisiRobuSaStanja(roba: Roba[], robaUKorpi: Roba) {\r\n    roba.forEach(robaBaza => {\r\n      if (robaBaza.katbr === robaUKorpi.katbr) {\r\n        robaBaza.stanje = robaBaza.stanje - robaUKorpi.kolicina;\r\n      }\r\n    });\r\n  }\r\n\r\n  public daLiJeRobaUKorpi(korpa: Korpa, katBr: string) {\r\n    let uKorpi = false;\r\n    korpa.roba.forEach(r => {\r\n      if (r.katbr === katBr) {\r\n        uKorpi = true;\r\n      }\r\n    });\r\n    return uKorpi;\r\n  }\r\n\r\n  public vratiKveriParametre(map) {\r\n\r\n    let parameterString = '';\r\n\r\n    Object.keys(map).forEach(function (elem, index) {\r\n      const value = map[elem];\r\n      if (value != null || value === 0) {\r\n        if (parameterString) {\r\n          parameterString += '&';\r\n        }\r\n\r\n        parameterString += elem + '=' + value;\r\n      }\r\n    });\r\n\r\n    if (parameterString) {\r\n      parameterString = '?' + parameterString;\r\n    }\r\n    return parameterString;\r\n  }\r\n\r\n  public vratiPutDoResursaZaUlje(vrstaUlja): string {\r\n    let url = '/motorna';\r\n    if (vrstaUlja === 'motorna') {\r\n      url = '/motorna';\r\n    } else if (vrstaUlja === 'menjacka') {\r\n      url = '/menjacka';\r\n    } else if (vrstaUlja === 'kociona') {\r\n      url = '/kociona';\r\n    } else if (vrstaUlja === 'antifriz') {\r\n      url = '/antifriz';\r\n    } else if (vrstaUlja === 'hidraulicna') {\r\n      url = '/hidraulicna';\r\n    } else if (vrstaUlja === 'kompresorska') {\r\n      url = '/kompresorska';\r\n    } else if (vrstaUlja === 'redutktorska') {\r\n      url = '/redutktorska';\r\n    } else if (vrstaUlja === 'transformatorska') {\r\n      url = '/transformatorska';\r\n    } else if (vrstaUlja === 'turbinska') {\r\n      url = '/turbinska';\r\n    } else if (vrstaUlja === 'pneumatska') {\r\n      url = '/pneumatska';\r\n    } else if (vrstaUlja === 'klizna') {\r\n      url = '/klizna';\r\n    } else if (vrstaUlja === 'prenosna') {\r\n      url = '/prenosna';\r\n    }\r\n    return url;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <main>\\n      <h1>Da li ste sigurni da zelite da se odjavite?</h1>\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\n      <button mat-raised-button class=\\\"button-glavni-100\\\" (click)=\\\"logout()\\\">Odjava</button>\\n      <span class=\\\"col-2\\\"></span>\\n      <button mat-raised-button class=\\\"button-crveni-50\\\" (click)=\\\"ostaniUlogovan()\\\">Ponisti</button>\\n    </div>\\n  </main>\\n</div>\"","module.exports = \"p {\\n  text-align: center; }\\n\\nh1 {\\n  text-align: center;\\n  color: #273747 !important;\\n  font-size: 17px !important; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/e-shop/service/login.service';\n\n@Component({\n  selector: 'app-logout-modal',\n  templateUrl: './logout-modal.component.html',\n  styleUrls: ['./logout-modal.component.scss']\n})\nexport class LogoutModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<LogoutModalComponent>,\n    private router: Router,\n    private loginServis: LoginService) {}\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.loginServis.logout();\n    this.router.navigateByUrl('naslovna');\n    this.dialogRef.close();\n  }\n\n  ostaniUlogovan() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container pozadina-siva-400\\\">\\r\\n  <mat-sidenav #drawer class=\\\"sidenav pozadina-glavna-50\\\" fixedInViewport=\\\"true\\\" [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar *ngIf=\\\"partner.ppid\\\" class=\\\"side-toolbar pozadina-glavna-50 header-pozicija\\\">\\r\\n      <div class=\\\"d-flex flex-column \\\">\\r\\n        <div class=\\\"d-flex justify-content-center header-sirina\\\">\\r\\n          <mat-icon class=\\\"boja-siva-300\\\">person</mat-icon>\\r\\n        </div>\\r\\n        <p class=\\\"text-center header-navigacija\\\">{{partner.naziv}}</p>\\r\\n        <p class=\\\"text-center header-navigacija\\\">{{partner.email  | lowercase}}</p>\\r\\n      </div>\\r\\n    </mat-toolbar>\\r\\n    <mat-nav-list [class.margin-gore]=\\\"partner.ppid\\\">\\r\\n      <mat-divider *ngIf=\\\"partner.ppid\\\" class=\\\"pozadina-siva-300\\\"></mat-divider>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['naslovna']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>home</mat-icon>\\r\\n        <p mat-line>Naslovna</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['o-nama']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>book</mat-icon>\\r\\n        <p mat-line>O nama</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['kontakt']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>contact_phone</mat-icon>\\r\\n        <p mat-line>Kontakt</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list>\\r\\n      <h3 class=\\\"pozadina-glavna-50 boja-siva-300\\\" mat-subheader>Internet prodavnica</h3>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['roba']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>searche</mat-icon>\\r\\n        <p mat-line>Roba - pretraga</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['ulja']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>invert_colors</mat-icon>\\r\\n        <p mat-line>Ulja</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['filteri']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>layers</mat-icon>\\r\\n        <p mat-line>Filteri</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['akumulatori']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>battery_charging_full</mat-icon>\\r\\n        <p mat-line>Akumulatori</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['ostalo']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>category</mat-icon>\\r\\n        <p mat-line>Ostalo</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item class=\\\"material-icons\\\" *ngIf=\\\"partner.ppid\\\" [routerLink]=\\\"['korpa']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon matBadgeColor=\\\"warn\\\" class=\\\"boja-siva-300\\\" matBadge=\\\"{{korpaBadge}}\\\" mat-list-icon>shopping_cart</mat-icon>\\r\\n        <p mat-line>Korpa</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list *ngIf=\\\"partner.ppid\\\">\\r\\n      <h3 class=\\\"pozadina-glavna-50 boja-siva-300\\\" mat-subheader>Moj Profil</h3>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['licni-podaci']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>person</mat-icon>\\r\\n        <p mat-line>Licni Podaci</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['porudzbenice']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>list</mat-icon>\\r\\n        <p mat-line>Porudzbine</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list>\\r\\n      <mat-list-item *ngIf=\\\"partner.ppid == null\\\" class=\\\"material-icons\\\" [routerLink]=\\\"['login']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>exit_to_app</mat-icon>\\r\\n        <p mat-line>Login</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item *ngIf=\\\"partner.ppid\\\" class=\\\"material-icons\\\" (click)=\\\"otvoriDialog()\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>power_settings_new</mat-icon>\\r\\n        <p mat-line>Logout</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar *ngIf=\\\"isHandset$ | async\\\" class=\\\"header-pozicija pozadina-glavna-50\\\">\\r\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n    </mat-toolbar>\\r\\n    <router-outlet></router-outlet>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px;\\n  height: 100%; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0; }\\n\\n.header-navigacija {\\n  font-size: 13px !important;\\n  width: 160px; }\\n\\n.header-sirina {\\n  width: 160px !important; }\\n\\np {\\n  font-size: 14px;\\n  padding: 0px;\\n  margin: 0px;\\n  color: #f8f8f8;\\n  font-family: sans-serif;\\n  display: block;\\n  padding: 0px;\\n  margin: 0px; }\\n\\nmat-divider {\\n  border-width: 1px;\\n  border-style: solid;\\n  border-color: #cfd8dc; }\\n\\n.user-none {\\n  font-size: 60px;\\n  text-align: center; }\\n\\n.margin-gore {\\n  margin-top: 120px; }\\n\\n.side-toolbar {\\n  height: 120px;\\n  width: 200px; }\\n\\n.header-pozicija {\\n  top: 0px;\\n  position: fixed;\\n  z-index: 999; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { LogoutModalComponent } from './logout-modal/logout-modal.component';\nimport { Partner } from '../e-shop/model/dto';\nimport { LoginService } from '../e-shop/service/login.service';\nimport { DataService } from '../e-shop/service/data/data.service';\n\n@Component({\n  selector: 'app-navigacija',\n  templateUrl: './navigacija.component.html',\n  styleUrls: ['./navigacija.component.scss']\n})\nexport class NavigacijaComponent implements OnInit {\n\n  public korpaBadge = 0;\n  public partner: Partner;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private korpaServis: DataService,\n    private loginServis: LoginService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.korpaServis.trenutnaKorpa.subscribe(korpa => this.korpaBadge = korpa.roba.length);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n  }\n\n  otvoriDialog(): void {\n    const dialogRef = this.dialog.open(LogoutModalComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { mesec } from '../e-shop/model/konstante';\r\n\r\n@Pipe({ name: 'datum' })\r\nexport class DatePipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        if (!value) {\r\n            value = 'N/A';\r\n        } else {\r\n            const datumNVremeiz = value.split('T');\r\n            const datumNiz = datumNVremeiz[0].split('-');\r\n            datumNiz[1] = mesec['mesec_' + datumNiz[1]];\r\n            value = datumNiz[0] + '-' +  datumNiz[1] + '-' + datumNiz[2] + ' ' + datumNVremeiz[1].substr(0, 5);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'empty' })\r\nexport class EmptyPipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        if (!value) {\r\n            value = 'N/A';\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { transformator } from '../e-shop/model/konstante';\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        return transformator[value];\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatButtonModule, MatCheckboxModule, MatTableModule, MatTabsModule,\n  MatToolbarModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule,\n   MatCardModule, MatMenuModule, MatPaginatorModule, MatSortModule, MatExpansionModule,\n    MatFormField, MatFormFieldModule,\n    MatChipsModule, MatSelectModule, MatAutocompleteModule,\n    MatRadioModule, MatSnackBarModule, MatBadgeModule,\n    MatDialogModule, MatProgressSpinnerModule, MatInputModule, MatStepperModule} from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatChipsModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTabsModule,\n    CommonModule,\n    FormsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    MatInputModule,\n    MatDialogModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTabsModule,\n    CommonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Registracija, ResetSifre} from '../../e-shop/model/dto';\nimport { timeoutWith, catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\nimport { Poruka } from 'src/app/e-commerce/model/dto';\n\nconst DOMAIN_URL = 'http://localhost:8080/api/email';\nconst REGISTRACIJA_URL = '/registracija';\nconst RESETOVANJE_SIFRE_URL = '/zaboravljena-sifra';\nconst PORUKA_URL = '/poruka';\n\nconst TIMEOUT = 15000;\nconst TIMEOUT_ERROR = 'Timeout error!';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  constructor(\n    private http: HttpClient) { }\n\n  public posaljiMailZaRegistraciju(registracija: Registracija): Observable<any> {\n    const fullUrl = DOMAIN_URL + REGISTRACIJA_URL;\n   return this.http.post(fullUrl, registracija)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n\n  public posaljiMailZaResetovanjeSifre(email: ResetSifre): Observable<any> {\n    const fullUrl = DOMAIN_URL + RESETOVANJE_SIFRE_URL;\n   return this.http.post(fullUrl, email)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n\n  public posaljiPoruku(poruka: Poruka): Observable<any> {\n    const fullUrl = DOMAIN_URL + PORUKA_URL;\n   return this.http.post(fullUrl, poruka)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}