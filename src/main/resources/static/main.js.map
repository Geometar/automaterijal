{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dasboard/dasboard.component.css","webpack:///./src/app/dasboard/dasboard.component.html","webpack:///./src/app/dasboard/dasboard.component.ts","webpack:///./src/app/korpa/izmena-kolicine-modal/izmena-kolicine-modal.component.html","webpack:///./src/app/korpa/izmena-kolicine-modal/izmena-kolicine-modal.component.scss","webpack:///./src/app/korpa/izmena-kolicine-modal/izmena-kolicine-modal.component.ts","webpack:///./src/app/korpa/korpa.component.html","webpack:///./src/app/korpa/korpa.component.scss","webpack:///./src/app/korpa/korpa.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/partner.ts","webpack:///./src/app/model/porudzbenica.ts","webpack:///./src/app/navigacija/logout-modal/logout-modal.component.html","webpack:///./src/app/navigacija/logout-modal/logout-modal.component.scss","webpack:///./src/app/navigacija/logout-modal/logout-modal.component.ts","webpack:///./src/app/navigacija/navigacija.component.html","webpack:///./src/app/navigacija/navigacija.component.scss","webpack:///./src/app/navigacija/navigacija.component.ts","webpack:///./src/app/roba/akumulatori/akumulatori.component.css","webpack:///./src/app/roba/akumulatori/akumulatori.component.html","webpack:///./src/app/roba/akumulatori/akumulatori.component.ts","webpack:///./src/app/roba/filteri/filteri.component.css","webpack:///./src/app/roba/filteri/filteri.component.html","webpack:///./src/app/roba/filteri/filteri.component.ts","webpack:///./src/app/roba/roba.component.css","webpack:///./src/app/roba/roba.component.html","webpack:///./src/app/roba/roba.component.ts","webpack:///./src/app/roba/ulja/antifriz/antifriz.component.css","webpack:///./src/app/roba/ulja/antifriz/antifriz.component.html","webpack:///./src/app/roba/ulja/antifriz/antifriz.component.ts","webpack:///./src/app/roba/ulja/industrijska/industrijska.component.css","webpack:///./src/app/roba/ulja/industrijska/industrijska.component.html","webpack:///./src/app/roba/ulja/industrijska/industrijska.component.ts","webpack:///./src/app/roba/ulja/kociona/kociona.component.css","webpack:///./src/app/roba/ulja/kociona/kociona.component.html","webpack:///./src/app/roba/ulja/kociona/kociona.component.ts","webpack:///./src/app/roba/ulja/menjacko/menjacko.component.css","webpack:///./src/app/roba/ulja/menjacko/menjacko.component.html","webpack:///./src/app/roba/ulja/menjacko/menjacko.component.ts","webpack:///./src/app/roba/ulja/motorna/motorna.component.css","webpack:///./src/app/roba/ulja/motorna/motorna.component.html","webpack:///./src/app/roba/ulja/motorna/motorna.component.ts","webpack:///./src/app/roba/ulja/ulja.component.css","webpack:///./src/app/roba/ulja/ulja.component.html","webpack:///./src/app/roba/ulja/ulja.component.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/app/service/local-storage.service.ts","webpack:///./src/app/service/login.service.ts","webpack:///./src/app/service/proizvodjac.service.ts","webpack:///./src/app/service/roba.service.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/utils/app-utils.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Routes, RouterModule } from '@angular/router';\r\nimport { RobaComponent } from './roba/roba.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilteriComponent } from './roba/filteri/filteri.component';\r\nimport { AkumulatoriComponent } from './roba/akumulatori/akumulatori.component';\r\nimport { UljaComponent } from './roba/ulja/ulja.component';\r\nimport { DasboardComponent } from './dasboard/dasboard.component';\r\nimport { MotornaComponent } from './roba/ulja/motorna/motorna.component';\r\nimport { KorpaComponent } from './korpa/korpa.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/naslovna', pathMatch: 'full' },\r\n  {path: 'naslovna' , component: DasboardComponent},\r\n  {path: 'o-nama' , component: DasboardComponent},\r\n  {path: 'kontakt' , component: DasboardComponent},\r\n  {path: 'roba' , component: RobaComponent},\r\n  {path: 'filteri' , component: FilteriComponent},\r\n  {path: 'ulja' , component: UljaComponent},\r\n  {path: 'akumulatori' , component: AkumulatoriComponent},\r\n  {path: 'login' , component: LoginComponent},\r\n  {path: 'korpa', component: KorpaComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<app-navigacija></app-navigacija>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Automaterijal';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { StorageServiceModule } from 'angular-webstorage-service';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './shared/material/material.module';\nimport { NavigacijaComponent } from './navigacija/navigacija.component';\nimport { RobaComponent } from './roba/roba.component';\nimport { DasboardComponent } from './dasboard/dasboard.component';\nimport { MatGridListModule, MatCardModule, MatMenuModule, MatIconModule, MatButtonModule, MatTableModule,\n   MatPaginatorModule, MatSortModule } from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FilteriComponent } from './roba/filteri/filteri.component';\nimport { AkumulatoriComponent } from './roba/akumulatori/akumulatori.component';\nimport { UljaComponent } from './roba/ulja/ulja.component';\nimport { MotornaComponent } from './roba/ulja/motorna/motorna.component';\nimport { MenjackoComponent } from './roba/ulja/menjacko/menjacko.component';\nimport { KocionaComponent } from './roba/ulja/kociona/kociona.component';\nimport { AntifrizComponent } from './roba/ulja/antifriz/antifriz.component';\nimport { IndustrijskaComponent } from './roba/ulja/industrijska/industrijska.component';\nimport { KorpaComponent } from './korpa/korpa.component';\nimport { IzmenaKolicineModalComponent } from './korpa/izmena-kolicine-modal/izmena-kolicine-modal.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoginService } from './service/login.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LogoutModalComponent } from './navigacija/logout-modal/logout-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigacijaComponent,\n    RobaComponent,\n    DasboardComponent,\n    FilteriComponent,\n    AkumulatoriComponent,\n    UljaComponent,\n    MotornaComponent,\n    MenjackoComponent,\n    KocionaComponent,\n    AntifrizComponent,\n    IndustrijskaComponent,\n    KorpaComponent,\n    IzmenaKolicineModalComponent,\n    LoginComponent,\n    LogoutModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    StorageServiceModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [IzmenaKolicineModalComponent, LogoutModalComponent]\n})\nexport class AppModule { }\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards | async\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dasboard',\n  templateUrl: './dasboard.component.html',\n  styleUrls: ['./dasboard.component.css']\n})\nexport class DasboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <main>\\n    <div class=\\\"pozadina-glavna-50 boja-kontra-bela\\\">\\n      <h1>Artikal broj: {{data.katbr}}</h1>\\n    </div>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n        <tr>\\n          <td>Proizvodjac</td>\\n          <td>{{data.proizvodjac}}</td>\\n        </tr>\\n        <tr>\\n          <td>Cena</td>\\n          <td>{{data.cenaKom}}</td>\\n        <tr>\\n          <td>Kolicina</td>\\n          <td>\\n            <select class=\\\"custom-select custom-select-md\\\" [(ngModel)]=\\\"data.kolicina\\\">\\n              <option *ngFor=\\\"let kolicina of stanje\\\" [value]=\\\"kolicina\\\">{{kolicina}}</option>\\n            </select>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>Ukupno za placanje</td>\\n          <td><b>{{data.kolicina * data.cenaKom}} DIN</b></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\n      <button class=\\\"button-glavni\\\" mat-raised-button (click)=\\\"sacuvajIzmene()\\\">Sacuvaj</button>\\n      <span class=\\\"col-2\\\"></span>\\n      <button class=\\\"button-error\\\" mat-raised-button (click)=\\\"bezIzmena()\\\">Ponisti</button>\\n    </div>\\n  </main>\\n</div>\"","module.exports = \"p {\\n  text-align: center; }\\n\\nh1 {\\n  text-align: center;\\n  font-size: 20px;\\n  padding: 10px; }\\n\\n.pomeri {\\n  margin-left: 10px; }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Roba } from 'src/app/model/roba';\nimport { RobaKorpa } from 'src/app/model/porudzbenica';\nimport { LocalStorageService } from 'src/app/service/local-storage.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-izmena-kolicine-modal',\n  templateUrl: './izmena-kolicine-modal.component.html',\n  styleUrls: ['./izmena-kolicine-modal.component.scss']\n})\nexport class IzmenaKolicineModalComponent implements OnInit {\n\n  public stanje = [];\n  public data: RobaKorpa;\n\n  constructor(\n    public dialogRef: MatDialogRef<IzmenaKolicineModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public roba: RobaKorpa) {}\n\n  ngOnInit() {\n    this.data = _.clone(this.roba);\n    this.popuniSelectStanja();\n  }\n\n  popuniSelectStanja() {\n    let index = 1;\n    while (index <= this.data.stanje) {\n      this.stanje[index - 1] = index;\n      index++;\n    }\n  }\n\n  sacuvajIzmene() {\n    this.data.kolicina = _.toNumber(this.data.kolicina);\n    this.data.cenaUkupno = this.data.kolicina * this.data.cenaKom;\n    this.dialogRef.close(this.data);\n  }\n\n  bezIzmena() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"grid-container\\\">\\n    <main>\\n        <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"dataSource.length == 0\\\">\\n            <i class=\\\"material-icons icon-size\\\">\\n                shopping_cart\\n            </i>\\n            <h1 class=\\\"h1-upozorenje\\\">Korpa je trenutno prazna</h1>\\n        </div>\\n        <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource.length > 0\\\">\\n            <div style=\\\"overflow-x:auto;\\\">\\n                <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\" class=\\\"mat-elevation-z8\\\">\\n                    <!-- Kataloski broj Column -->\\n                    <ng-container matColumnDef=\\\"katbr\\\">\\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\n                        <td mat-cell *matCellDef=\\\"let roba\\\">\\n                            <p class=\\\"mat-body-2\\\">\\n                                {{roba.katbr}}\\n                            </p>\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- Kataloski broj proizvodjaca Column -->\\n                    <ng-container matColumnDef=\\\"katbrpro\\\">\\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\n                        <td mat-cell *matCellDef=\\\"let roba\\\">\\n                            <p class=\\\"mat-body-1\\\">\\n                                {{roba.katbrpro}}\\n                            </p>\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- Naziv Column -->\\n                    <ng-container matColumnDef=\\\"naziv\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Naziv </th>\\n                        <td mat-cell *matCellDef=\\\"let roba\\\">\\n                            <p class=\\\"mat-body-1\\\">\\n                                {{roba.naziv}}\\n                            </p>\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- Proizvodjac Column -->\\n                    <ng-container matColumnDef=\\\"proizvodjac\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\n                        <td mat-cell *matCellDef=\\\"let roba\\\">\\n                            <p class=\\\"mat-body-2\\\">\\n                                {{roba.proizvodjac}}\\n                            </p>\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- Cena Column -->\\n                    <ng-container matColumnDef=\\\"kolicina\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Kolicina </th>\\n                        <td mat-cell *matCellDef=\\\"let roba\\\">\\n                            <p class=\\\"mat-body-2\\\">\\n                                {{roba.kolicina}}\\n                            </p>\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- Cena Column -->\\n                    <ng-container matColumnDef=\\\"cena\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Ukupno </th>\\n                        <td mat-cell *matCellDef=\\\"let roba\\\">\\n                            <p class=\\\"mat-body-2\\\">\\n                                {{roba.cenaUkupno}} DIN\\n                            </p>\\n                        </td>\\n                    </ng-container>\\n\\n                    <!-- Kropa dugme Column -->\\n                    <ng-container matColumnDef=\\\"korpa\\\">\\n                        <th mat-header-cell *matHeaderCellDef> </th>\\n                        <td mat-cell *matCellDef=\\\"let roba\\\">\\n                            <div *ngIf=\\\"roba.stanje > 0\\\">\\n                                <button mat-raised-button color=\\\"primary\\\">Dodaj u korpu</button>\\n                            </div>\\n                    </ng-container>\\n\\n                    <!-- Kolicina Column -->\\n                    <ng-container matColumnDef=\\\"izbaciDugme\\\">\\n                        <th mat-header-cell *matHeaderCellDef> </th>\\n                        <td mat-cell *matCellDef=\\\"let roba; let i = index;\\\">\\n                            <span class=\\\"col-lg-1 col-\\\"></span>\\n                            <button class=\\\"button-glavni\\\" mat-raised-button (click)=\\\"otvoriDialog(roba)\\\">Izmeni</button>\\n                            <span class=\\\"col-lg-1 col-\\\"></span>\\n                            <button class=\\\"button-error\\\" mat-raised-button (click)='izbaciIzKorpe(i)'>Izbaci</button>\\n                    </ng-container>\\n\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                </table>\\n            </div>\\n            <div class=\\\"d-flex flex-column flex-sm-row\\\">\\n                <div class=\\\"flex-fill\\\">Forma</div>\\n                <div class=\\\"d-flex flex-fill justify-content-end\\\">\\n                    <table class=\\\"table sirina-cena\\\">\\n                        <tbody>\\n                            <tr>\\n                                <td class=\\\"pozadina-glavna-50 boja-kontra-bela\\\">Bez pdv-a: </td>\\n                                <td class=\\\"text-right\\\">{{bezPdv}} RSD</td>\\n                            </tr>\\n                            <tr>\\n                                <td class=\\\"pozadina-glavna-50 boja-kontra-bela\\\">Pdv: </td>\\n                                <td class=\\\"text-right\\\">{{bezPdv}} RSD</td>\\n                            </tr>\\n                            <tr>\\n                                <td class=\\\"pozadina-glavna-50 boja-kontra-bela\\\">Ukupno za uplatu: </td>\\n                                <td class=\\\"text-right\\\"><b>{{ukupno}} RSD</b></td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\"","module.exports = \"p {\\n  text-align: left !important; }\\n\\n.sirina-cena {\\n  width: 90%; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../service/data.service';\nimport { Korpa, RobaKorpa } from '../model/porudzbenica';\nimport { LocalStorageService } from '../service/local-storage.service';\nimport { MatTable, MatDialog } from '@angular/material';\nimport { Roba } from '../model/roba';\nimport { IzmenaKolicineModalComponent } from './izmena-kolicine-modal/izmena-kolicine-modal.component';\nimport { of } from 'rxjs';\nimport { TouchSequence } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-korpa',\n  templateUrl: './korpa.component.html',\n  styleUrls: ['./korpa.component.scss']\n})\nexport class KorpaComponent implements OnInit {\n\n  public korpa: Korpa;\n  public bezPdv: string;\n  public pdv: string;\n  public ukupno: string;\n  public dataSource: any;\n  public displayedColumns: string[] = ['katbr', 'katbrpro', 'naziv'\n    , 'proizvodjac', 'kolicina', 'cena', 'izbaciDugme'];\n  @ViewChild(MatTable) table: MatTable<any>;\n  constructor(private dataService: DataService,\n    public storage: LocalStorageService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.dataService.trenutnaKorpa.subscribe(korpa => {\n      this.korpa = korpa;\n      this.preracunajUkupno();\n      this.dataSource = this.korpa.roba;\n    });\n  }\n\n  izbaciIzKorpe(index: number) {\n    this.dataService.izbaciIzKorpe(index);\n    this.table.renderRows();\n  }\n\n  otvoriDialog(roba: RobaKorpa): void {\n    const dialogRef = this.dialog.open(IzmenaKolicineModalComponent, {\n      width: '400px',\n      data: roba\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.promeniKolicinuArtikla(result);\n      }\n    });\n  }\n\n  promeniKolicinuArtikla(artikal: RobaKorpa) {\n    this.korpa.roba.forEach(roba => {\n      if (roba.katbr === artikal.katbr) {\n        roba.kolicina = artikal.kolicina;\n        roba.cenaUkupno = artikal.cenaUkupno;\n      }\n    });\n    this.storage.zameniArtikalSaNovim(artikal);\n    this.preracunajUkupno();\n    this.dataSource = this.korpa.roba;\n    this.table.renderRows();\n  }\n\n  private preracunajUkupno() {\n    this.korpa.ukupno = 0;\n    this.korpa.roba.forEach(roba => {\n      this.korpa.ukupno =  this.korpa.ukupno + roba.cenaUkupno;\n    });\n    this.bezPdv = (this.korpa.ukupno / 1.2).toFixed(2);\n    this.pdv = (this.korpa.ukupno - this.korpa.ukupno / 1.2).toFixed(2);\n    this.ukupno =  this.korpa.ukupno.toFixed(2);\n  }\n\n}\n","module.exports = \".flex-login {\\r\\n    margin-top: 10%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n.login-form {\\r\\n    width: 400px;\\r\\n    justify-content: center;\\r\\n}\\r\\nh1 {\\r\\n    text-align: center;\\r\\n\\tfont-family: serif;\\r\\n\\tfont-weight: normal;\\r\\n\\ttext-transform: uppercase;\\r\\n}\\r\\nbutton{\\r\\n    margin:auto;\\r\\n    display:block;\\r\\n}\\r\\np {\\r\\n      text-align: center;\\r\\n      font-family: sans-serif;\\r\\n      padding: 0;\\r\\n      margin: 0;\\r\\n}\\r\\n.is-invalid {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n.upozorenje {\\r\\n    text-align: left;\\r\\n    font-family: sans-serif;\\r\\n    font-size: 14px;\\r\\n    color: red;\\r\\n\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"flex-login\\\">\\n\\t\\t<div class=\\\"login-form\\\">\\n\\t\\t\\t<h1>Login</h1>\\n\\t\\t\\t<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"neuspesnoLogovanje\\\">\\n\\t\\t\\t\\t<p>Username ili password je pogresan.</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<form role=\\\"form\\\" [formGroup]=\\\"registerForm\\\" (submit)=\\\"login()\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Vaše korisnicko ime\\\" id=\\\"username\\\"\\n\\t\\t\\t\\t\\t name=\\\"username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.controls.username.errors }\\\" [(ngModel)]=\\\"credentials.username\\\" />\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerForm.controls.username.errors\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.username.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Korisnicko ime je obavezno</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.username.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Korisnicko ime mora imati minimalno 3 karaktera</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Sifra\\\" id=\\\"password\\\"\\n\\t\\t\\t\\t\\t name=\\\"password\\\" [(ngModel)]=\\\"credentials.password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.controls.password.errors }\\\" />\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerForm.controls.password.errors\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.password.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Sifra je obavezna</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.password.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Sifra mora imati minimalno 3 karaktera</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-button color=\\\"primary\\\">Nemate nalog?</button>\\n\\t\\t\\t\\t\\t<button mat-raised-button type=\\\"submit\\\" class=\\\"rounded\\\" color=\\\"primary\\\">Submit</button>\\n\\t\\t\\t\\t\\t<button mat-button color=\\\"primary\\\">Zaboravili ste sifru?</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Credentials } from '../model/credentials';\nimport { LoginService } from '../service/login.service';\nimport { takeWhile } from 'rxjs/operators';\nimport { Partner } from '../model/partner';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public registerForm: FormGroup;\n  public submitted = false;\n  public credentials: Credentials = {};\n  public partner: Partner;\n  public neuspesnoLogovanje = false;\n\n  constructor(private loginServis: LoginService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  login() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n    this.loginServis.ulogujSe(this.credentials);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.neuspesnoLogovanje = this.partner.ppid == null;\n  }\n}\n","export class Partner {\r\n    ppid?: number;\r\n    naziv?: string;\r\n    email?: string;\r\n    webKorisnik?: string;\r\n    stanje?: number;\r\n    stanjeporoku?: number;\r\n}\r\n","export class Korpa {\r\n    public roba: RobaKorpa[] = [];\r\n    public ukupno: number;\r\n}\r\n\r\nexport class RobaKorpa {\r\n\r\n    public katbr: string;\r\n    public katbrpro: string;\r\n    public naziv: string;\r\n    public proizvodjac: string;\r\n    public kolicina: number;\r\n    public cenaKom: number;\r\n    public stanje: number;\r\n    public cenaUkupno: number;\r\n\r\n    constructor(katbr: string, katbrpro: string, naziv: string, proizvodjac: string, kolicina: number, cena: number, stanje: number) {\r\n        this.katbr = katbr;\r\n        this.katbrpro = katbrpro;\r\n        this.naziv = naziv;\r\n        this.proizvodjac = proizvodjac;\r\n        this.kolicina = kolicina;\r\n        this.cenaKom = cena;\r\n        this.cenaUkupno = cena * kolicina;\r\n        this.stanje = stanje;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <main>\\n      <h1>Da li ste sigurni da zelite da se odjavite?</h1>\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\n      <button mat-raised-button class=\\\"button-glavni\\\" (click)=\\\"logout()\\\">Odjava</button>\\n      <span class=\\\"col-2\\\"></span>\\n      <button mat-raised-button class=\\\"button-error\\\" (click)=\\\"ostaniUlogovan()\\\">Ponisti</button>\\n    </div>\\n  </main>\\n</div>\"","module.exports = \"p {\\n  text-align: center; }\\n\\nh1 {\\n  text-align: center;\\n  font-size: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { LoginService } from 'src/app/service/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout-modal',\n  templateUrl: './logout-modal.component.html',\n  styleUrls: ['./logout-modal.component.scss']\n})\nexport class LogoutModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<LogoutModalComponent>,\n    private router: Router,\n    private loginServis: LoginService) {}\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.loginServis.logout();\n    this.router.navigateByUrl('naslovna');\n    this.dialogRef.close();\n  }\n\n  ostaniUlogovan() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav sidebar-color\\\" fixedInViewport=\\\"true\\\" [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar *ngIf=\\\"partner.ppid\\\" class=\\\"side-toolbar sidebar-color header-pozicija\\\">\\n      <div class=\\\"d-flex flex-column\\\">\\n        <div class=\\\"d-flex justify-content-center\\\">\\n          <mat-icon class=\\\"icon-color\\\">person</mat-icon>\\n        </div>\\n        <p class=\\\"text-center\\\">{{partner.naziv}}</p>\\n        <p class=\\\"text-center\\\">{{partner.email}}</p>\\n      </div>\\n    </mat-toolbar>\\n    <mat-nav-list [class.margin-gore]=\\\"partner.ppid\\\">\\n      <mat-divider *ngIf=\\\"partner.ppid\\\" class=\\\"icon-color\\\"></mat-divider>\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['naslovna']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>home</mat-icon>\\n        <p mat-line>Naslovna</p>\\n      </mat-list-item>\\n\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['o-nama']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>book</mat-icon>\\n        <p mat-line>O nama</p>\\n      </mat-list-item>\\n\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['kontakt']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>contact_phone</mat-icon>\\n        <p mat-line>Kontakt</p>\\n      </mat-list-item>\\n    </mat-nav-list>\\n\\n    <mat-divider></mat-divider>\\n    <mat-nav-list>\\n      <h3 class=\\\"icon-color\\\" mat-subheader>Internet prodavnica</h3>\\n\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['roba']\\\" [routerLinkActive]=\\\"['is-active']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>searche</mat-icon>\\n        <p mat-line>Roba - pretraga</p>\\n      </mat-list-item>\\n\\n\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['ulja']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>invert_colors</mat-icon>\\n        <p mat-line>Ulja</p>\\n      </mat-list-item>\\n\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['filteri']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>layers</mat-icon>\\n        <p mat-line>Filteri</p>\\n      </mat-list-item>\\n\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['akumulatori']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>battery_charging_full</mat-icon>\\n        <p mat-line>Akumulatori</p>\\n      </mat-list-item>\\n\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['korpa']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>category</mat-icon>\\n        <p mat-line>Ostalo</p>\\n      </mat-list-item>\\n      <mat-list-item class=\\\"material-icons\\\" *ngIf=\\\"partner.ppid\\\" [routerLink]=\\\"['korpa']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon matBadgeColor=\\\"warn\\\" class=\\\"icon-color\\\" matBadge=\\\"{{korpaBadge}}\\\" mat-list-icon>shopping_cart</mat-icon>\\n        <p mat-line>Korpa</p>\\n      </mat-list-item>\\n    </mat-nav-list>\\n\\n    <mat-divider></mat-divider>\\n    <mat-nav-list *ngIf=\\\"partner.ppid\\\">\\n      <h3 class=\\\"icon-color\\\" mat-subheader>Moj Profil</h3>\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['korpa']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>person</mat-icon>\\n        <p mat-line>Licni Podaci</p>\\n      </mat-list-item>\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['korpa']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>list</mat-icon>\\n        <p mat-line>Porudzbine</p>\\n      </mat-list-item>\\n    </mat-nav-list>\\n    <mat-divider></mat-divider>\\n    <mat-nav-list>\\n      <mat-list-item *ngIf=\\\"partner.ppid == null\\\" class=\\\"material-icons\\\" [routerLink]=\\\"['login']\\\" [routerLinkActive]=\\\"['is-active']\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>exit_to_app</mat-icon>\\n        <p mat-line>Login</p>\\n      </mat-list-item>\\n      <mat-list-item *ngIf=\\\"partner.ppid\\\" class=\\\"material-icons\\\" (click)=\\\"otvoriDialog()\\\">\\n        <mat-icon class=\\\"icon-color\\\" mat-list-icon>power_settings_new</mat-icon>\\n        <p mat-line>Logout</p>\\n      </mat-list-item>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar *ngIf=\\\"isHandset$ | async\\\" class=\\\"header-pozicija sidebar-color\\\">\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\n        <mat-icon class=\\\"icon-color\\\" aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px;\\n  height: 100%; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0; }\\n\\np {\\n  font-size: 14px;\\n  padding: 0px;\\n  margin: 0px;\\n  color: #f8fcff;\\n  font-family: sans-serif;\\n  display: block;\\n  padding: 0px;\\n  margin: 0px; }\\n\\n.is-active {\\n  background-color: #547aa1f8 !important; }\\n\\nmat-divider {\\n  border-width: 1px;\\n  border-style: solid;\\n  border-color: #cfd8dc; }\\n\\n.icon-color {\\n  color: #cfd8dc; }\\n\\n.user-none {\\n  font-size: 60px;\\n  text-align: center; }\\n\\n.margin-gore {\\n  margin-top: 120px; }\\n\\n.side-toolbar {\\n  height: 120px;\\n  width: 200px; }\\n\\n.sidebar-color {\\n  background-color: #283b4ef8; }\\n\\n.header-pozicija {\\n  top: 0;\\n  position: fixed;\\n  z-index: 999; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DataService } from '../service/data.service';\nimport { Korpa } from '../model/porudzbenica';\nimport { LoginService } from '../service/login.service';\nimport { Partner } from '../model/partner';\nimport { MatDialog } from '@angular/material';\nimport { LogoutModalComponent } from './logout-modal/logout-modal.component';\n\n@Component({\n  selector: 'app-navigacija',\n  templateUrl: './navigacija.component.html',\n  styleUrls: ['./navigacija.component.scss']\n})\nexport class NavigacijaComponent implements OnInit {\n\n  public korpaBadge = 0;\n  public partner: Partner;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private korpaServis: DataService,\n    private loginServis: LoginService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.korpaServis.trenutnaKorpa.subscribe(korpa => this.korpaBadge = korpa.roba.length);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n  }\n\n  otvoriDialog(): void {\n    const dialogRef = this.dialog.open(LogoutModalComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n        <div class=\\\"forms-input\\\">\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\n                <button mat-mini-fab class=\\\"button-glavni\\\">\\n                    <mat-icon>search</mat-icon>\\n                </button>\\n            </div>\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=\\\"button-glavni\\\" mat-mini-fab>\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-polu-glavni\\\">\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\n        </label>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <h2>\\n                    Filter\\n                </h2>\\n            </div>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Proizvodjac: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\n                        <p>{{proizvodjac.naziv}}</p>\\n                    </option>\\n                </select>\\n\\n                <div class=\\\"input-group-prepend razmak\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Raspolozivost: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <div>\\n                    <button mat-stroked-button class=\\\"button-glavni\\\" (click)='filtriraj()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Filtriraj</p>\\n                    </button>\\n                    <span class=\\\"col-2\\\"></span>\\n                    <button mat-stroked-button class=\\\"button-error\\\" (click)='resetujFilter()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Ponisti</p>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\n        <i class=\\\"material-icons icon-size\\\">\\n            error_outline\\n        </i>\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n            <!-- Kataloski broj Column -->\\n            <ng-container matColumnDef=\\\"katbr\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.katbr}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Kataloski broj proizvodjaca Column -->\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.katbrpro}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Naziv Column -->\\n            <ng-container matColumnDef=\\\"naziv\\\">\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.naziv}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Proizvodjac Column -->\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.proizvodjac}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Cena Column -->\\n            <ng-container matColumnDef=\\\"cena\\\">\\n                <th mat-header-cell *matHeaderCellDef> Cena </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.cena}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Stanje Column -->\\n            <ng-container matColumnDef=\\\"stanje\\\">\\n                <th mat-header-cell *matHeaderCellDef> Stanje </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <mat-icon class=\\\"boja-confirm\\\">check_circle_outline</mat-icon>\\n                    </div>\\n                    <div *ngIf=\\\"roba.stanje == 0\\\">\\n                        <mat-icon class=\\\"boja-error\\\">remove_circle_outline</mat-icon>\\n                    </div>\\n                </td>\\n            </ng-container>\\n\\n\\n            <!-- Kolicina Column -->\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\" placeholder=\\\"0\\\" [(ngModel)]=\\\"roba.kolicina\\\" />\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Kropa dugme Column -->\\n            <ng-container matColumnDef=\\\"korpa\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <button mat-raised-button class=\\\"button-glavni\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Da li ima na stanju ikona -->\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\n                        <mat-icon class=\\\"boja-error\\\">add_shopping_cart</mat-icon>\\n                    </div>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\n        </table>\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\n        </mat-paginator>\\n    </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Roba } from 'src/app/model/roba';\nimport { Proizvodjac } from 'src/app/model/proizvodjac';\nimport { RobaService } from 'src/app/service/roba.service';\nimport { ProizvodjacService } from 'src/app/service/proizvodjac.service';\nimport { Sort, MatSnackBar } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { AppUtilsService } from 'src/app/utils/app-utils.service';\nimport { Korpa } from 'src/app/model/porudzbenica';\nimport { DataService } from 'src/app/service/data.service';\nimport { LoginService } from 'src/app/service/login.service';\nimport { Partner } from 'src/app/model/partner';\n@Component({\n  selector: 'app-akumulatori',\n  templateUrl: './akumulatori.component.html',\n  styleUrls: ['./akumulatori.component.css']\n})\nexport class AkumulatoriComponent implements OnInit {\n\n  public roba: Roba[];\n  public proizvodjaci: Proizvodjac[];\n\n  // Paging and Sorting elements\n  public rowsPerPage = 10;\n  public pageIndex = 0;\n  public sort = null;\n  public tableLength;\n\n  // Filteri\n  public izabraniProizvodjac = '';\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\n\n  public searchValue = '';\n  public lastSearchValue = '';\n  public pocetnoPretrazivanje: boolean;\n  public ucitavanje = false;\n  public pronadjenaRoba = true;\n  public otvoriFilterDiv = false;\n\n  // Tabela\n  private columnDefinitions = [\n    { def: 'katbr', ifNotAuth: true },\n    { def: 'katbrpro', ifNotAuth: true },\n    { def: 'proizvodjac', ifNotAuth: true },\n    { def: 'naziv', ifNotAuth: true },\n    { def: 'cena', ifNotAuth: true },\n    { def: 'stanje', ifNotAuth: true },\n    { def: 'kolicina', ifNotAuth: false },\n    { def: 'korpa', ifNotAuth: false },\n    { def: 'u-korpi', ifNotAuth: false },\n  ];\n  public dataSource: any;\n\n  private alive = true;\n  private korpa: Korpa;\n  public partner: Partner;\n\n  constructor(\n    private robaService: RobaService,\n    private utilsService: AppUtilsService,\n    private loginServis: LoginService,\n    private dataService: DataService,\n    private proizvodjacService: ProizvodjacService,\n    public korpaSnackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.pronadjiSveProizvodjace();\n  }\n\n  getDisplayedColumns(): string[] {\n    const isPartner = this.partner.ppid != null;\n    const dataColumns = this.columnDefinitions\n      .filter(cd => isPartner || cd.ifNotAuth)\n      .map(cd => cd.def);\n    return dataColumns;\n  }\n\n  pronandjiSveAkumulatore() {\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiAkumulatore(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiAkumulatorePoPretrazi(searchValue) {\n    this.pocetnoPretrazivanje = false;\n    this.lastSearchValue = searchValue;\n    this.ucitavanje = true;\n    this.dataSource = null;\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiAkumulatore(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiSveProizvodjace() {\n    this.proizvodjacService.pronadjiSveProizvodjaceAkumulatora()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(res => {\n        this.proizvodjaci = res;\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n        this.pronandjiSveAkumulatore();\n      },\n        error => {\n          this.proizvodjaci = null;\n          console.log('Pronaci svu robu je bacilo gresku', error);\n        });\n  }\n\n  pronaciPoTrazenojReci(searchValue) {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.pronadjiAkumulatorePoPretrazi(searchValue);\n  }\n\n  paginatorEvent(pageEvent) {\n    this.dataSource = [];\n    this.rowsPerPage = pageEvent.pageSize;\n    this.pageIndex = pageEvent.pageIndex;\n    this.pronadjiAkumulatorePoPretrazi(this.searchValue);\n  }\n\n  sortData(sort: Sort) {\n    this.sort = sort;\n    this.pronadjiAkumulatorePoPretrazi(this.searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\n  }\n\n  resetujFilter() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.izabranaRaspolozivost = this.raspolozivost[1];\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n    this.filtriraj();\n  }\n\n  filtriraj() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    let recZaPretragu: string;\n    recZaPretragu = this.searchValue;\n    this.pronadjiAkumulatorePoPretrazi(recZaPretragu);\n  }\n  dodajUKorpu(roba: Roba) {\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\n    this.openKorpaSnackBar(snackBarPoruka);\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\n  }\n\n  openKorpaSnackBar(poruka: string) {\n    this.korpaSnackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  uKorpi(katBr: string) {\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <main>\\n        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n            <div class=\\\"forms-input\\\">\\n                <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\n                <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\n                    <button mat-mini-fab class=\\\"button-glavni\\\">\\n                        <mat-icon>search</mat-icon>\\n                    </button>\\n                </div>\\n                <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\n                    <button *ngIf=\\\"!otvoriFilterDiv\\\" class=\\\"button-glavni\\\" mat-mini-fab>\\n                        <mat-icon>view_headline</mat-icon>\\n                    </button>\\n                    <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-polu-glavni\\\">\\n                        <mat-icon>view_headline</mat-icon>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"d-flex justify-content-center\\\">\\n            <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\n                <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\n            </label>\\n        </div>\\n\\n        <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\n            <div class=\\\"filter-div-test d-flex flex-column\\\">\\n                <div class=\\\"d-flex justify-content-center\\\">\\n                    <h2>\\n                        Filter\\n                    </h2>\\n                </div>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                            <p class=\\\"boja-kontra-bela\\\">Proizvodjac: </p>\\n                        </label>\\n                    </div>\\n                    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\n                        <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\n                            <p>{{proizvodjac.naziv}}</p>\\n                        </option>\\n                    </select>\\n\\n                    <div class=\\\"input-group-prepend razmak\\\">\\n                        <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                            <p class=\\\"boja-kontra-bela\\\">Raspolozivost: </p>\\n                        </label>\\n                    </div>\\n                    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\n                        <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"d-flex justify-content-center\\\">\\n                    <div>\\n                        <button mat-stroked-button class=\\\"button-glavni\\\" (click)='filtriraj()'>\\n                            <p class=\\\"boja-kontra-bela\\\">Filtriraj</p>\\n                        </button>\\n                        <span class=\\\"col-2\\\"></span>\\n                        <button mat-stroked-button class=\\\"button-error\\\" (click)='resetujFilter()'>\\n                            <p class=\\\"boja-kontra-bela\\\">Ponisti</p>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\n            <i class=\\\"material-icons icon-size\\\">\\n                error_outline\\n            </i>\\n            <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\n        </div>\\n    \\n        <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\n            <mat-spinner></mat-spinner>\\n        </div>\\n        <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n                <!-- Kataloski broj Column -->\\n                <ng-container matColumnDef=\\\"katbr\\\">\\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <p class=\\\"mat-body-2\\\">\\n                            {{roba.katbr}}\\n                        </p>\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Kataloski broj proizvodjaca Column -->\\n                <ng-container matColumnDef=\\\"katbrpro\\\">\\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <p class=\\\"mat-body-1\\\">\\n                            {{roba.katbrpro}}\\n                        </p>\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Naziv Column -->\\n                <ng-container matColumnDef=\\\"naziv\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Naziv </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <p class=\\\"mat-body-1\\\">\\n                            {{roba.naziv}}\\n                        </p>\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Proizvodjac Column -->\\n                <ng-container matColumnDef=\\\"proizvodjac\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <p class=\\\"mat-body-2\\\">\\n                            {{roba.proizvodjac}}\\n                        </p>\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Cena Column -->\\n                <ng-container matColumnDef=\\\"cena\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Cena </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <p class=\\\"mat-body-2\\\">\\n                            {{roba.cena}}\\n                        </p>\\n                    </td>\\n                </ng-container>\\n\\n                <!-- Stanje Column -->\\n                <ng-container matColumnDef=\\\"stanje\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Stanje </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <div *ngIf=\\\"roba.stanje > 0\\\">\\n                            <mat-icon class=\\\"boja-confirm\\\">check_circle_outline</mat-icon>\\n                        </div>\\n                        <div *ngIf=\\\"roba.stanje == 0\\\">\\n                            <mat-icon class=\\\"boja-error\\\">remove_circle_outline</mat-icon>\\n                        </div>\\n                    </td>\\n                </ng-container>\\n\\n\\n                <!-- Kolicina Column -->\\n                <ng-container matColumnDef=\\\"kolicina\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <div *ngIf=\\\"roba.stanje > 0\\\">\\n                            <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\" [(ngModel)]=\\\"roba.kolicina\\\" />\\n                        </div>\\n                </ng-container>\\n\\n                <!-- Kropa dugme Column -->\\n                <ng-container matColumnDef=\\\"korpa\\\">\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <div *ngIf=\\\"roba.stanje > 0\\\">\\n                            <button mat-raised-button class=\\\"button-glavni\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\n                        </div>\\n                </ng-container>\\n\\n                <!-- Da li ima na stanju ikona -->\\n                <ng-container matColumnDef=\\\"u-korpi\\\">\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\n                        <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\n                            <mat-icon class=\\\"boja-error\\\">add_shopping_cart</mat-icon>\\n                        </div>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\n            </table>\\n            <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\n                [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\n            </mat-paginator>\\n        </div>\\n    </main>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Roba } from 'src/app/model/roba';\nimport { Proizvodjac } from 'src/app/model/proizvodjac';\nimport { RobaService } from 'src/app/service/roba.service';\nimport { ProizvodjacService } from 'src/app/service/proizvodjac.service';\nimport { Sort, MatSnackBar } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { DataService } from 'src/app/service/data.service';\nimport { Korpa } from 'src/app/model/porudzbenica';\nimport { AppUtilsService } from 'src/app/utils/app-utils.service';\nimport { Partner } from 'src/app/model/partner';\nimport { LoginService } from 'src/app/service/login.service';\n\n@Component({\n  selector: 'app-filteri',\n  templateUrl: './filteri.component.html',\n  styleUrls: ['./filteri.component.css']\n})\nexport class FilteriComponent implements OnInit {\n\n  public roba: Roba[];\n  public proizvodjaci: Proizvodjac[];\n\n  // Paging and Sorting elements\n  public rowsPerPage = 10;\n  public pageIndex = 0;\n  public sort = null;\n  public tableLength;\n\n  // Filteri\n  public izabraniProizvodjac = '';\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\n\n  public searchValue = '';\n  public lastSearchValue = '';\n  public pocetnoPretrazivanje: boolean;\n\n  public ucitavanje = false;\n  public pronadjenaRoba = true;\n  public otvoriFilterDiv = false;\n\n  // Tabela\n  private columnDefinitions = [\n    { def: 'katbr', ifNotAuth: true },\n    { def: 'katbrpro', ifNotAuth: true },\n    { def: 'proizvodjac', ifNotAuth: true },\n    { def: 'naziv', ifNotAuth: true },\n    { def: 'cena', ifNotAuth: true },\n    { def: 'stanje', ifNotAuth: true },\n    { def: 'kolicina', ifNotAuth: false },\n    { def: 'korpa', ifNotAuth: false },\n    { def: 'u-korpi', ifNotAuth: false },\n  ];\n  public dataSource: any;\n\n  private alive = true;\n  private korpa: Korpa;\n  public partner: Partner;\n\n  constructor(private robaService: RobaService,\n    private proizvodjacService: ProizvodjacService,\n    private loginServis: LoginService,\n    private dataService: DataService,\n    private utilsService: AppUtilsService,\n    public korpaSnackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.pronadjiSveProizvodjace();\n  }\n\n  getDisplayedColumns(): string[] {\n    const isPartner = this.partner.ppid != null;\n    const dataColumns = this.columnDefinitions\n      .filter(cd => isPartner || cd.ifNotAuth)\n      .map(cd => cd.def);\n    return dataColumns;\n  }\n\n  pronandjiSveFiltere() {\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiFiltere(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiFilterePoPretrazi(searchValue) {\n    this.pocetnoPretrazivanje = false;\n    this.lastSearchValue = searchValue;\n    this.ucitavanje = true;\n    this.dataSource = null;\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiFiltere(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiSveProizvodjace() {\n    this.proizvodjacService.pronadjiSveProizvodjaceFiltera()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(res => {\n        this.proizvodjaci = res;\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n        this.pronandjiSveFiltere();\n      },\n        error => {\n          this.proizvodjaci = null;\n          console.log('Pronaci svu robu je bacilo gresku', error);\n        });\n  }\n\n  pronaciPoTrazenojReci(searchValue) {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.pronadjiFilterePoPretrazi(searchValue);\n\n  }\n\n  paginatorEvent(pageEvent) {\n    this.dataSource = [];\n    this.rowsPerPage = pageEvent.pageSize;\n    this.pageIndex = pageEvent.pageIndex;\n    this.pronadjiFilterePoPretrazi(this.searchValue);\n  }\n\n  sortData(sort: Sort) {\n    this.sort = sort;\n    this.pronadjiFilterePoPretrazi(this.searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\n  }\n\n  resetujFilter() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.izabranaRaspolozivost = this.raspolozivost[1];\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n    this.filtriraj();\n  }\n\n  filtriraj() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    let recZaPretragu: string;\n    recZaPretragu = this.searchValue;\n    this.pronadjiFilterePoPretrazi(recZaPretragu);\n  }\n\n  dodajUKorpu(roba: Roba) {\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\n    this.openKorpaSnackBar(snackBarPoruka);\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\n  }\n\n  openKorpaSnackBar(poruka: string) {\n    this.korpaSnackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  uKorpi(katBr: string): boolean {\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=\\\"button-glavni\\\">\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=\\\"button-glavni\\\" mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-polu-glavni\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\r\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h2>\\r\\n                    Filter\\r\\n                </h2>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-kontra-bela\\\">Proizvodjac: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        <p>{{proizvodjac.naziv}}</p>\\r\\n                    </option>\\r\\n                </select>\\r\\n\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-kontra-bela\\\">Raspolozivost: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <button mat-stroked-button class=\\\"button-glavni\\\" (click)='filtriraj()'>\\r\\n                        <p class=\\\"boja-kontra-bela\\\">Filtriraj</p>\\r\\n                    </button>\\r\\n                    <span class=\\\"col-2\\\"></span>\\r\\n                    <button mat-stroked-button class=\\\"button-error\\\" (click)='resetujFilter()'>\\r\\n                        <p class=\\\"boja-kontra-bela\\\">Ponisti</p>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n\\r\\n            <!-- Kataloski broj Column -->\\r\\n            <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.katbr}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kataloski broj proizvodjaca Column -->\\r\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.katbrpro}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Naziv Column -->\\r\\n            <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-1\\\">\\r\\n                        {{roba.naziv}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Proizvodjac Column -->\\r\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.proizvodjac}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Cena Column -->\\r\\n            <ng-container matColumnDef=\\\"cena\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Cena </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <p class=\\\"mat-body-2\\\">\\r\\n                        {{roba.cena}}\\r\\n                    </p>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Stanje Column -->\\r\\n            <ng-container matColumnDef=\\\"stanje\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Stanje </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <mat-icon class=\\\"boja-confirm\\\">check_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"roba.stanje == 0\\\">\\r\\n                        <mat-icon class=\\\"boja-error\\\">remove_circle_outline</mat-icon>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- Kolicina Column -->\\r\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\" [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Kropa dugme Column -->\\r\\n            <ng-container matColumnDef=\\\"korpa\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n                        <button mat-raised-button class=\\\"button-glavni\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Da li ima na stanju ikona -->\\r\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n                        <mat-icon class=\\\"boja-error\\\">add_shopping_cart</mat-icon>\\r\\n                    </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RobaService } from '../service/roba.service';\nimport { Roba } from '../model/roba';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { Sort, MatSnackBar } from '@angular/material';\nimport { Proizvodjac } from '../model/proizvodjac';\nimport { ProizvodjacService } from '../service/proizvodjac.service';\nimport { DataService } from '../service/data.service';\nimport { Korpa } from '../model/porudzbenica';\nimport { AppUtilsService } from '../utils/app-utils.service';\nimport { LoginService } from '../service/login.service';\nimport { Partner } from '../model/partner';\n\n@Component({\n  selector: 'app-roba',\n  templateUrl: './roba.component.html',\n  styleUrls: ['./roba.component.css']\n})\nexport class RobaComponent implements OnInit {\n\n  public roba: Roba[];\n  public proizvodjaci: Proizvodjac[];\n\n  // Paging and Sorting elements\n  public rowsPerPage = 10;\n  public pageIndex = 0;\n  public sort = null;\n  public tableLength;\n\n  // Filteri\n  public izabraniProizvodjac = '';\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\n\n  public searchValue = '';\n  public lastSearchValue = '';\n  public pocetnoPretrazivanje: boolean;\n\n  public ucitavanje = false;\n  public pronadjenaRoba = true;\n  public otvoriFilterDiv = false;\n\n  // Tabela\n  private columnDefinitions = [\n    { def: 'katbr', ifNotAuth: true },\n    { def: 'katbrpro', ifNotAuth: true },\n    { def: 'proizvodjac', ifNotAuth: true },\n    { def: 'naziv', ifNotAuth: true },\n    { def: 'cena', ifNotAuth: true },\n    { def: 'stanje', ifNotAuth: true },\n    { def: 'kolicina', ifNotAuth: false },\n    { def: 'korpa', ifNotAuth: false },\n    { def: 'u-korpi', ifNotAuth: false },\n  ];\n  public dataSource: any;\n\n  private alive = true;\n  private korpa: Korpa;\n  public partner: Partner;\n\n  constructor(private robaService: RobaService,\n    private proizvodjacService: ProizvodjacService,\n    private loginServis: LoginService,\n    private dataService: DataService,\n    private utilsService: AppUtilsService,\n    public korpaSnackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.pronadjiSveProizvodjace();\n  }\n\n  getDisplayedColumns(): string[] {\n    const isPartner = this.partner.ppid != null;\n    const dataColumns = this.columnDefinitions\n      .filter(cd => isPartner || cd.ifNotAuth)\n      .map(cd => cd.def);\n    return dataColumns;\n  }\n\n  pronadjiSvuRobu() {\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiSvuRobu(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronaciPoTrazenojReci(searchValue) {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.pronadjiSvuRobuPoPretrazi(searchValue);\n  }\n\n  pronadjiSvuRobuPoPretrazi(searchValue) {\n    this.pocetnoPretrazivanje = false;\n    this.lastSearchValue = searchValue;\n    this.dataSource = null;\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiSvuRobu(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiSveProizvodjace() {\n    this.proizvodjacService.pronadjiSveProizvodjace()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(res => {\n        this.proizvodjaci = res;\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n        this.pronadjiSvuRobu();\n      },\n        error => {\n          this.proizvodjaci = null;\n          console.log('Pronaci svu robu je bacilo gresku', error);\n        });\n  }\n\n  paginatorEvent(pageEvent) {\n    this.dataSource = [];\n    this.rowsPerPage = pageEvent.pageSize;\n    this.pageIndex = pageEvent.pageIndex;\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\n  }\n\n  sortData(sort: Sort) {\n    this.sort = sort;\n    let searchTerm;\n    if (this.lastSearchValue) {\n      searchTerm = this.lastSearchValue;\n    } else if (this.searchValue) {\n      searchTerm = this.searchValue;\n    } else {\n      searchTerm = null;\n    }\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\n  }\n\n  resetujFilter() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.izabranaRaspolozivost = this.raspolozivost[1];\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n    this.filtriraj();\n  }\n\n  filtriraj() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    let recZaPretragu: string;\n    recZaPretragu = this.searchValue;\n    this.pronadjiSvuRobuPoPretrazi(recZaPretragu);\n  }\n\n  dodajUKorpu(roba: Roba) {\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\n    this.openKorpaSnackBar(snackBarPoruka);\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\n  }\n\n  openKorpaSnackBar(poruka: string) {\n    this.korpaSnackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  uKorpi(katBr: string) {\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n        <div class=\\\"forms-input\\\">\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\n                <button mat-mini-fab class=\\\"button-glavni\\\">\\n                    <mat-icon>search</mat-icon>\\n                </button>\\n            </div>\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=\\\"button-glavni\\\" mat-mini-fab>\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-polu-glavni\\\">\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\n        </label>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <h2>\\n                    Filter\\n                </h2>\\n            </div>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Proizvodjac: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\n                        <p>{{proizvodjac.naziv}}</p>\\n                    </option>\\n                </select>\\n\\n                <div class=\\\"input-group-prepend razmak\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Raspolozivost: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <div>\\n                    <button mat-stroked-button class=\\\"button-glavni\\\" (click)='filtriraj()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Filtriraj</p>\\n                    </button>\\n                    <span class=\\\"col-2\\\"></span>\\n                    <button mat-stroked-button class=\\\"button-error\\\" (click)='resetujFilter()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Ponisti</p>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\n        <i class=\\\"material-icons icon-size\\\">\\n            error_outline\\n        </i>\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n            <!-- Kataloski broj Column -->\\n            <ng-container matColumnDef=\\\"katbr\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.katbr}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Kataloski broj proizvodjaca Column -->\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.katbrpro}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Naziv Column -->\\n            <ng-container matColumnDef=\\\"naziv\\\">\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.naziv}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Proizvodjac Column -->\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.proizvodjac}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Cena Column -->\\n            <ng-container matColumnDef=\\\"cena\\\">\\n                <th mat-header-cell *matHeaderCellDef> Cena </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.cena}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Stanje Column -->\\n            <ng-container matColumnDef=\\\"stanje\\\">\\n                <th mat-header-cell *matHeaderCellDef> Stanje </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <mat-icon class=\\\"boja-confirm\\\">check_circle_outline</mat-icon>\\n                    </div>\\n                    <div *ngIf=\\\"roba.stanje == 0\\\">\\n                        <mat-icon class=\\\"boja-error\\\">remove_circle_outline</mat-icon>\\n                    </div>\\n                </td>\\n            </ng-container>\\n\\n\\n            <!-- Kolicina Column -->\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\" [(ngModel)]=\\\"roba.kolicina\\\" />\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Kropa dugme Column -->\\n            <ng-container matColumnDef=\\\"korpa\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <button mat-raised-button class=\\\"button-glavni\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Da li ima na stanju ikona -->\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\n                        <mat-icon class=\\\"boja-error\\\">add_shopping_cart</mat-icon>\\n                    </div>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\n        </table>\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\n        </mat-paginator>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Roba } from 'src/app/model/roba';\nimport { Proizvodjac } from 'src/app/model/proizvodjac';\nimport { RobaService } from 'src/app/service/roba.service';\nimport { ProizvodjacService } from 'src/app/service/proizvodjac.service';\nimport { Sort, MatSnackBar } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { AppUtilsService } from 'src/app/utils/app-utils.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { Korpa } from 'src/app/model/porudzbenica';\nimport { LoginService } from 'src/app/service/login.service';\nimport { Partner } from 'src/app/model/partner';\n\n@Component({\n  selector: 'app-antifriz',\n  templateUrl: './antifriz.component.html',\n  styleUrls: ['./antifriz.component.css']\n})\nexport class AntifrizComponent implements OnInit {\n\n  public roba: Roba[];\n  public proizvodjaci: Proizvodjac[];\n\n  // Paging and Sorting elements\n  public rowsPerPage = 10;\n  public pageIndex = 0;\n  public sort = null;\n  public tableLength;\n\n  // Filteri\n  public izabraniProizvodjac = '';\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\n\n  public searchValue = '';\n  public lastSearchValue = '';\n  public pocetnoPretrazivanje: boolean;\n\n  public ucitavanje = false;\n  public pronadjenaRoba = true;\n  public otvoriFilterDiv = false;\n\n  // Tabela\n  private columnDefinitions = [\n    { def: 'katbr', ifNotAuth: true },\n    { def: 'katbrpro', ifNotAuth: true },\n    { def: 'proizvodjac', ifNotAuth: true },\n    { def: 'naziv', ifNotAuth: true },\n    { def: 'cena', ifNotAuth: true },\n    { def: 'stanje', ifNotAuth: true },\n    { def: 'kolicina', ifNotAuth: false },\n    { def: 'korpa', ifNotAuth: false },\n    { def: 'u-korpi', ifNotAuth: false },\n  ];\n  public dataSource: any;\n\n  private alive = true;\n  private korpa: Korpa;\n  public partner: Partner;\n\n  private vrstaUlja = 'antifriz';\n\n  constructor(\n    private robaService: RobaService,\n    private utilsService: AppUtilsService,\n    private loginServis: LoginService,\n    private proizvodjacService: ProizvodjacService,\n    private dataService: DataService,\n    public korpaSnackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.pronadjiSveProizvodjace();\n  }\n\n  getDisplayedColumns(): string[] {\n    const isPartner = this.partner.ppid != null;\n    const dataColumns = this.columnDefinitions\n      .filter(cd => isPartner || cd.ifNotAuth)\n      .map(cd => cd.def);\n    return dataColumns;\n  }\n\n  pronandjiSavAntifriz() {\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiEntitetePoPretrazi(searchValue) {\n    this.pocetnoPretrazivanje = false;\n    this.lastSearchValue = searchValue;\n    this.ucitavanje = true;\n    this.dataSource = null;\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiSveProizvodjace() {\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(res => {\n        this.proizvodjaci = res;\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n        this.pronandjiSavAntifriz();\n      },\n        error => {\n          this.proizvodjaci = null;\n          console.log('Pronaci svu robu je bacilo gresku', error);\n        });\n  }\n\n  pronaciPoTrazenojReci(searchValue) {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.pronadjiEntitetePoPretrazi(searchValue);\n  }\n\n  paginatorEvent(pageEvent) {\n    this.dataSource = [];\n    this.rowsPerPage = pageEvent.pageSize;\n    this.pageIndex = pageEvent.pageIndex;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  sortData(sort: Sort) {\n    this.sort = sort;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\n  }\n\n  resetujFilter() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.izabranaRaspolozivost = this.raspolozivost[1];\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n    this.filtriraj();\n  }\n\n  filtriraj() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    let recZaPretragu: string;\n    recZaPretragu = this.searchValue;\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\n  }\n\n  dodajUKorpu(roba: Roba) {\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\n    this.openKorpaSnackBar(snackBarPoruka);\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\n  }\n\n  openKorpaSnackBar(poruka: string) {\n    this.korpaSnackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  uKorpi(katBr: string): boolean {\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\n  }\n\n}\n","module.exports = \".smanji {\\r\\n    width: 30%;\\r\\n    float: right;\\r\\n}\\r\\n.forms-input-industrija {\\r\\n    display: flex;\\r\\n    border-radius: 45px;\\r\\n    width: 30%;\\r\\n    padding: 1px;\\r\\n    margin-top: 5px;\\r\\n    background: white;\\r\\n    border:2px solid grey;\\r\\n    width: 40%;\\r\\n    font-weight: bold;\\r\\n    text-align: center;\\r\\n}\\r\\n@media only screen and (max-device-width : 640px) { \\r\\n    .smanji {\\r\\n        width: 100%;\\r\\n    }\\r\\n    .forms-input-industrija {\\r\\n      border-radius: 45px;\\r\\n      background: white;\\r\\n      border:2px solid grey;\\r\\n      width:100%;\\r\\n      margin-top: 5px;\\r\\n      font-weight: bold;\\r\\n      text-align: center;\\r\\n      display: flex;\\r\\n      }  \\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"d-flex col-lg p-2 justify-content-center smanji\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n            <label class=\\\"pozadina-glavna boja-kontra-bela input-group-text \\\" for=\\\"inputGroupSelect01\\\">Izaberite vrstu\\n                maziva:</label>\\n        </div>\\n        <select class=\\\"custom-select\\\" (change)=\\\"onChange()\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaVrsta\\\">\\n            <option *ngFor=\\\"let izabranaVrsta of vrste\\\" [value]=\\\"izabranaVrsta\\\">{{izabranaVrsta}}</option>\\n        </select>\\n    </div>\\n    <div class=\\\"d-flex align-items-center col-lg justify-content-center\\\">\\n        <div class=\\\"forms-input-industrija\\\">\\n            <input class=\\\"flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\n                <button mat-mini-fab class=\\\"button-glavni\\\">\\n                    <mat-icon>search</mat-icon>\\n                </button>\\n            </div>\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=\\\"button-glavni\\\" mat-mini-fab>\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-polu-glavni\\\">\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\n        </label>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <h2>\\n                    Filter\\n                </h2>\\n            </div>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Proizvodjac: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\n                        <p>{{proizvodjac.naziv}}</p>\\n                    </option>\\n                </select>\\n\\n                <div class=\\\"input-group-prepend razmak\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Raspolozivost: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <div>\\n                    <button mat-stroked-button class=\\\"button-glavni\\\" (click)='filtriraj()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Filtriraj</p>\\n                    </button>\\n                    <span class=\\\"col-2\\\"></span>\\n                    <button mat-stroked-button class=\\\"button-error\\\" (click)='resetujFilter()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Ponisti</p>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\n        <i class=\\\"material-icons icon-size\\\">\\n            error_outline\\n        </i>\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n            <!-- Kataloski broj Column -->\\n            <ng-container matColumnDef=\\\"katbr\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.katbr}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Kataloski broj proizvodjaca Column -->\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.katbrpro}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Naziv Column -->\\n            <ng-container matColumnDef=\\\"naziv\\\">\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.naziv}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Proizvodjac Column -->\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.proizvodjac}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Cena Column -->\\n            <ng-container matColumnDef=\\\"cena\\\">\\n                <th mat-header-cell *matHeaderCellDef> Cena </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.cena}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Stanje Column -->\\n            <ng-container matColumnDef=\\\"stanje\\\">\\n                <th mat-header-cell *matHeaderCellDef> Stanje </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <mat-icon class=\\\"boja-confirm\\\">check_circle_outline</mat-icon>\\n                    </div>\\n                    <div *ngIf=\\\"roba.stanje == 0\\\">\\n                        <mat-icon class=\\\"boja-error\\\">remove_circle_outline</mat-icon>\\n                    </div>\\n                </td>\\n            </ng-container>\\n\\n\\n            <!-- Kolicina Column -->\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\" [(ngModel)]=\\\"roba.kolicina\\\" />\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Kropa dugme Column -->\\n            <ng-container matColumnDef=\\\"korpa\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <button mat-raised-button class=\\\"button-glavni\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Da li ima na stanju ikona -->\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\n                        <mat-icon class=\\\"boja-error\\\">add_shopping_cart</mat-icon>\\n                    </div>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\n        </table>\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\n        </mat-paginator>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Roba } from 'src/app/model/roba';\nimport { Proizvodjac } from 'src/app/model/proizvodjac';\nimport { RobaService } from 'src/app/service/roba.service';\nimport { ProizvodjacService } from 'src/app/service/proizvodjac.service';\nimport { Sort, MatSnackBar } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { AppUtilsService } from 'src/app/utils/app-utils.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { Korpa } from 'src/app/model/porudzbenica';\nimport { LoginService } from 'src/app/service/login.service';\nimport { Partner } from 'src/app/model/partner';\n\n@Component({\n  selector: 'app-industrijska',\n  templateUrl: './industrijska.component.html',\n  styleUrls: ['./industrijska.component.css']\n})\nexport class IndustrijskaComponent implements OnInit {\n\n  public roba: Roba[];\n  public proizvodjaci: Proizvodjac[];\n\n  // Paging and Sorting elements\n  public rowsPerPage = 10;\n  public pageIndex = 0;\n  public sort = null;\n  public tableLength;\n\n  // Filteri\n  public izabraniProizvodjac = '';\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\n\n  public searchValue = '';\n  public lastSearchValue = '';\n  public pocetnoPretrazivanje: boolean;\n\n  public ucitavanje = false;\n  public pronadjenaRoba = true;\n  public otvoriFilterDiv = false;\n\n  // Tabela\n  private columnDefinitions = [\n    { def: 'katbr', ifNotAuth: true },\n    { def: 'katbrpro', ifNotAuth: true },\n    { def: 'proizvodjac', ifNotAuth: true },\n    { def: 'naziv', ifNotAuth: true },\n    { def: 'cena', ifNotAuth: true },\n    { def: 'stanje', ifNotAuth: true },\n    { def: 'kolicina', ifNotAuth: false },\n    { def: 'korpa', ifNotAuth: false },\n    { def: 'u-korpi', ifNotAuth: false },\n  ];\n  public dataSource: any;\n\n  public vrste: string[] = ['Hidraulično ulje', 'Kompresorkso ulje', 'Reduktorsko ulje',\n    'Transformatorsko ulje', 'Turbinska ulja', 'Ulja za pneumatske alate', 'Ulja za klizne staze', 'Ulja za prenos toplote'];\n  public izabranaVrsta: string = this.vrste[0];\n\n  public vrsteUlja = [\n    { 'url': 'hidraulicna', 'naziv': 'Hidraulično ulje' },\n    { 'url': 'kompresorska', 'naziv': 'Kompresorkso ulje' },\n    { 'url': 'redutktorska', 'naziv': 'Reduktorsko ulje' },\n    { 'url': 'transformatorska', 'naziv': 'Transformatorsko ulje' },\n    { 'url': 'turbinska', 'naziv': 'Turbinska ulja' },\n    { 'url': 'pneumatska', 'naziv': 'Ulja za pneumatske alate' },\n    { 'url': 'klizna', 'naziv': 'Ulja za klizne staze' },\n    { 'url': 'prenosna', 'naziv': 'Ulja za prenos toplote' },\n  ];\n\n  private alive = true;\n  private korpa: Korpa;\n  public partner: Partner;\n\n  private vrstaUlja = 'hidraulicna';\n\n  constructor(\n    private robaService: RobaService,\n    private utilsService: AppUtilsService,\n    private loginServis: LoginService,\n    private proizvodjacService: ProizvodjacService,\n    private dataService: DataService,\n    public korpaSnackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.pronadjiSveProizvodjace();\n  }\n\n  getDisplayedColumns(): string[] {\n    const isPartner = this.partner.ppid != null;\n    const dataColumns = this.columnDefinitions\n      .filter(cd => isPartner || cd.ifNotAuth)\n      .map(cd => cd.def);\n    return dataColumns;\n  }\n\n  pronandjiUlja() {\n    this.dataSource = null;\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiEntitetePoPretrazi(searchValue) {\n    this.pocetnoPretrazivanje = false;\n    this.lastSearchValue = searchValue;\n    this.dataSource = null;\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiSveProizvodjace() {\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(res => {\n        this.proizvodjaci = res;\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n        this.pronandjiUlja();\n      },\n        error => {\n          this.proizvodjaci = null;\n          console.log('Pronaci svu robu je bacilo gresku', error);\n        });\n  }\n\n  pronaciPoTrazenojReci(searchValue) {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.pronadjiEntitetePoPretrazi(searchValue);\n  }\n\n  paginatorEvent(pageEvent) {\n    this.dataSource = [];\n    this.rowsPerPage = pageEvent.pageSize;\n    this.pageIndex = pageEvent.pageIndex;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  sortData(sort: Sort) {\n    this.sort = sort;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\n  }\n\n  resetujFilter() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.izabranaRaspolozivost = this.raspolozivost[1];\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n    this.filtriraj();\n  }\n\n  filtriraj() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    let recZaPretragu: string;\n    recZaPretragu = this.searchValue;\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\n  }\n\n  onChange() {\n    this.vrsteUlja.forEach(vrsta => {\n      if (vrsta.naziv === this.izabranaVrsta) {\n        this.vrstaUlja = vrsta.url;\n      }\n    });\n    this.pronadjiSveProizvodjace();\n  }\n\n  dodajUKorpu(roba: Roba) {\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\n    this.openKorpaSnackBar(snackBarPoruka);\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\n  }\n\n  openKorpaSnackBar(poruka: string) {\n    this.korpaSnackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  uKorpi(katBr: string): boolean {\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n        <div class=\\\"forms-input\\\">\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\n                <button mat-mini-fab class=\\\"button-glavni\\\">\\n                    <mat-icon>search</mat-icon>\\n                </button>\\n            </div>\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=\\\"button-glavni\\\" mat-mini-fab>\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-polu-glavni\\\">\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\n        </label>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <h2>\\n                    Filter\\n                </h2>\\n            </div>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Proizvodjac: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\n                        <p>{{proizvodjac.naziv}}</p>\\n                    </option>\\n                </select>\\n\\n                <div class=\\\"input-group-prepend razmak\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Raspolozivost: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <div>\\n                    <button mat-stroked-button class=\\\"button-glavni\\\" (click)='filtriraj()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Filtriraj</p>\\n                    </button>\\n                    <span class=\\\"col-2\\\"></span>\\n                    <button mat-stroked-button class=\\\"button-error\\\" (click)='resetujFilter()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Ponisti</p>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\n        <i class=\\\"material-icons icon-size\\\">\\n            error_outline\\n        </i>\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n            <!-- Kataloski broj Column -->\\n            <ng-container matColumnDef=\\\"katbr\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.katbr}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Kataloski broj proizvodjaca Column -->\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.katbrpro}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Naziv Column -->\\n            <ng-container matColumnDef=\\\"naziv\\\">\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.naziv}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Proizvodjac Column -->\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.proizvodjac}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Cena Column -->\\n            <ng-container matColumnDef=\\\"cena\\\">\\n                <th mat-header-cell *matHeaderCellDef> Cena </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.cena}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Stanje Column -->\\n            <ng-container matColumnDef=\\\"stanje\\\">\\n                <th mat-header-cell *matHeaderCellDef> Stanje </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <mat-icon class=\\\"boja-confirm\\\">check_circle_outline</mat-icon>\\n                    </div>\\n                    <div *ngIf=\\\"roba.stanje == 0\\\">\\n                        <mat-icon class=\\\"boja-error\\\">remove_circle_outline</mat-icon>\\n                    </div>\\n                </td>\\n            </ng-container>\\n\\n\\n            <!-- Kolicina Column -->\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\" [(ngModel)]=\\\"roba.kolicina\\\" />\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Kropa dugme Column -->\\n            <ng-container matColumnDef=\\\"korpa\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <button mat-raised-button class=\\\"button-glavni\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Da li ima na stanju ikona -->\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\n                        <mat-icon class=\\\"boja-error\\\">add_shopping_cart</mat-icon>\\n                    </div>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\n        </table>\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\n        </mat-paginator>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Roba } from 'src/app/model/roba';\nimport { Proizvodjac } from 'src/app/model/proizvodjac';\nimport { RobaService } from 'src/app/service/roba.service';\nimport { ProizvodjacService } from 'src/app/service/proizvodjac.service';\nimport { Sort, MatSnackBar } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { AppUtilsService } from 'src/app/utils/app-utils.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { Korpa } from 'src/app/model/porudzbenica';\nimport { LoginService } from 'src/app/service/login.service';\nimport { Partner } from 'src/app/model/partner';\n\n@Component({\n  selector: 'app-kociona',\n  templateUrl: './kociona.component.html',\n  styleUrls: ['./kociona.component.css']\n})\nexport class KocionaComponent implements OnInit {\n\n  public roba: Roba[];\n  public proizvodjaci: Proizvodjac[];\n\n  // Paging and Sorting elements\n  public rowsPerPage = 10;\n  public pageIndex = 0;\n  public sort = null;\n  public tableLength;\n\n  // Filteri\n  public izabraniProizvodjac = '';\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\n\n  public searchValue = '';\n  public lastSearchValue = '';\n  public pocetnoPretrazivanje: boolean;\n\n  public ucitavanje = false;\n  public pronadjenaRoba = true;\n  public otvoriFilterDiv = false;\n\n  // Tabela\n  private columnDefinitions = [\n    { def: 'katbr', ifNotAuth: true },\n    { def: 'katbrpro', ifNotAuth: true },\n    { def: 'proizvodjac', ifNotAuth: true },\n    { def: 'naziv', ifNotAuth: true },\n    { def: 'cena', ifNotAuth: true },\n    { def: 'stanje', ifNotAuth: true },\n    { def: 'kolicina', ifNotAuth: false },\n    { def: 'korpa', ifNotAuth: false },\n    { def: 'u-korpi', ifNotAuth: false },\n  ];\n  public dataSource: any;\n\n  private alive = true;\n  private korpa: Korpa;\n  public partner: Partner;\n\n  private vrstaUlja = 'kociona';\n\n  constructor(\n    private robaService: RobaService,\n    private utilsService: AppUtilsService,\n    private loginServis: LoginService,\n    private proizvodjacService: ProizvodjacService,\n    private dataService: DataService,\n    public korpaSnackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.pronadjiSveProizvodjace();\n  }\n\n  getDisplayedColumns(): string[] {\n    const isPartner = this.partner.ppid != null;\n    const dataColumns = this.columnDefinitions\n      .filter(cd => isPartner || cd.ifNotAuth)\n      .map(cd => cd.def);\n    return dataColumns;\n  }\n\n  pronandjiSvaKocionaUlja() {\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiEntitetePoPretrazi(searchValue) {\n    this.pocetnoPretrazivanje = false;\n    this.lastSearchValue = searchValue;\n    this.dataSource = null;\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiSveProizvodjace() {\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(res => {\n        this.proizvodjaci = res;\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n        this.pronandjiSvaKocionaUlja();\n      },\n        error => {\n          this.proizvodjaci = null;\n          console.log('Pronaci svu robu je bacilo gresku', error);\n        });\n  }\n\n  pronaciPoTrazenojReci(searchValue) {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.pronadjiEntitetePoPretrazi(searchValue);\n  }\n\n  paginatorEvent(pageEvent) {\n    this.dataSource = [];\n    this.rowsPerPage = pageEvent.pageSize;\n    this.pageIndex = pageEvent.pageIndex;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  sortData(sort: Sort) {\n    this.sort = sort;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\n  }\n\n  resetujFilter() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.izabranaRaspolozivost = this.raspolozivost[1];\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n    this.filtriraj();\n  }\n\n  filtriraj() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    let recZaPretragu: string;\n    recZaPretragu = this.searchValue;\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\n  }\n\n  dodajUKorpu(roba: Roba) {\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\n    this.openKorpaSnackBar(snackBarPoruka);\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\n  }\n\n  openKorpaSnackBar(poruka: string) {\n    this.korpaSnackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  uKorpi(katBr: string): boolean {\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n        <div class=\\\"forms-input\\\">\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\n                <button mat-mini-fab class=\\\"button-glavni\\\">\\n                    <mat-icon>search</mat-icon>\\n                </button>\\n            </div>\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=\\\"button-glavni\\\" mat-mini-fab>\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-polu-glavni\\\">\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\n        </label>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <h2>\\n                    Filter\\n                </h2>\\n            </div>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Proizvodjac: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\n                        <p>{{proizvodjac.naziv}}</p>\\n                    </option>\\n                </select>\\n\\n                <div class=\\\"input-group-prepend razmak\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Raspolozivost: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <div>\\n                    <button mat-stroked-button class=\\\"button-glavni\\\" (click)='filtriraj()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Filtriraj</p>\\n                    </button>\\n                    <span class=\\\"col-2\\\"></span>\\n                    <button mat-stroked-button class=\\\"button-error\\\" (click)='resetujFilter()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Ponisti</p>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\n        <i class=\\\"material-icons icon-size\\\">\\n            error_outline\\n        </i>\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n            <!-- Kataloski broj Column -->\\n            <ng-container matColumnDef=\\\"katbr\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.katbr}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Kataloski broj proizvodjaca Column -->\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.katbrpro}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Naziv Column -->\\n            <ng-container matColumnDef=\\\"naziv\\\">\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.naziv}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Proizvodjac Column -->\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.proizvodjac}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Cena Column -->\\n            <ng-container matColumnDef=\\\"cena\\\">\\n                <th mat-header-cell *matHeaderCellDef> Cena </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.cena}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Stanje Column -->\\n            <ng-container matColumnDef=\\\"stanje\\\">\\n                <th mat-header-cell *matHeaderCellDef> Stanje </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <mat-icon class=\\\"boja-confirm\\\">check_circle_outline</mat-icon>\\n                    </div>\\n                    <div *ngIf=\\\"roba.stanje == 0\\\">\\n                        <mat-icon class=\\\"boja-error\\\">remove_circle_outline</mat-icon>\\n                    </div>\\n                </td>\\n            </ng-container>\\n\\n\\n            <!-- Kolicina Column -->\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\" [(ngModel)]=\\\"roba.kolicina\\\" />\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Kropa dugme Column -->\\n            <ng-container matColumnDef=\\\"korpa\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <button mat-raised-button class=\\\"button-glavni\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Da li ima na stanju ikona -->\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\n                        <mat-icon class=\\\"boja-error\\\">add_shopping_cart</mat-icon>\\n                    </div>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\n        </table>\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\n        </mat-paginator>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Roba } from 'src/app/model/roba';\nimport { Proizvodjac } from 'src/app/model/proizvodjac';\nimport { RobaService } from 'src/app/service/roba.service';\nimport { ProizvodjacService } from 'src/app/service/proizvodjac.service';\nimport { Sort, MatSnackBar } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { AppUtilsService } from 'src/app/utils/app-utils.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { Korpa } from 'src/app/model/porudzbenica';\nimport { Partner } from 'src/app/model/partner';\nimport { LoginService } from 'src/app/service/login.service';\n\n@Component({\n  selector: 'app-menjacko',\n  templateUrl: './menjacko.component.html',\n  styleUrls: ['./menjacko.component.css']\n})\nexport class MenjackoComponent implements OnInit {\n\n  public roba: Roba[];\n  public proizvodjaci: Proizvodjac[];\n\n  // Paging and Sorting elements\n  public rowsPerPage = 10;\n  public pageIndex = 0;\n  public sort = null;\n  public tableLength;\n\n  // Filteri\n  public izabraniProizvodjac = '';\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\n\n  public searchValue = '';\n  public lastSearchValue = '';\n  public pocetnoPretrazivanje: boolean;\n\n  public ucitavanje = false;\n  public pronadjenaRoba = true;\n  public otvoriFilterDiv = false;\n\n  // Tabela\n  private columnDefinitions = [\n    { def: 'katbr', ifNotAuth: true },\n    { def: 'katbrpro', ifNotAuth: true },\n    { def: 'proizvodjac', ifNotAuth: true },\n    { def: 'naziv', ifNotAuth: true },\n    { def: 'cena', ifNotAuth: true },\n    { def: 'stanje', ifNotAuth: true },\n    { def: 'kolicina', ifNotAuth: false },\n    { def: 'korpa', ifNotAuth: false },\n    { def: 'u-korpi', ifNotAuth: false },\n  ];\n  public dataSource: any;\n\n  private alive = true;\n  private korpa: Korpa;\n  public partner: Partner;\n\n  private vrstaUlja = 'menjacka';\n\n  constructor(\n    private robaService: RobaService,\n    private utilsService: AppUtilsService,\n    private proizvodjacService: ProizvodjacService,\n    private loginServis: LoginService,\n    private dataService: DataService,\n    public korpaSnackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.pronadjiSveProizvodjace();\n  }\n\n  getDisplayedColumns(): string[] {\n    const isPartner = this.partner.ppid != null;\n    const dataColumns = this.columnDefinitions\n      .filter(cd => isPartner || cd.ifNotAuth)\n      .map(cd => cd.def);\n    return dataColumns;\n  }\n\n  pronandjiSvaMenjackaUlja() {\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiEntitetePoPretrazi(searchValue) {\n    this.pocetnoPretrazivanje = false;\n    this.lastSearchValue = searchValue;\n    this.ucitavanje = true;\n    this.dataSource = null;\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiSveProizvodjace() {\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(res => {\n        this.proizvodjaci = res;\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n        this.pronandjiSvaMenjackaUlja();\n      },\n        error => {\n          this.proizvodjaci = null;\n          console.log('Pronaci svu robu je bacilo gresku', error);\n        });\n  }\n\n  pronaciPoTrazenojReci(searchValue) {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.pronadjiEntitetePoPretrazi(searchValue);\n  }\n\n  paginatorEvent(pageEvent) {\n    this.dataSource = [];\n    this.rowsPerPage = pageEvent.pageSize;\n    this.pageIndex = pageEvent.pageIndex;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  sortData(sort: Sort) {\n    this.sort = sort;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\n  }\n\n  resetujFilter() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.izabranaRaspolozivost = this.raspolozivost[1];\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n    this.filtriraj();\n  }\n\n  filtriraj() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    let recZaPretragu: string;\n    recZaPretragu = this.searchValue;\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\n  }\n\n  dodajUKorpu(roba: Roba) {\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\n    this.openKorpaSnackBar(snackBarPoruka);\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\n  }\n\n  openKorpaSnackBar(poruka: string) {\n    this.korpaSnackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  uKorpi(katBr: string): boolean {\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n        <div class=\\\"forms-input\\\">\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\n                <button mat-mini-fab class=\\\"button-glavni\\\">\\n                    <mat-icon>search</mat-icon>\\n                </button>\\n            </div>\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\n                <button *ngIf=\\\"!otvoriFilterDiv\\\" class=\\\"button-glavni\\\" mat-mini-fab>\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"otvoriFilterDiv\\\" mat-mini-fab class=\\\"button-polu-glavni\\\">\\n                    <mat-icon>view_headline</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\" class=\\\"mat-caption\\\">\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\n        </label>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilterDiv\\\">\\n        <div class=\\\"filter-div-test d-flex flex-column\\\">\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <h2>\\n                    Filter\\n                </h2>\\n            </div>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Proizvodjac: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabraniProizvodjac\\\">\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\n                        <p>{{proizvodjac.naziv}}</p>\\n                    </option>\\n                </select>\\n\\n                <div class=\\\"input-group-prepend razmak\\\">\\n                    <label class=\\\"input-group-text button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                        <p class=\\\"boja-kontra-bela\\\">Raspolozivost: </p>\\n                    </label>\\n                </div>\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaRaspolozivost\\\">\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center\\\">\\n                <div>\\n                    <button mat-stroked-button class=\\\"button-glavni\\\" (click)='filtriraj()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Filtriraj</p>\\n                    </button>\\n                    <span class=\\\"col-2\\\"></span>\\n                    <button mat-stroked-button class=\\\"button-error\\\" (click)='resetujFilter()'>\\n                        <p class=\\\"boja-kontra-bela\\\">Ponisti</p>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\n        <i class=\\\"material-icons icon-size\\\">\\n            error_outline\\n        </i>\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n            <!-- Kataloski broj Column -->\\n            <ng-container matColumnDef=\\\"katbr\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.katbr}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Kataloski broj proizvodjaca Column -->\\n            <ng-container matColumnDef=\\\"katbrpro\\\">\\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.katbrpro}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Naziv Column -->\\n            <ng-container matColumnDef=\\\"naziv\\\">\\n                <th mat-header-cell *matHeaderCellDef> Naziv </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-1\\\">\\n                        {{roba.naziv}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Proizvodjac Column -->\\n            <ng-container matColumnDef=\\\"proizvodjac\\\">\\n                <th mat-header-cell *matHeaderCellDef> Proizvodjac </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.proizvodjac}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Cena Column -->\\n            <ng-container matColumnDef=\\\"cena\\\">\\n                <th mat-header-cell *matHeaderCellDef> Cena </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <p class=\\\"mat-body-2\\\">\\n                        {{roba.cena}}\\n                    </p>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Stanje Column -->\\n            <ng-container matColumnDef=\\\"stanje\\\">\\n                <th mat-header-cell *matHeaderCellDef> Stanje </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <mat-icon class=\\\"boja-confirm\\\">check_circle_outline</mat-icon>\\n                    </div>\\n                    <div *ngIf=\\\"roba.stanje == 0\\\">\\n                        <mat-icon class=\\\"boja-error\\\">remove_circle_outline</mat-icon>\\n                    </div>\\n                </td>\\n            </ng-container>\\n\\n\\n            <!-- Kolicina Column -->\\n            <ng-container matColumnDef=\\\"kolicina\\\">\\n                <th mat-header-cell *matHeaderCellDef>Kolicina </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\" [(ngModel)]=\\\"roba.kolicina\\\"/>\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Kropa dugme Column -->\\n            <ng-container matColumnDef=\\\"korpa\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"roba.stanje > 0\\\">\\n                        <button mat-raised-button class=\\\"button-glavni\\\" (click)='dodajUKorpu(roba)'>Dodaj u korpu</button>\\n                    </div>\\n            </ng-container>\\n\\n            <!-- Da li ima na stanju ikona -->\\n            <ng-container matColumnDef=\\\"u-korpi\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let roba\\\">\\n                    <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\n                        <mat-icon class=\\\"boja-error\\\">add_shopping_cart</mat-icon>\\n                    </div>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\n        </table>\\n        <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\n            [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\n        </mat-paginator>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Roba } from 'src/app/model/roba';\nimport { Proizvodjac } from 'src/app/model/proizvodjac';\nimport { RobaService } from 'src/app/service/roba.service';\nimport { ProizvodjacService } from 'src/app/service/proizvodjac.service';\nimport { Sort, MatSnackBar } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { AppUtilsService } from 'src/app/utils/app-utils.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { Korpa } from 'src/app/model/porudzbenica';\nimport { Partner } from 'src/app/model/partner';\nimport { LoginService } from 'src/app/service/login.service';\n@Component({\n  selector: 'app-motorna',\n  templateUrl: './motorna.component.html',\n  styleUrls: ['./motorna.component.css']\n})\nexport class MotornaComponent implements OnInit {\n\n  public roba: Roba[];\n  public proizvodjaci: Proizvodjac[];\n\n  // Paging and Sorting elements\n  public rowsPerPage = 10;\n  public pageIndex = 0;\n  public sort = null;\n  public tableLength;\n\n  // Filteri\n  public izabraniProizvodjac = '';\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n  public izabranaRaspolozivost: string = this.raspolozivost[1];\n\n  public searchValue = '';\n  public lastSearchValue = '';\n  public pocetnoPretrazivanje: boolean;\n\n  public ucitavanje = false;\n  public pronadjenaRoba = true;\n  public otvoriFilterDiv = false;\n\n  // Tabela\n  private columnDefinitions = [\n    { def: 'katbr', ifNotAuth: true },\n    { def: 'katbrpro', ifNotAuth: true },\n    { def: 'proizvodjac', ifNotAuth: true },\n    { def: 'naziv', ifNotAuth: true },\n    { def: 'cena', ifNotAuth: true },\n    { def: 'stanje', ifNotAuth: true },\n    { def: 'kolicina', ifNotAuth: false },\n    { def: 'korpa', ifNotAuth: false },\n    { def: 'u-korpi', ifNotAuth: false },\n  ];\n  public dataSource: any;\n\n  private alive = true;\n  private korpa: Korpa;\n  public partner: Partner;\n\n  private vrstaUlja = 'motorna';\n\n  constructor(\n    private robaService: RobaService,\n    private utilsService: AppUtilsService,\n    private proizvodjacService: ProizvodjacService,\n    private loginServis: LoginService,\n    private dataService: DataService,\n    public korpaSnackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n    this.pronadjiSveProizvodjace();\n  }\n\n  getDisplayedColumns(): string[] {\n    const isPartner = this.partner.ppid != null;\n    const dataColumns = this.columnDefinitions\n      .filter(cd => isPartner || cd.ifNotAuth)\n      .map(cd => cd.def);\n    return dataColumns;\n  }\n\n  pronandjiSvoMotornoUlje() {\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiEntitetePoPretrazi(searchValue) {\n    this.pocetnoPretrazivanje = false;\n    this.lastSearchValue = searchValue;\n    this.ucitavanje = true;\n    this.dataSource = null;\n    const naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.izabranaRaspolozivost);\n    const proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.izabraniProizvodjac, this.proizvodjaci);\n    this.ucitavanje = true;\n    this.pronadjenaRoba = true;\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, searchValue, naStanju, proizvodjacId, this.vrstaUlja)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => {\n          if (error.status === 404) {\n            this.pronadjenaRoba = false;\n            return EMPTY;\n          }\n          return throwError(error);\n        }),\n        finalize(() => this.ucitavanje = false)\n      )\n      .subscribe(\n        res => {\n          this.pronadjenaRoba = true;\n          this.roba = res.content;\n          this.dataSource = this.roba;\n          this.rowsPerPage = res.size;\n          this.pageIndex = res.number;\n          this.tableLength = res.totalElements;\n        },\n        error => {\n          this.roba = null;\n          console.log('Podnaci robu izbacilo je gresko');\n        });\n  }\n\n  pronadjiSveProizvodjace() {\n    this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(res => {\n        this.proizvodjaci = res;\n        this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n        this.pronandjiSvoMotornoUlje();\n      },\n        error => {\n          this.proizvodjaci = null;\n          console.log('Pronaci svu robu je bacilo gresku', error);\n        });\n  }\n\n  pronaciPoTrazenojReci(searchValue) {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.pronadjiEntitetePoPretrazi(searchValue);\n  }\n\n  paginatorEvent(pageEvent) {\n    this.dataSource = [];\n    this.rowsPerPage = pageEvent.pageSize;\n    this.pageIndex = pageEvent.pageIndex;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  sortData(sort: Sort) {\n    this.sort = sort;\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilterDiv = !this.otvoriFilterDiv;\n  }\n\n  resetujFilter() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    this.izabranaRaspolozivost = this.raspolozivost[1];\n    this.izabraniProizvodjac = this.proizvodjaci[0].naziv;\n    this.filtriraj();\n  }\n\n  filtriraj() {\n    if (this.dataSource) {\n      this.pageIndex = 0;\n    }\n    let recZaPretragu: string;\n    recZaPretragu = this.searchValue;\n    this.pronadjiEntitetePoPretrazi(recZaPretragu);\n  }\n\n  dodajUKorpu(roba: Roba) {\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\n    this.openKorpaSnackBar(snackBarPoruka);\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\n  }\n\n  openKorpaSnackBar(poruka: string) {\n    this.korpaSnackBar.open(poruka, '', {\n      duration: 2000,\n    });\n  }\n\n  uKorpi(katBr: string): boolean {\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\n  }\n}\n","module.exports = \".industrijski-stil {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"grid-container\\\">\\n    <mat-tab-group mat-stretch-tabs>\\n        <mat-tab label=\\\"Motorna ulja\\\">\\n            <app-motorna></app-motorna>\\n        </mat-tab>\\n        <mat-tab label=\\\"Menjacka ulja\\\">\\n            <app-menjacko></app-menjacko>\\n        </mat-tab>\\n        <mat-tab label=\\\"Kociona ulja\\\">\\n            <app-kociona></app-kociona>\\n        </mat-tab>\\n        <mat-tab label=\\\"Antifiriz\\\">\\n            <app-antifriz></app-antifriz>\\n        </mat-tab>\\n        <mat-tab label=\\\"Industrijska ulja\\\">\\n            <app-industrijska></app-industrijska>\\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Roba } from 'src/app/model/roba';\nimport { Proizvodjac } from 'src/app/model/proizvodjac';\nimport { RobaService } from 'src/app/service/roba.service';\nimport { ProizvodjacService } from 'src/app/service/proizvodjac.service';\nimport { Sort } from '@angular/material';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-ulja',\n  templateUrl: './ulja.component.html',\n  styleUrls: ['./ulja.component.css']\n})\nexport class UljaComponent {\n  selectedTab = 0;\n  changeTab(tabIndex: number) {\n    this.selectedTab = tabIndex;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Korpa, RobaKorpa } from '../model/porudzbenica';\nimport { LocalStorageService } from './local-storage.service';\nimport { Roba } from '../model/roba';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private korpa: Korpa = this.korpaStorage.vratiKorpuIzMemorije() || new Korpa();\n  private korpaSubjekat = new BehaviorSubject(this.korpa);\n  public trenutnaKorpa = this.korpaSubjekat.asObservable();\n\n  constructor(private korpaStorage: LocalStorageService) { }\n\n  ubaciUKorpu(robaKorpa: RobaKorpa) {\n    if (this.korpa.roba.length === 0) {\n      this.korpa.roba.push(robaKorpa);\n    } else {\n      let daLiPostojiVecUKorpi = false;\n      this.korpa.roba.forEach(roba => {\n        if (roba.katbr === robaKorpa.katbr) {\n          roba.kolicina = roba.kolicina + robaKorpa.kolicina;\n          roba.cenaUkupno = roba.kolicina * robaKorpa.cenaKom;\n          daLiPostojiVecUKorpi = true;\n        }\n      });\n      if (daLiPostojiVecUKorpi === false) {\n        this.korpa.roba.push(robaKorpa);\n      }\n    }\n    this.korpaStorage.cuvajKorpuULokalnojMemoriji(robaKorpa);\n    this.korpaSubjekat.next(this.korpa);\n  }\n\n  public skiniSaStanjaUkolikoJeUKorpi(robaBaza: Roba[]) {\n    const korpa = this.korpaStorage.vratiKorpuIzMemorije();\n    if (korpa && robaBaza) {\n      korpa.roba.forEach(storage => {\n        robaBaza.forEach(roba => {\n          if (storage.katbr === roba.katbr) {\n            roba.stanje = roba.stanje - storage.kolicina;\n          }\n        });\n      });\n    }\n  }\n  public izbaciIzKorpe(index: number) {\n    this.korpa.roba.splice(index, 1);\n    this.korpaStorage.izbaciIzMemorije(index);\n    this.korpaSubjekat.next(this.korpa);\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { SESSION_STORAGE, StorageService } from 'angular-webstorage-service';\nimport { Korpa, RobaKorpa } from '../model/porudzbenica';\nimport { Partner } from '../model/partner';\n\nconst KORPA_KLJUC = 'korpa_roba';\nconst PARTNER_KLJUC = 'partner_kljuc';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor(@Inject(SESSION_STORAGE) private storage: StorageService) { }\n\n  public sacuvajPartneraUMemoriju(partner: Partner ) {\n    if (partner != null && partner.ppid != null) {\n    this.storage.set(PARTNER_KLJUC, partner);\n    }\n  }\n\n  public logout() {\n    this.storage.remove(PARTNER_KLJUC);\n    this.storage.remove(KORPA_KLJUC);\n  }\n\n  public procitajPartneraIzMemorije() {\n    return this.storage.get(PARTNER_KLJUC);\n  }\n\n  public vratiKorpuIzMemorije(): Korpa {\n    return this.storage.get(KORPA_KLJUC);\n  }\n\n  public cuvajKorpuULokalnojMemoriji(robaKorpa: RobaKorpa) {\n    let trenutnaKorpa: Korpa;\n    if (this.storage.get(KORPA_KLJUC)) {\n      trenutnaKorpa = this.storage.get(KORPA_KLJUC);\n      this.ubaciRobuUMemoriju(trenutnaKorpa, robaKorpa);\n    } else {\n      trenutnaKorpa = new Korpa();\n      trenutnaKorpa.roba.push(robaKorpa);\n    }\n\n    this.storage.set(KORPA_KLJUC, trenutnaKorpa);\n  }\n\n  private ubaciRobuUMemoriju(trenutnaKorpa: Korpa, robaKorpa: RobaKorpa) {\n      let daLiPostojiVecUMemoriji = false;\n      trenutnaKorpa.roba.forEach(storage => {\n        if (storage.katbr === robaKorpa.katbr) {\n          storage.kolicina = storage.kolicina + robaKorpa.kolicina;\n          storage.cenaUkupno = storage.kolicina * robaKorpa.cenaKom;\n          daLiPostojiVecUMemoriji = true;\n        }\n      });\n      if (daLiPostojiVecUMemoriji === false) {\n        trenutnaKorpa.roba.push(robaKorpa);\n      }\n  }\n\n  public izbaciIzMemorije(index: number) {\n    const korpa = this.vratiKorpuIzMemorije();\n    korpa.roba.splice(index, 1);\n    this.storage.set(KORPA_KLJUC, korpa);\n  }\n\n  public zameniArtikalSaNovim(robaKorpa: RobaKorpa) {\n    const trenutnaKorpa: Korpa = this.storage.get(KORPA_KLJUC);\n    trenutnaKorpa.roba.forEach(storage => {\n      if (storage.katbr === robaKorpa.katbr) {\n        storage.kolicina = robaKorpa.kolicina;\n        storage.cenaUkupno = robaKorpa.cenaUkupno;\n      }\n    });\n    this.storage.set(KORPA_KLJUC, trenutnaKorpa);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { throwError, BehaviorSubject, EMPTY } from 'rxjs';\nimport { Credentials } from '../model/credentials';\nimport { timeoutWith, catchError, finalize } from 'rxjs/operators';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { AppUtilsService } from '../utils/app-utils.service';\nimport { Partner } from '../model/partner';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from './local-storage.service';\n\nconst TIMEOUT = 15000;\nconst TIMEOUT_ERROR = 'Timeout error!';\n\nconst DOMAIN_URL = 'http://localhost:8080';\nconst LOGIN_URL = '/login';\nconst LOGOUT_URL = '/logout';\nconst PARTNER_URL = '/api/partner';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private partner: Partner = this.storageServis.procitajPartneraIzMemorije() || new Partner();\n  private partnerSubjekat = new BehaviorSubject(this.partner);\n  public ulogovaniPartner = this.partnerSubjekat.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private utils: AppUtilsService,\n    private storageServis: LocalStorageService) {\n      this.partner.email = 'radespasoje@gmail.com';\n      this.partner.naziv = 'Automaterijal';\n      this.partner.ppid = 7;\n      this.partnerSubjekat.next(this.partner);\n    }\n\n  public ulogujSe(credentials: Credentials) {\n    const parameterObject = {};\n    parameterObject['username'] = credentials.username;\n    parameterObject['password'] = credentials.password;\n    parameterObject['submit'] = 'Login';\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\n    const fullUrl = DOMAIN_URL + LOGIN_URL + parametersString;\n\n    this.http.post(fullUrl, {}, { responseType: 'text' })\n      .pipe(\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n        catchError((error: any) => throwError(error))\n      ).subscribe(res => {\n        this.vratiUlogovanogKorisnika();\n      },\n        error => {\n          this.partner = new Partner();\n          this.partnerSubjekat.next(this.partner);\n          this.storageServis.logout();\n          console.log('Greska kod logovanja');\n        });\n  }\n\n  public logout() {\n    const fullUrl = DOMAIN_URL + LOGOUT_URL;\n    this.http.post(fullUrl, {}, { responseType: 'text' })\n      .pipe(\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n        catchError((error: any) => throwError(error))\n      )\n      .subscribe(() => {\n        this.partner = new Partner();\n        this.partnerSubjekat.next(this.partner);\n        this.storageServis.logout();\n        this.router.navigateByUrl('naslovna');\n      },\n        error => {\n          console.log('Greska kod logout-a');\n        });\n  }\n\n  private vratiUlogovanogKorisnika() {\n    const fullUrl = DOMAIN_URL + PARTNER_URL;\n    this.http.get(fullUrl)\n      .pipe(\n        // map((response: any) => response.json()),\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n        catchError((error: HttpErrorResponse) => {\n          if (error.status === 404) {\n            return EMPTY;\n          }\n          return throwError(error);\n        })\n      ).subscribe(res => {\n        this.partner = res;\n        this.storageServis.sacuvajPartneraUMemoriju(this.partner);\n        this.partnerSubjekat.next(this.partner);\n        this.router.navigateByUrl('naslovna');\n      },\n        error => {\n          console.log('Logovanje nije uspelo.');\n        });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, timeoutWith, catchError } from 'rxjs/operators';\nimport { Proizvodjac } from '../model/proizvodjac';\nimport { AppUtilsService } from '../utils/app-utils.service';\n\nconst DOMAIN_URL = 'http://localhost:8080/api';\nconst ROBA_URL = '/proizvodjaci';\nconst FILTERI_URL = '/filteri';\nconst AKUMULATORI_URL = '/akumulatori';\nconst ULJA_URL = '/ulja';\nconst MOTORNA_UTL = '/motorna';\n\nconst TIMEOUT = 15000;\nconst TIMEOUT_ERROR = 'Timeout error!';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProizvodjacService {\n\n  constructor(private http: Http, private utils: AppUtilsService) { }\n\n  public pronadjiSveProizvodjace(): Observable<Proizvodjac[]> {\n    const fullUrl = DOMAIN_URL + ROBA_URL;\n\n    return this.http\n        .get(fullUrl)\n        .pipe(\n          map((response: any) => response.json()),\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n          catchError((error: any) => throwError(error))\n        );\n  }\n\n  public pronadjiSveProizvodjaceFiltera(): Observable<Proizvodjac[]> {\n    const fullUrl = DOMAIN_URL + ROBA_URL + FILTERI_URL;\n\n    return this.http\n        .get(fullUrl)\n        .pipe(\n          map((response: any) => response.json()),\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n          catchError((error: any) => throwError(error))\n        );\n  }\n\n  public pronadjiSveProizvodjaceAkumulatora(): Observable<Proizvodjac[]> {\n    const fullUrl = DOMAIN_URL + ROBA_URL + AKUMULATORI_URL;\n\n    return this.http\n        .get(fullUrl)\n        .pipe(\n          map((response: any) => response.json()),\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n          catchError((error: any) => throwError(error))\n        );\n  }\n\n  public pronadjiSveProizvodjaceUljaPoVrsti(vrstaUlja): Observable<Proizvodjac[]> {\n    const fullUrl = DOMAIN_URL + ROBA_URL + ULJA_URL + this.utils.vratiPutDoResursaZaUlje(vrstaUlja);\n\n    return this.http\n        .get(fullUrl)\n        .pipe(\n          map((response: any) => response.json()),\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n          catchError((error: any) => throwError(error))\n        );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable, throwError } from 'rxjs';\nimport { RobaPage } from '../model/roba';\nimport { map, timeoutWith, catchError } from 'rxjs/operators';\nimport { Sort } from '@angular/material';\nimport { AppUtilsService } from '../utils/app-utils.service';\n\nconst DOMAIN_URL = 'http://localhost:8080/api';\nconst ROBA_URL = '/roba';\nconst FILTERI_URL = '/filteri';\nconst AKUMULATORI_URL = '/akumulatori';\nconst ULJA_URL = '/ulja';\n\nconst TIMEOUT = 15000;\nconst TIMEOUT_ERROR = 'Timeout error!';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RobaService {\n\n\n  constructor(private http: Http, private utils: AppUtilsService) { }\n\n  public pronadjiSvuRobu(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<RobaPage> {\n    const parameterObject = {};\n    parameterObject['pageSize'] = pageSize;\n    parameterObject['page'] = page;\n    if (sort) {\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\n    }\n    parameterObject['searchTerm'] = searchValue;\n    parameterObject['proizvodjac'] = proizvodjacId;\n    parameterObject['naStanju'] = naStanju;\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\n    const fullUrl = DOMAIN_URL + ROBA_URL + parametersString;\n\n    return this.http\n      .get(fullUrl)\n      .pipe(\n        map((response: any) => response.json()),\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  public pronadjiFiltere(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<RobaPage> {\n    const parameterObject = {};\n    parameterObject['pageSize'] = pageSize;\n    parameterObject['page'] = page;\n    if (sort) {\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\n    }\n    parameterObject['searchTerm'] = searchValue;\n    parameterObject['proizvodjac'] = proizvodjacId;\n    parameterObject['naStanju'] = naStanju;\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\n    const fullUrl = DOMAIN_URL + ROBA_URL + FILTERI_URL + parametersString;\n    return this.http\n      .get(fullUrl)\n      .pipe(\n        map((response: any) => response.json()),\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  public pronadjiAkumulatore(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<RobaPage> {\n    const parameterObject = {};\n    parameterObject['pageSize'] = pageSize;\n    parameterObject['page'] = page;\n    if (sort) {\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\n    }\n    parameterObject['searchTerm'] = searchValue;\n    parameterObject['proizvodjac'] = proizvodjacId;\n    parameterObject['naStanju'] = naStanju;\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\n    const fullUrl = DOMAIN_URL + ROBA_URL + AKUMULATORI_URL + parametersString;\n    return this.http\n      .get(fullUrl)\n      .pipe(\n        map((response: any) => response.json()),\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  public pronadjiUlje(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId, vrstaUlja): Observable<RobaPage> {\n    const parameterObject = {};\n    parameterObject['pageSize'] = pageSize;\n    parameterObject['page'] = page;\n    if (sort) {\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\n    }\n    parameterObject['searchTerm'] = searchValue;\n    parameterObject['proizvodjac'] = proizvodjacId;\n    parameterObject['naStanju'] = naStanju;\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\n    const fullUrl = DOMAIN_URL + ROBA_URL + ULJA_URL + this.utils.vratiPutDoResursaZaUlje(vrstaUlja) + parametersString;\n    return this.http\n      .get(fullUrl)\n      .pipe(\n        map((response: any) => response.json()),\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n        catchError((error: any) => throwError(error))\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatButtonModule, MatCheckboxModule, MatTableModule, MatTabsModule,\n  MatToolbarModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule,\n   MatCardModule, MatMenuModule, MatPaginatorModule, MatSortModule, MatExpansionModule,\n    MatFormField, MatFormFieldModule, MatChipsModule, MatSelectModule, MatAutocompleteModule, \n    MatRadioModule, MatSnackBarModule, MatBadgeModule, MatDialogModule, MatProgressSpinnerModule} from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatChipsModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTabsModule,\n    CommonModule,\n    FormsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    ReactiveFormsModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTabsModule,\n    CommonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { Proizvodjac } from '../model/proizvodjac';\nimport { Roba } from '../model/roba';\nimport { RobaKorpa, Korpa } from '../model/porudzbenica';\nimport { DataService } from '../service/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppUtilsService {\n\n  constructor(private dataService: DataService) { }\n\n  public vratiIdProizvodjacaAkoPostoji(izabraniProizvodjac: string, proizvodjaci: Proizvodjac[]): string {\n    let proId = null;\n    if (izabraniProizvodjac && izabraniProizvodjac === 'SVI') {\n      proId = null;\n    } else {\n      proizvodjaci.forEach(pr => {\n        if (pr.naziv === izabraniProizvodjac) {\n          proId = pr.proid;\n        }\n      });\n    }\n    return proId;\n  }\n\n  public daLiRobaTrebaDaBudeNaStanju(raspolozivost: string[], izabranaRaspolozivost: string): boolean {\n    if (raspolozivost && izabranaRaspolozivost === raspolozivost[1]) {\n      return null;\n    } else {\n      return false;\n    }\n  }\n\n  public dodajUKorpu(roba: Roba): string {\n    let snackBarPoruka = 'Artikal je ubacen u korpu.';\n    if (roba.kolicina == null || roba.kolicina <= 0) {\n      roba.kolicina = 1;\n    }\n    if (roba.stanje < roba.kolicina) {\n      snackBarPoruka = 'Maksimalan kolicina ' + roba.stanje + '. ' + snackBarPoruka;\n      roba.kolicina = roba.stanje;\n    }\n    const robaKorpa = new RobaKorpa(roba.katbr, roba.katbrpro, roba.naziv, roba.proizvodjac, roba.kolicina, roba.cena, roba.stanje);\n    this.dataService.ubaciUKorpu(robaKorpa);\n    return snackBarPoruka;\n  }\n\n  public izbrisiRobuSaStanja(roba: Roba[], robaUKorpi: Roba) {\n    roba.forEach(robaBaza => {\n      if (robaBaza.katbr === robaUKorpi.katbr) {\n        robaBaza.stanje = robaBaza.stanje - robaUKorpi.kolicina;\n      }\n    });\n  }\n\n  public daLiJeRobaUKorpi(korpa: Korpa, katBr: string) {\n    let uKorpi = false;\n    korpa.roba.forEach(r => {\n      if (r.katbr === katBr) {\n        uKorpi = true;\n      }\n    });\n    return uKorpi;\n  }\n\n  public vratiKveriParametre(map) {\n\n    let parameterString = '';\n\n    Object.keys(map).forEach(function (elem, index) {\n      const value = map[elem];\n      if (value != null || value === 0) {\n        if (parameterString) {\n          parameterString += '&';\n        }\n\n        parameterString += elem + '=' + value;\n      }\n    });\n\n    if (parameterString) {\n      parameterString = '?' + parameterString;\n    }\n    return parameterString;\n  }\n\n  public vratiPutDoResursaZaUlje(vrstaUlja): string {\n    let url = '/motorna';\n    if (vrstaUlja === 'motorna') {\n      url = '/motorna';\n    } else if (vrstaUlja === 'menjacka') {\n      url = '/menjacka';\n    } else if (vrstaUlja === 'kociona') {\n      url = '/kociona';\n    } else if (vrstaUlja === 'antifriz') {\n      url = '/antifriz';\n    } else if (vrstaUlja === 'hidraulicna') {\n      url = '/hidraulicna';\n    } else if (vrstaUlja === 'kompresorska') {\n      url = '/kompresorska';\n    } else if (vrstaUlja === 'redutktorska') {\n      url = '/redutktorska';\n    } else if (vrstaUlja === 'transformatorska') {\n      url = '/transformatorska';\n    } else if (vrstaUlja === 'turbinska') {\n      url = '/turbinska';\n    } else if (vrstaUlja === 'pneumatska') {\n      url = '/pneumatska';\n    } else if (vrstaUlja === 'klizna') {\n      url = '/klizna';\n    } else if (vrstaUlja === 'prenosna') {\n      url = '/prenosna';\n    }\n    return url;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}