{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/e-commerce/model/dto.ts","webpack:///./src/app/e-shop/magacin/shared-components/filter/filter.component.html","webpack:///./src/app/e-shop/magacin/shared-components/filter/filter.component.scss","webpack:///./src/app/e-shop/magacin/shared-components/filter/filter.component.ts","webpack:///./src/app/e-shop/magacin/shared-components/pretraga/pretraga.component.html","webpack:///./src/app/e-shop/magacin/shared-components/pretraga/pretraga.component.scss","webpack:///./src/app/e-shop/magacin/shared-components/pretraga/pretraga.component.ts","webpack:///./src/app/e-shop/magacin/shared-components/shared-magacin.module.ts","webpack:///./src/app/e-shop/magacin/shared-components/tabela/tabela.component.html","webpack:///./src/app/e-shop/magacin/shared-components/tabela/tabela.component.scss","webpack:///./src/app/e-shop/magacin/shared-components/tabela/tabela.component.ts","webpack:///./src/app/e-shop/model/dto.ts","webpack:///./src/app/e-shop/model/filter.ts","webpack:///./src/app/e-shop/model/page.ts","webpack:///./src/app/e-shop/model/porudzbenica.ts","webpack:///./src/app/e-shop/model/roba.enum.ts","webpack:///./src/app/e-shop/service/data/data.service.ts","webpack:///./src/app/e-shop/service/data/local-storage.service.ts","webpack:///./src/app/e-shop/service/login.service.ts","webpack:///./src/app/e-shop/service/partner.service.ts","webpack:///./src/app/e-shop/service/proizvodjac.service.ts","webpack:///./src/app/e-shop/utils/app-utils.service.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/footer/footer.module.ts","webpack:///./src/app/navigacija/navigacija.component.html","webpack:///./src/app/navigacija/navigacija.component.scss","webpack:///./src/app/navigacija/navigacija.component.ts","webpack:///./src/app/navigacija/navigacija.module.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/shared/modal/brendovi-modal/brendovi-modal.component.html","webpack:///./src/app/shared/modal/brendovi-modal/brendovi-modal.component.scss","webpack:///./src/app/shared/modal/brendovi-modal/brendovi-modal.component.ts","webpack:///./src/app/shared/modal/izmena-kolicine-modal/izmena-kolicine-modal.component.html","webpack:///./src/app/shared/modal/izmena-kolicine-modal/izmena-kolicine-modal.component.scss","webpack:///./src/app/shared/modal/izmena-kolicine-modal/izmena-kolicine-modal.component.ts","webpack:///./src/app/shared/modal/logout-modal/logout-modal.component.html","webpack:///./src/app/shared/modal/logout-modal/logout-modal.component.scss","webpack:///./src/app/shared/modal/logout-modal/logout-modal.component.ts","webpack:///./src/app/shared/modal/modal.module.ts","webpack:///./src/app/shared/modal/neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component.html","webpack:///./src/app/shared/modal/neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component.scss","webpack:///./src/app/shared/modal/neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component.ts","webpack:///./src/app/shared/modal/poruka-modal/poruka-modal.component.html","webpack:///./src/app/shared/modal/poruka-modal/poruka-modal.component.scss","webpack:///./src/app/shared/modal/poruka-modal/poruka-modal.component.ts","webpack:///./src/app/shared/modal/prvo-logovanje-modal/prvo-logovanje-modal.component.html","webpack:///./src/app/shared/modal/prvo-logovanje-modal/prvo-logovanje-modal.component.scss","webpack:///./src/app/shared/modal/prvo-logovanje-modal/prvo-logovanje-modal.component.ts","webpack:///./src/app/shared/modal/registracija-modal/registracija-modal.component.html","webpack:///./src/app/shared/modal/registracija-modal/registracija-modal.component.scss","webpack:///./src/app/shared/modal/registracija-modal/registracija-modal.component.ts","webpack:///./src/app/shared/modal/sesija-istekla-modal/sesija-istekla-modal.component.html","webpack:///./src/app/shared/modal/sesija-istekla-modal/sesija-istekla-modal.component.scss","webpack:///./src/app/shared/modal/sesija-istekla-modal/sesija-istekla-modal.component.ts","webpack:///./src/app/shared/modal/upit-modal/upit-modal.component.html","webpack:///./src/app/shared/modal/upit-modal/upit-modal.component.scss","webpack:///./src/app/shared/modal/upit-modal/upit-modal.component.ts","webpack:///./src/app/shared/modal/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.html","webpack:///./src/app/shared/modal/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.scss","webpack:///./src/app/shared/modal/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.ts","webpack:///./src/app/shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.html","webpack:///./src/app/shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.scss","webpack:///./src/app/shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.ts","webpack:///./src/app/shared/model/konstante.ts","webpack:///./src/app/shared/service/email.service.ts","webpack:///./src/app/shared/service/notifikacija.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./e-commerce/dasboard/dasboard.module\": [\n\t\t\"./src/app/e-commerce/dasboard/dasboard.module.ts\",\n\t\t\"default~e-commerce-dasboard-dasboard-module~e-commerce-o-nama-o-nama-module\",\n\t\t\"common\",\n\t\t\"e-commerce-dasboard-dasboard-module\"\n\t],\n\t\"./e-commerce/kontakt/kontakt.module\": [\n\t\t\"./src/app/e-commerce/kontakt/kontakt.module.ts\",\n\t\t\"e-commerce-kontakt-kontakt-module\"\n\t],\n\t\"./e-commerce/o-nama/o-nama.module\": [\n\t\t\"./src/app/e-commerce/o-nama/o-nama.module.ts\",\n\t\t\"default~e-commerce-dasboard-dasboard-module~e-commerce-o-nama-o-nama-module\",\n\t\t\"common\",\n\t\t\"e-commerce-o-nama-o-nama-module\"\n\t],\n\t\"./e-shop/faktura/fakture.module\": [\n\t\t\"./src/app/e-shop/faktura/fakture.module.ts\",\n\t\t\"common\",\n\t\t\"e-shop-faktura-fakture-module\"\n\t],\n\t\"./e-shop/korpa/korpa.module\": [\n\t\t\"./src/app/e-shop/korpa/korpa.module.ts\",\n\t\t\"common\",\n\t\t\"e-shop-korpa-korpa-module\"\n\t],\n\t\"./e-shop/login/login.module\": [\n\t\t\"./src/app/e-shop/login/login.module.ts\",\n\t\t\"e-shop-login-login-module\"\n\t],\n\t\"./e-shop/magacin/akumulatori/akumulatori.module\": [\n\t\t\"./src/app/e-shop/magacin/akumulatori/akumulatori.module.ts\",\n\t\t\"common\",\n\t\t\"e-shop-magacin-akumulatori-akumulatori-module\"\n\t],\n\t\"./e-shop/magacin/filteri/filteri.module\": [\n\t\t\"./src/app/e-shop/magacin/filteri/filteri.module.ts\",\n\t\t\"common\",\n\t\t\"e-shop-magacin-filteri-filteri-module\"\n\t],\n\t\"./e-shop/magacin/ostalo/ostalo.module\": [\n\t\t\"./src/app/e-shop/magacin/ostalo/ostalo.module.ts\",\n\t\t\"common\",\n\t\t\"e-shop-magacin-ostalo-ostalo-module\"\n\t],\n\t\"./e-shop/magacin/roba/roba.module\": [\n\t\t\"./src/app/e-shop/magacin/roba/roba.module.ts\",\n\t\t\"common\",\n\t\t\"e-shop-magacin-roba-roba-module\"\n\t],\n\t\"./e-shop/magacin/ulja/ulja.module\": [\n\t\t\"./src/app/e-shop/magacin/ulja/ulja.module.ts\",\n\t\t\"common\",\n\t\t\"e-shop-magacin-ulja-ulja-module\"\n\t],\n\t\"./e-shop/partner/partner.module\": [\n\t\t\"./src/app/e-shop/partner/partner.module.ts\",\n\t\t\"e-shop-partner-partner-module\"\n\t],\n\t\"./e-shop/resetovanje-sfire/reset-sifre.module\": [\n\t\t\"./src/app/e-shop/resetovanje-sfire/reset-sifre.module.ts\",\n\t\t\"e-shop-resetovanje-sfire-reset-sifre-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/naslovna', pathMatch: 'full' },\r\n  {path: 'naslovna' , loadChildren: './e-commerce/dasboard/dasboard.module#DasboardModule'},\r\n  {path: 'naslovna/:id', loadChildren: './e-commerce/dasboard/dasboard.module#DasboardModule'},\r\n  {path: 'o-nama' , loadChildren: './e-commerce/o-nama/o-nama.module#ONamaModule'},\r\n  {path: 'kontakt' , loadChildren: './e-commerce/kontakt/kontakt.module#KontaktModule'},\r\n  {path: 'roba' , loadChildren: './e-shop/magacin/roba/roba.module#RobaModule'},\r\n  {path: 'filteri' , loadChildren: './e-shop/magacin/filteri/filteri.module#FilteriModule'},\r\n  {path: 'ulja' , loadChildren: './e-shop/magacin/ulja/ulja.module#UljaModule'},\r\n  {path: 'akumulatori', loadChildren: './e-shop/magacin/akumulatori/akumulatori.module#AkumulatoriModule'},\r\n  {path: 'ostalo' , loadChildren: './e-shop/magacin/ostalo/ostalo.module#OstaloModule'},\r\n  {path: 'ostalo/:id', loadChildren: './e-shop/magacin/ostalo/ostalo.module#OstaloModule'},\r\n  {path: 'login' , loadChildren: './e-shop/login/login.module#LoginModule'},\r\n  {path: 'licni-podaci' , loadChildren: './e-shop/partner/partner.module#PartnerModule'},\r\n  {path: 'porudzbenice', loadChildren: './e-shop/faktura/fakture.module#FaktureModule'},\r\n  {path: 'porudzbenice/:id', loadChildren: './e-shop/faktura/fakture.module#FaktureModule'},\r\n  {path: 'korpa', loadChildren: './e-shop/korpa/korpa.module#KorpaModule'},\r\n  {path: 'reset-sifre/:id', loadChildren: './e-shop/resetovanje-sfire/reset-sifre.module#ResetSifreModule'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true, scrollPositionRestoration: 'enabled'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<app-navigacija></app-navigacija>\"","import { Component } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router'; // import Router and NavigationEnd\n\nimport { filter } from 'rxjs/operators';\n\ndeclare var gtag\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Automaterijal';\n\n  constructor(public router: Router) {\n    const navEndEvent$ = router.events.pipe(\n      filter(e => e instanceof NavigationEnd)\n    );\n    navEndEvent$.subscribe((e: NavigationEnd) => {\n      gtag('config', 'UA-143220679-1', {'page_path': e.urlAfterRedirects});\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { StorageServiceModule } from 'angular-webstorage-service';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModalModule } from './shared/modal/modal.module';\r\nimport { NavigacijaModule } from './navigacija/navigacija.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ModalModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    NavigacijaModule,\r\n    StorageServiceModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class Poruka {\r\n    ime?: string;\r\n    prezime?: string;\r\n    firma?: string;\r\n    telefon?: string;\r\n    posta?: string;\r\n    poruka?: string;\r\n}\r\n\r\nexport class Upit {\r\n    emailTelefon?: string;\r\n    markaModel?: string;\r\n    godiste?: string;\r\n    kubikaza?: string;\r\n    kilovati?: string;\r\n    gorivo?: any;\r\n    pogon?: any;\r\n    interesujeMe?: any;\r\n    drugo?: string;\r\n}\r\n\r\nexport class Brend {\r\n    ime?: string;\r\n    urlSlikeLogo?: string;\r\n    urlSlikePozadina?: string;\r\n    opis?: string;\r\n}\r\n\r\n\r\nexport class VestiNaslovna {\r\n    id?: string;\r\n    naslov?: string;\r\n    opis?: string;\r\n    opisSlika?: string;\r\n    slika?: string;\r\n    vest?: string;\r\n}\r\n\r\nexport class Vest {\r\n    id?: string;\r\n    naslov?: string;\r\n    slika?: string;\r\n    tekst?: string;\r\n}\r\n","module.exports = \"<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilter\\\">\\r\\n    <div class=\\\"filter-div-test d-flex flex-column\\\">\\r\\n        <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <h2>\\r\\n                Filter\\r\\n            </h2>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex flex-column flex-xl-row input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <label class=\\\"input-group-text mobilna-duzina button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Proizvodjač: </p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select mobilna-duzina\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"filter.proizvodjac\\\">\\r\\n                    <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\r\\n                        {{proizvodjac.naziv}}\\r\\n                    </option>\\r\\n                </select>\\r\\n                <div class=\\\"input-group-prepend razmak\\\">\\r\\n                    <label class=\\\"input-group-text mobilna-duzina button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        Raspoloživost:\\r\\n                    </label>\\r\\n                </div>\\r\\n                <select class=\\\"custom-select mobilna-duzina\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"filter.raspolozivost\\\">\\r\\n                    <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\r\\n                </select>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <div>\\r\\n                <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\r\\n                    <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\r\\n                </button>\\r\\n                <span class=\\\"col-2\\\"></span>\\r\\n                <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\r\\n                    <p class=\\\"boja-siva-400\\\">Poništi</p>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \":host ::ng-deep .custom-select {\\n  padding: 0rem 0rem 0rem 0.5rem !important; }\\n\\n@media only screen and (max-width: 1200px) {\\n  :host ::ng-deep .custom-select {\\n    padding: 0px;\\n    width: 100%; }\\n  .input-group-prepend {\\n    display: inline; }\\n  select {\\n    display: inline; }\\n  .razmak {\\n    padding: 0px;\\n    margin-left: 0px;\\n    margin-top: 10px; } }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ProizvodjacService } from 'src/app/e-shop/service/proizvodjac.service';\nimport { takeWhile } from 'rxjs/operators';\nimport { VrstaRobe } from 'src/app/e-shop/model/roba.enum';\nimport { Filter } from 'src/app/e-shop/model/filter';\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Proizvodjac } from 'src/app/e-shop/model/dto';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit {\n\n  @Input() otvoriFilter;\n  @Input() vrstaRobe;\n  @Input() vrstaUlja;\n  @Input() industrijkoUljeEvent: Observable<string>;\n  @Output() filterEvent = new EventEmitter<any>();\n\n  public proizvodjaci: Proizvodjac[];\n\n  public filter = new Filter();\n\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n\n  private alive = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private proizvodjacService: ProizvodjacService,\n    private utilsService: AppUtilsService) { }\n\n  ngOnInit() {\n    if (this.industrijkoUljeEvent) {\n      this.industrijkoUljeEvent.subscribe((vrstaUlja: string) => {\n        this.vrstaUlja = vrstaUlja;\n        this.filter.raspolozivost = this.raspolozivost[1];\n        this.pronadjiProizvodjace();\n      });\n    }\n    this.filter.raspolozivost = this.raspolozivost[1];\n    this.pronadjiProizvodjace();\n  }\n\n  pronadjiProizvodjace() {\n    if (this.vrstaRobe === VrstaRobe.AKUMULATORI) {\n      this.proizvodjacService.pronadjiSveProizvodjaceAkumulatora()\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(res => {\n          this.proizvodjaci = res;\n          this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n        },\n          error => {\n            this.proizvodjaci = null;\n          });\n    } else if (this.vrstaRobe === VrstaRobe.FILTERI) {\n      this.proizvodjacService.pronadjiSveProizvodjaceFiltera()\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(res => {\n          this.proizvodjaci = res;\n          this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n        },\n          error => {\n            this.proizvodjaci = null;\n          });\n    } else if (this.vrstaRobe === VrstaRobe.SVE) {\n      this.proizvodjacService.pronadjiSveProizvodjace()\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(res => {\n          this.proizvodjaci = res;\n          this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n        },\n          error => {\n            this.proizvodjaci = null;\n          });\n    } else if (this.vrstaRobe === VrstaRobe.ULJA) {\n      this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(res => {\n          this.proizvodjaci = res;\n          this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n        },\n          error => {\n            this.proizvodjaci = null;\n          });\n    } else if (this.vrstaRobe === VrstaRobe.OSTALO) {\n      this.route.params.subscribe((params: Params) => {\n        this.proizvodjacService.pronadjiSveProizvodjaceKategorije(params.id)\n          .pipe(takeWhile(() => this.alive))\n          .subscribe(res => {\n            this.proizvodjaci = res;\n            this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n          },\n            error => {\n              this.proizvodjaci = null;\n            });\n      });\n    }\n  }\n\n  filtriraj() {\n    this.filter.naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.filter.raspolozivost);\n    this.filter.proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.filter.proizvodjac, this.proizvodjaci);\n    this.filterEvent.emit(this.filter);\n  }\n\n  resetujFilter() {\n    this.filter.raspolozivost = this.raspolozivost[1];\n    this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n    this.filter.naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.filter.raspolozivost);\n    this.filter.proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.filter.proizvodjac, this.proizvodjaci);\n\n    this.filterEvent.emit(this.filter);\n  }\n}\n","module.exports = \"<div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n  <div class=\\\"forms-input\\\">\\r\\n    <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\"\\r\\n      (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n    <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n      <button mat-mini-fab class=pozadina-glavna-100>\\r\\n        <mat-icon>search</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n      <button matTooltip=\\\"Filter\\\" *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n        <mat-icon>view_headline</mat-icon>\\r\\n      </button>\\r\\n      <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n        <mat-icon>view_headline</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n  <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n    <font color=\\\"#424242\\\"> Unesite termin za pretragu</font>\\r\\n  </label>\\r\\n  <label *ngIf=\\\"!pocetnoPretrazivanje && !validnaPretaga && (searchValue.trim().length > 0 && searchValue.trim().length < 3)\\\">\\r\\n    <font class=\\\"boja-crvena-50\\\">Morate uneti bar tri karaktera</font>\\r\\n  </label>\\r\\n</div>\"","module.exports = \"\"","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pretraga',\n  templateUrl: './pretraga.component.html',\n  styleUrls: ['./pretraga.component.scss']\n})\nexport class PretragaComponent implements OnInit {\n\n  @Output() pretragaEvent = new EventEmitter<any>();\n  @Output() filterEvent = new EventEmitter<any>();\n\n  public searchValue = '';\n  public otvoriFilter = false;\n  public pocetnoPretrazivanje = true;\n  public validnaPretaga = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.pocetnoPretrazivanje = true;\n  }\n\n\n  pronaciPoTrazenojReci(searchValue: string) {\n    this.pocetnoPretrazivanje = false;\n    if (searchValue == null\n      || (searchValue.trim().length > 0 && searchValue.trim().length < 3)) {\n      this.validnaPretaga = false;\n      return;\n    } else {\n      this.validnaPretaga = true;\n    }\n    this.pretragaEvent.emit(searchValue);\n  }\n\n  toogleFilterDiv() {\n    this.otvoriFilter = !this.otvoriFilter;\n    this.filterEvent.emit(this.otvoriFilter);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FilterComponent } from './filter/filter.component';\r\nimport { TabelaComponent } from './tabela/tabela.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from 'src/app/shared/material/material.module';\r\nimport { PretragaComponent } from './pretraga/pretraga.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    FilterComponent,\r\n    TabelaComponent,\r\n    PretragaComponent\r\n  ],\r\n  exports: [\r\n    FilterComponent,\r\n    TabelaComponent,\r\n    PretragaComponent\r\n  ]\r\n})\r\nexport class SharedMagacinModule { }\r\n","module.exports = \"<div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n  <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n    <!-- Kataloski broj Column -->\\r\\n    <ng-container matColumnDef=\\\"katbr\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Kataloški broj </th>\\r\\n      <td data-label=\\\"Kataloški broj\\\" mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p class=\\\"mat-body-2\\\">\\r\\n          {{roba.katbr}}\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Kataloski broj proizvodjaca Column -->\\r\\n    <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Kataloški broj proizvodjača </th>\\r\\n      <td data-label=\\\"Kataloški broj proizvodjača\\\" mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p>\\r\\n          {{roba.katbrpro}}\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Naziv Column -->\\r\\n    <ng-container matColumnDef=\\\"naziv\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n      <td data-label=\\\"Naziv\\\" mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p>\\r\\n          {{roba.naziv}}\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Proizvodjač Column -->\\r\\n    <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Proizvodjač </th>\\r\\n      <td data-label=\\\"Proizvodjač\\\" mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p class=\\\"mat-body-2\\\">\\r\\n          {{roba.proizvodjac.naziv}}\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Cena Column -->\\r\\n    <ng-container matColumnDef=\\\"cena\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n      <td data-label=\\\"Cena\\\" mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n          {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Stanje Column -->\\r\\n    <ng-container matColumnDef=\\\"stanje\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n      <td data-label=\\\"Stanje\\\" mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center tabela-u-korpi\\\">\\r\\n          <mat-icon matTooltip=\\\"Ima na stanju\\\" class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center tabela-u-korpi\\\">\\r\\n          <mat-icon matTooltip=\\\"Nema na stanju\\\" class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n        </div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- Kolicina Column -->\\r\\n    <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Količina </th>\\r\\n      <td class=\\\"visina-div-kolicine\\\" data-label=\\\"Količina\\\" mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n          <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n            [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Kropa dugme Column -->\\r\\n    <ng-container matColumnDef=\\\"korpa\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> </th>\\r\\n      <td class=\\\"visina-div-dugmeta\\\" mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <div class=\\\"dugme-mobilni\\\" *ngIf=\\\"roba.stanje > 0\\\">\\r\\n          <button mat-raised-button class=\\\"velicina-dugmeta button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u\\r\\n            korpu</button>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Da li ima na stanju ikona -->\\r\\n    <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <div class=\\\"dugme-mobilni\\\" *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n          <mat-icon matTooltip=\\\"U korpi\\\" class=\\\"tabela-u-korpi boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n  </table>\\r\\n  <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n    [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n  </mat-paginator>\\r\\n</div>\"","module.exports = \"@media screen and (max-width: 900px) {\\n  .pdv {\\n    float: none; }\\n  p {\\n    font-size: 0.85em;\\n    font-weight: bold; }\\n  tr.mat-header-row {\\n    height: 0px; } }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Roba } from 'src/app/e-shop/model/dto';\r\nimport { LoginService } from 'src/app/e-shop/service/login.service';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { NotifikacijaService } from 'src/app/shared/service/notifikacija.service';\r\nimport { MatSnackBarKlase } from 'src/app/shared/model/konstante';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tabela',\r\n  templateUrl: './tabela.component.html',\r\n  styleUrls: ['./tabela.component.scss']\r\n})\r\nexport class TabelaComponent implements OnInit {\r\n\r\n  @Input() dataSource: any[];\r\n  @Input() roba: Roba[];\r\n\r\n  // Paging and Sorting elements\r\n  @Input() rowsPerPage = 10;\r\n  @Input() pageIndex = 0;\r\n  @Input() tableLength;\r\n  @Output() magacinEvent = new EventEmitter<any>();\r\n\r\n  public partnerLogovan = false;\r\n  private korpa: Korpa;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n\r\n  constructor(\r\n    private utilsService: AppUtilsService,\r\n    private loginServis: LoginService,\r\n    private notifikacijaServis: NotifikacijaService,\r\n    private dataService: DataService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.daLiJePartnerUlogovan.subscribe(bool => this.partnerLogovan = bool);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.magacinEvent.emit(pageEvent);\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => this.partnerLogovan || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    this.loginServis.vratiUlogovanogKorisnika(false).subscribe(partner => {\r\n      if (partner) {\r\n        const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n        this.notifikacijaServis.notify(snackBarPoruka, MatSnackBarKlase.Zelena);\r\n        this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n        this.loginServis.izbaciPartnerIzSesije();\r\n      }\r\n    });\r\n  }\r\n\r\n  uKorpi(katBr: string): boolean {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n}\r\n","import { Page } from './page';\r\n\r\nexport class ValueHelp {\r\n   id?: number;\r\n   naziv?: string;\r\n}\r\n\r\nexport class Roba {\r\n    public robaid: number;\r\n    public katbr: string;\r\n    public katbrpro: string;\r\n    public naziv: string;\r\n    public proizvodjac: Proizvodjac;\r\n    public grupa: string;\r\n    public podGrupa: string;\r\n    public stanje: number;\r\n    public cena: number;\r\n    public rabat: number;\r\n    public kolicina: number;\r\n}\r\n\r\nexport class RobaPage extends Page {\r\n    content: Roba[] = null;\r\n}\r\n\r\nexport class Partner {\r\n    ppid?: number;\r\n    naziv?: string;\r\n    email?: string;\r\n    adresa?: string;\r\n    webKorisnik?: string;\r\n    noviPassword?: string;\r\n    stariPassword?: string;\r\n    stanje?: number;\r\n    stanjeporoku?: number;\r\n    webStatus?: number;\r\n    loginCount?: any;\r\n}\r\n\r\nexport class Fakutra {\r\n    id?: number;\r\n    orderId?: number;\r\n    vremePorucivanja?: string;\r\n    status?: ValueHelp;\r\n    nacinPlacanja?: ValueHelp;\r\n    nacinPrevoza?: ValueHelp;\r\n    adresa?: ValueHelp;\r\n    napomena?: string;\r\n    brojStavki?: number;\r\n    iznosNarucen?: number;\r\n    iznosPotvrdjen?: number;\r\n    detalji?: FakturaDetalji[];\r\n}\r\n\r\nexport class FakturaPage extends Page {\r\n    content: Fakutra[] = null;\r\n}\r\n\r\nexport class FakturaDetalji {\r\n    robaId?: number;\r\n    kataloskiBroj?: string;\r\n    proizvodjac?: Proizvodjac;\r\n    kolicina?: number;\r\n    potvrdjenaKolicina?: number;\r\n    cena?: number;\r\n    status?: ValueHelp;\r\n    rabat?: number;\r\n    vremePorucivanja?: string;\r\n}\r\n\r\nexport class Proizvodjac {\r\n    public proid: string;\r\n    public naziv: string;\r\n}\r\n\r\nexport declare class Credentials {\r\n    username?: string;\r\n    password?: boolean;\r\n}\r\n\r\nexport class Registracija {\r\n    // Pravno Lice\r\n    nazivFirme?: string;\r\n    pib?: string;\r\n    // Fizicko Lice\r\n    imeIPrezime?: string;\r\n    // zajednicki sadrzilac\r\n    grad?: string;\r\n    adresa?: string;\r\n    email?: string;\r\n    kontaktTelefon?: string;\r\n    daLiJePravnoLice?: boolean;\r\n}\r\n\r\nexport class ResetSifre {\r\n    email?: string;\r\n}\r\n\r\nexport class PromenaSifre {\r\n    ppid?: number;\r\n    staraSifra?: string;\r\n    sifra?: string;\r\n    ponovljenjaSifra?: string;\r\n}\r\n","export class Filter {\r\n    proizvodjacId?: string;\r\n    proizvodjac?: string;\r\n    raspolozivost?: string;\r\n    naStanju?: boolean;\r\n\r\n    Filter() {\r\n        this.proizvodjac = '';\r\n        this.raspolozivost = 'Svi artikli';\r\n    }\r\n}\r\n","export class Page {\r\n    last?: boolean = null;\r\n    totalPages?: number = null;\r\n    totalElements: number = null;\r\n    numberOfElements: number = null;\r\n    first ?: boolean = null;\r\n    sort?: string = null;\r\n    size?: number = null;\r\n    number?: number = null;\r\n}\r\n","import { Proizvodjac } from './dto';\r\n\r\nexport class Korpa {\r\n    public roba: RobaKorpa[] = [];\r\n    public ukupno: number;\r\n    public nacinPlacanja: number;\r\n    public nacinIsporuke: number;\r\n    public napomena: string;\r\n}\r\n\r\nexport class RobaKorpa {\r\n\r\n    public robaid: number;\r\n    public katbr: string;\r\n    public katbrpro: string;\r\n    public naziv: string;\r\n    public proizvodjac: Proizvodjac;\r\n    public kolicina: number;\r\n    public rabat: number;\r\n    public cenaKom: number;\r\n    public stanje: number;\r\n    public cenaUkupno: number;\r\n\r\n    constructor(robaid: number, katbr: string, katbrpro: string, naziv: string, proizvodjac: Proizvodjac,\r\n         kolicina: number, rabat: number, cena: number, stanje: number) {\r\n        this.robaid = robaid;\r\n        this.katbr = katbr;\r\n        this.katbrpro = katbrpro;\r\n        this.naziv = naziv;\r\n        this.proizvodjac = proizvodjac;\r\n        this.kolicina = kolicina;\r\n        this.rabat = rabat;\r\n        this.cenaKom = cena;\r\n        this.cenaUkupno = cena * kolicina;\r\n        this.stanje = stanje;\r\n    }\r\n}\r\n\r\nexport class RobaPromena {\r\n    katbr: string = null;\r\n    opis: string = null;\r\n    rapolozivaKolicina: number = null;\r\n    trazenaKolicina: number = null;\r\n}\r\n","export enum VrstaRobe {\r\n    SVE,\r\n    FILTERI,\r\n    AKUMULATORI,\r\n    ULJA,\r\n    OSTALO\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport {  timeoutWith, catchError } from 'rxjs/operators';\r\nimport { Korpa, RobaKorpa } from '../../model/porudzbenica';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { Roba } from '../../model/dto';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst DOMAIN_URL = environment.baseUrl + '/api/informacije/';\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  private korpa: Korpa = this.korpaStorage.vratiKorpuIzMemorije() || new Korpa();\r\n  private korpaSubjekat = new BehaviorSubject(this.korpa);\r\n  public trenutnaKorpa = this.korpaSubjekat.asObservable();\r\n\r\n  constructor(private korpaStorage: LocalStorageService, private http: HttpClient) { }\r\n\r\n  ubaciUKorpu(robaKorpa: RobaKorpa) {\r\n    if (this.korpa.roba.length === 0) {\r\n      this.korpa.roba.push(robaKorpa);\r\n    } else {\r\n      let daLiPostojiVecUKorpi = false;\r\n      this.korpa.roba.forEach(roba => {\r\n        if (roba.katbr === robaKorpa.katbr) {\r\n          roba.kolicina = roba.kolicina + robaKorpa.kolicina;\r\n          roba.cenaUkupno = roba.kolicina * robaKorpa.cenaKom;\r\n          daLiPostojiVecUKorpi = true;\r\n        }\r\n      });\r\n      if (daLiPostojiVecUKorpi === false) {\r\n        this.korpa.roba.push(robaKorpa);\r\n      }\r\n    }\r\n    this.korpaStorage.cuvajKorpuULokalnojMemoriji(robaKorpa);\r\n    this.korpaSubjekat.next(this.korpa);\r\n  }\r\n\r\n  public skiniSaStanjaUkolikoJeUKorpi(robaBaza: Roba[]) {\r\n    const korpa = this.korpaStorage.vratiKorpuIzMemorije();\r\n    if (korpa && robaBaza) {\r\n      korpa.roba.forEach((storage: RobaKorpa) => {\r\n        robaBaza.forEach((roba: Roba) => {\r\n          if (storage.katbr === roba.katbr) {\r\n            roba.stanje = roba.stanje - storage.kolicina;\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return robaBaza;\r\n  }\r\n  public izbaciIzKorpe(index: number) {\r\n    this.korpa.roba.splice(index, 1);\r\n    this.korpaStorage.izbaciIzMemorije(index);\r\n    this.korpaSubjekat.next(this.korpa);\r\n  }\r\n\r\n  public vratiOpsteInformacije(vrsta: string): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + vrsta;\r\n    return this.http\r\n    .get(fullUrl)\r\n    .pipe(\r\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n      catchError((error: any) => throwError(error))\r\n    );\r\n  }\r\n\r\n  public ocistiKorpu() {\r\n    this.korpa = new Korpa();\r\n    this.korpaSubjekat.next(this.korpa);\r\n    this.korpaStorage.ocistiKorpuIzMemorije();\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\r\nimport { Korpa, RobaKorpa } from '../../model/porudzbenica';\r\nimport { Partner } from '../../model/dto';\r\nimport * as _ from 'lodash';\r\n\r\nconst KORPA_KLJUC = 'korpa_roba';\r\nconst PARTNER_KLJUC = 'partner_kljuc';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) { }\r\n\r\n  public sacuvajPartneraUMemoriju(partner: Partner) {\r\n    const partnerCopy = _.cloneDeep(partner);\r\n    if (partnerCopy != null && partnerCopy.ppid != null) {\r\n      partnerCopy.loginCount = null;\r\n      this.storage.set(PARTNER_KLJUC, partnerCopy);\r\n    }\r\n  }\r\n\r\n  public logout() {\r\n    this.storage.remove(PARTNER_KLJUC);\r\n  }\r\n\r\n  public procitajPartneraIzMemorije(): Partner {\r\n    return this.storage.get(PARTNER_KLJUC);\r\n  }\r\n\r\n  public vratiKorpuIzMemorije(): Korpa {\r\n    return this.storage.get(KORPA_KLJUC);\r\n  }\r\n\r\n  public cuvajKorpuULokalnojMemoriji(robaKorpa: RobaKorpa) {\r\n    let trenutnaKorpa: Korpa;\r\n    if (this.storage.get(KORPA_KLJUC)) {\r\n      trenutnaKorpa = this.storage.get(KORPA_KLJUC);\r\n      this.ubaciRobuUMemoriju(trenutnaKorpa, robaKorpa);\r\n    } else {\r\n      trenutnaKorpa = new Korpa();\r\n      trenutnaKorpa.roba.push(robaKorpa);\r\n    }\r\n\r\n    this.storage.set(KORPA_KLJUC, trenutnaKorpa);\r\n  }\r\n\r\n  private ubaciRobuUMemoriju(trenutnaKorpa: Korpa, robaKorpa: RobaKorpa) {\r\n    let daLiPostojiVecUMemoriji = false;\r\n    trenutnaKorpa.roba.forEach(storage => {\r\n      if (storage.katbr === robaKorpa.katbr) {\r\n        storage.kolicina = storage.kolicina + robaKorpa.kolicina;\r\n        storage.cenaUkupno = storage.kolicina * robaKorpa.cenaKom;\r\n        daLiPostojiVecUMemoriji = true;\r\n      }\r\n    });\r\n    if (daLiPostojiVecUMemoriji === false) {\r\n      trenutnaKorpa.roba.push(robaKorpa);\r\n    }\r\n  }\r\n\r\n  public izbaciIzMemorije(index: number) {\r\n    const korpa = this.vratiKorpuIzMemorije();\r\n    korpa.roba.splice(index, 1);\r\n    this.storage.set(KORPA_KLJUC, korpa);\r\n  }\r\n\r\n  public zameniArtikalSaNovim(robaKorpa: RobaKorpa) {\r\n    const trenutnaKorpa: Korpa = this.storage.get(KORPA_KLJUC);\r\n    trenutnaKorpa.roba.forEach(storage => {\r\n      if (storage.katbr === robaKorpa.katbr) {\r\n        storage.kolicina = robaKorpa.kolicina;\r\n        storage.cenaUkupno = robaKorpa.cenaUkupno;\r\n      }\r\n    });\r\n    this.storage.set(KORPA_KLJUC, trenutnaKorpa);\r\n  }\r\n\r\n  public ocistiKorpuIzMemorije() {\r\n    this.storage.remove(KORPA_KLJUC);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { throwError, BehaviorSubject, Observable } from 'rxjs';\r\nimport { Credentials, Partner } from '../model/dto';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from './data/local-storage.service';\r\nimport { DataService } from './data/data.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { SesijaIsteklaModalComponent } from 'src/app/shared/modal/sesija-istekla-modal/sesija-istekla-modal.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PartnerService } from './partner.service';\r\nimport { PrvoLogovanjeModalComponent } from 'src/app/shared/modal/prvo-logovanje-modal/prvo-logovanje-modal.component';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\nconst LOGIN_URL = environment.baseUrl + '/login';\r\nconst LOGOUT_URL = environment.baseUrl + '/logout';\r\nconst PARTNER_URL = environment.baseUrl + '/api/partner';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  private partner: Partner = this.storageServis.procitajPartneraIzMemorije() || null;\r\n  private partnerSubjekat = new BehaviorSubject(this.partner);\r\n  public ulogovaniPartner = this.partnerSubjekat.asObservable();\r\n\r\n  private logovanjeSubjekat = new BehaviorSubject(this.partner !== null);\r\n  public daLiJePartnerUlogovan = this.logovanjeSubjekat.asObservable();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private utils: AppUtilsService,\r\n    private korpaServis: DataService,\r\n    private storageServis: LocalStorageService,\r\n    public dialog: MatDialog) { }\r\n\r\n  public ulogujSe(credentials: Credentials): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['username'] = credentials.username;\r\n    parameterObject['password'] = credentials.password;\r\n    parameterObject['submit'] = 'Login';\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n\r\n    const fullUrl = LOGIN_URL + parametersString;\r\n\r\n    return this.http.post(fullUrl, {}, { responseType: 'text' })\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public vratiUlogovanogKorisnika(daLiJePrviRequest: boolean): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['prviRequest'] = daLiJePrviRequest;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n\r\n    const fullUrl = PARTNER_URL + parametersString;\r\n\r\n    return this.http.get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error)));\r\n  }\r\n\r\n  public setDaLiJeUserLogovan(bool: boolean) {\r\n    this.logovanjeSubjekat.next(bool);\r\n  }\r\n\r\n  public setUlogovanogPartner(partner: Partner) {\r\n    this.partnerSubjekat.next(partner);\r\n    this.storageServis.sacuvajPartneraUMemoriju(partner);\r\n  }\r\n\r\n  public izbaciPartneraIzSesiseAkoJeUMemoriji() {\r\n    this.vratiUlogovanogKorisnika(false)\r\n      .subscribe((res: Partner) => {\r\n        const partner = res;\r\n        if (partner === null) {\r\n          this.router.navigate(['/login']);\r\n          const partnerStorage = this.storageServis.procitajPartneraIzMemorije();\r\n          if (partnerStorage !== null && partnerStorage.ppid) {\r\n            this.izbaciPartnerIzSesije();\r\n          }\r\n        } else if (partner.loginCount === 0) {\r\n          this.router.navigate(['/naslovna']);\r\n          this.dialog.open(PrvoLogovanjeModalComponent, {\r\n            width: '600px',\r\n            data: this.partner,\r\n            disableClose: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n  public izbaciPartnerIzSesije() {\r\n  this.storageServis.logout();\r\n  this.logovanjeSubjekat.next(false);\r\n  this.partnerSubjekat.next(null);\r\n  this.dialog.open(SesijaIsteklaModalComponent, {\r\n    width: '400px'\r\n  });\r\n}\r\n\r\n  public logout() {\r\n  const fullUrl = LOGOUT_URL;\r\n  this.http.post(fullUrl, {}, { responseType: 'text' })\r\n    .pipe(\r\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n      catchError((error: any) => throwError(error))\r\n    )\r\n    .subscribe(() => {\r\n      this.logovanjeSubjekat.next(false);\r\n      this.partnerSubjekat.next(null);\r\n      this.storageServis.logout();\r\n      this.router.navigateByUrl('naslovna');\r\n    });\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Partner, PromenaSifre } from '../model/dto';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst PARTNER_URL = environment.baseUrl + '/api/partner';\r\nconst RESETOVANJE_SIFRE_URL = '/promena-sifre';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PartnerService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private utils: AppUtilsService) { }\r\n\r\n  public promeniSifru(reset: PromenaSifre, isPrvaPromena: boolean): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['isPrvaPromena'] = isPrvaPromena;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = PARTNER_URL + RESETOVANJE_SIFRE_URL + parametersString;\r\n\r\n    return this.http\r\n      .put(fullUrl, reset)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst DOMAIN_URL = environment.baseUrl + '/api';\r\nconst ROBA_URL = '/proizvodjaci';\r\nconst FILTERI_URL = '/filteri';\r\nconst AKUMULATORI_URL = '/akumulatori';\r\nconst ULJA_URL = '/ulja';\r\nconst KATEGORIJA_URL = '/kategorija';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProizvodjacService {\r\n\r\n  constructor(private http: HttpClient, private utils: AppUtilsService) { }\r\n\r\n  public pronadjiSveProizvodjace(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceFiltera(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + FILTERI_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceKategorije(kategorija: string): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + KATEGORIJA_URL + '/' + kategorija.toUpperCase();\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceAkumulatora(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + AKUMULATORI_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceUljaPoVrsti(vrstaUlja): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + ULJA_URL + this.utils.vratiPutDoResursaZaUlje(vrstaUlja);\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Roba, Proizvodjac } from '../model/dto';\r\nimport { RobaKorpa, Korpa } from '../model/porudzbenica';\r\nimport { DataService } from '../service/data/data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppUtilsService {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  public vratiIdProizvodjacaAkoPostoji(izabraniProizvodjac: string, proizvodjaci: Proizvodjac[]): string {\r\n    let proId = null;\r\n    if (izabraniProizvodjac && izabraniProizvodjac === 'SVI') {\r\n      proId = null;\r\n    } else {\r\n      proizvodjaci.forEach(pr => {\r\n        if (pr.naziv === izabraniProizvodjac) {\r\n          proId = pr.proid;\r\n        }\r\n      });\r\n    }\r\n    return proId;\r\n  }\r\n\r\n  public daLiRobaTrebaDaBudeNaStanju(raspolozivost: string[], izabranaRaspolozivost: string): boolean {\r\n    if (raspolozivost && izabranaRaspolozivost === raspolozivost[1]) {\r\n      return null;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public dodajUKorpu(roba: Roba): string {\r\n    let snackBarPoruka = 'Artikal je ubacen u korpu.';\r\n    if (roba.kolicina == null || roba.kolicina <= 0) {\r\n      roba.kolicina = 1;\r\n    }\r\n    if (roba.stanje < roba.kolicina) {\r\n      snackBarPoruka = 'Maksimalan kolicina ' + roba.stanje + '. ' + snackBarPoruka;\r\n      roba.kolicina = roba.stanje;\r\n    }\r\n    const robaKorpa =\r\n      new RobaKorpa(roba.robaid, roba.katbr, roba.katbrpro, roba.naziv, roba.proizvodjac,\r\n        roba.kolicina, roba.rabat, roba.cena, roba.stanje);\r\n    this.dataService.ubaciUKorpu(robaKorpa);\r\n    return snackBarPoruka;\r\n  }\r\n\r\n  public izbrisiRobuSaStanja(roba: Roba[], robaUKorpi: Roba) {\r\n    roba.forEach(robaBaza => {\r\n      if (robaBaza.katbr === robaUKorpi.katbr) {\r\n        robaBaza.stanje = robaBaza.stanje - robaUKorpi.kolicina;\r\n      }\r\n    });\r\n  }\r\n\r\n  public daLiJeRobaUKorpi(korpa: Korpa, katBr: string) {\r\n    let uKorpi = false;\r\n    korpa.roba.forEach(r => {\r\n      if (r.katbr === katBr) {\r\n        uKorpi = true;\r\n      }\r\n    });\r\n    return uKorpi;\r\n  }\r\n\r\n  public vratiKveriParametre(map) {\r\n\r\n    let parameterString = '';\r\n\r\n    Object.keys(map).forEach(function (elem, index) {\r\n      const value = map[elem];\r\n      if (value != null || value === 0) {\r\n        if (parameterString) {\r\n          parameterString += '&';\r\n        }\r\n\r\n        parameterString += elem + '=' + value;\r\n      }\r\n    });\r\n\r\n    if (parameterString) {\r\n      parameterString = '?' + parameterString;\r\n    }\r\n    return parameterString;\r\n  }\r\n\r\n  public vratiPutDoResursaZaUlje(vrstaUlja): string {\r\n    let url = '/motorna';\r\n    if (vrstaUlja === 'motorna') {\r\n      url = '/motorna';\r\n    } else if (vrstaUlja === 'menjacka') {\r\n      url = '/menjacka';\r\n    } else if (vrstaUlja === 'kociona') {\r\n      url = '/kociona';\r\n    } else if (vrstaUlja === 'antifriz') {\r\n      url = '/antifriz';\r\n    } else if (vrstaUlja === 'hidraulicna') {\r\n      url = '/hidraulicna';\r\n    } else if (vrstaUlja === 'kompresorska') {\r\n      url = '/kompresorska';\r\n    } else if (vrstaUlja === 'redutktorska') {\r\n      url = '/redutktorska';\r\n    } else if (vrstaUlja === 'transformatorska') {\r\n      url = '/transformatorska';\r\n    } else if (vrstaUlja === 'turbinska') {\r\n      url = '/turbinska';\r\n    } else if (vrstaUlja === 'pneumatska') {\r\n      url = '/pneumatska';\r\n    } else if (vrstaUlja === 'klizna') {\r\n      url = '/klizna';\r\n    } else if (vrstaUlja === 'prenosna') {\r\n      url = '/prenosna';\r\n    }\r\n    return url;\r\n  }\r\n}\r\n","module.exports = \"<footer>\\r\\n  <div class=\\\"granica\\\"></div>\\r\\n  <div class=\\\"d-flex flex-lg-row flex-column\\\">\\r\\n    <div class=\\\"slika-div\\\">\\r\\n      <img [src]=\\\"img_logo\\\" alt=\\\"Automaterijal\\\">\\r\\n    </div>\\r\\n    <div class=\\\"flex-fill\\\">\\r\\n      <ul>\\r\\n        <li class=\\\"naslov\\\">Adresa</li>\\r\\n        <li class=\\\"detalji\\\">Prvomajska 61</li>\\r\\n        <li class=\\\"detalji\\\">15000 Šabac</li>\\r\\n        <li class=\\\"detalji\\\"><a class=\\\"header\\\" href=\\\"tel:015334630\\\">015/334-630</a></li>\\r\\n        <li class=\\\"detalji\\\">office@automaterijal.com</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"flex-fill\\\">\\r\\n      <ul>\\r\\n        <li class=\\\"naslov\\\">Korisni Linkovi</li>\\r\\n        <li class=\\\"detalji\\\">\\r\\n          <a [routerLink]=\\\"['/naslovna']\\\">Naslovna</a>\\r\\n        </li>\\r\\n        <li class=\\\"detalji\\\">\\r\\n          <a [routerLink]=\\\"['/o-nama']\\\">O nama</a>\\r\\n        </li>\\r\\n        <li class=\\\"detalji\\\">\\r\\n          <a [routerLink]=\\\"['/kontakt']\\\">Kontakt</a>\\r\\n        </li>\\r\\n        <li class=\\\"detalji\\\">\\r\\n          <a [routerLink]=\\\"['/roba']\\\">E-prodavnica</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"flex-fill\\\">\\r\\n      <ul>\\r\\n        <li class=\\\"naslov\\\">Korisni Upiti</li>\\r\\n        <li class=\\\"detalji\\\">\\r\\n          <a (click)=\\\"otvoriUpitDialog()\\\">Upit za ponudu</a>\\r\\n        </li>\\r\\n        <li class=\\\"detalji\\\">\\r\\n          <a (click)=\\\"otvoriPorukuDialog()\\\">Poruka</a>\\r\\n        </li>\\r\\n        <li class=\\\"detalji\\\">\\r\\n          <a (click)=\\\"otvoriResgracijaDialog()\\\">Registracija</a>\\r\\n        </li>\\r\\n        <li class=\\\"detalji\\\">\\r\\n          <a (click)=\\\"otvoriZaboravljenuSifruDialog()\\\">Zaboravljen šifra</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</footer>\"","module.exports = \"footer {\\n  padding: 2% 8%;\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  left: 0; }\\n\\n.granica {\\n  margin-bottom: 2rem;\\n  width: 100%;\\n  border-top: 1px solid #dfe5e7; }\\n\\n.naslov {\\n  font-size: 1.1em;\\n  font-weight: bold;\\n  margin-bottom: 0.5em; }\\n\\n.detalji {\\n  font-size: 1em;\\n  margin-left: 0.2em;\\n  color: #435d69; }\\n\\nul {\\n  list-style-type: none; }\\n\\na {\\n  color: #435d69;\\n  cursor: pointer; }\\n\\nimg {\\n  margin-right: 3em;\\n  padding: 0px;\\n  margin-top: 3%;\\n  width: 250px;\\n  height: 90px;\\n  display: block; }\\n\\n.slika-div {\\n  width: 25%;\\n  padding: 0px;\\n  margin: 0px; }\\n\\na:hover {\\n  color: #345cac !important;\\n  text-decoration: none; }\\n\\n@media screen and (max-width: 990px) {\\n  ul {\\n    text-align: center;\\n    margin: 0px;\\n    margin-top: 5px;\\n    padding: 0px; }\\n  .slika-div {\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 100%; }\\n  img {\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 250px;\\n    height: 90px; }\\n  .detalji {\\n    margin-left: 0em; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { RegistracijaModalComponent } from '../shared/modal/registracija-modal/registracija-modal.component';\nimport { ZaboravljenaSifraModalComponent } from '../shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component';\nimport { PorukaModalComponent } from '../shared/modal/poruka-modal/poruka-modal.component';\nimport { UpitModalComponent } from '../shared/modal/upit-modal/upit-modal.component';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  public img_logo = environment.baseUrl + '/assets/slike/logo/automaterijal.png';\n  constructor(\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n  }\n\n  otvoriPorukuDialog() {\n    this.dialog.open(PorukaModalComponent, {\n      width: '400px'\n    });\n  }\n\n  otvoriResgracijaDialog() {\n    this.dialog.open(RegistracijaModalComponent, {\n      width: '400px'\n    });\n  }\n  otvoriZaboravljenuSifruDialog() {\n    this.dialog.open(ZaboravljenaSifraModalComponent, {\n      width: '400px'\n    });\n  }\n\n  otvoriUpitDialog() {\n    this.dialog.open(UpitModalComponent, {\n      width: '400px'\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FooterComponent } from './footer.component';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MaterialModule\n  ],\n  declarations: [FooterComponent],\n  exports: [FooterComponent]\n})\nexport class FooterModule { }\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container pozadina-siva-400\\\">\\r\\n  <mat-sidenav #drawer class=\\\"sidenav pozadina-glavna-50\\\" fixedInViewport=\\\"true\\\" [mode]=\\\"openSideNav ? 'over' : 'side'\\\"\\r\\n    [opened]=\\\"!openSideNav\\\">\\r\\n    <mat-toolbar *ngIf=\\\"partnerUlogovan\\\" class=\\\"side-toolbar pozadina-glavna-50 header-glavni\\\">\\r\\n      <div class=\\\"d-flex flex-column justify-content-center\\\">\\r\\n        <div class=\\\"d-flex justify-content-center header-sirina\\\">\\r\\n          <mat-icon class=\\\"boja-siva-300\\\">person</mat-icon>\\r\\n        </div>\\r\\n        <div>\\r\\n          <p class=\\\"text-center header-navigacija\\\">{{partner.naziv}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-toolbar>\\r\\n    <mat-nav-list [class.margin-gore]=\\\"partnerUlogovan\\\">\\r\\n      <mat-divider *ngIf=\\\"partnerUlogovan\\\" class=\\\"pozadina-siva-300\\\"></mat-divider>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['naslovna']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>home</mat-icon>\\r\\n        <p mat-line>Naslovna</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['o-nama']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>book</mat-icon>\\r\\n        <p mat-line>O nama</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['kontakt']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>contact_phone</mat-icon>\\r\\n        <p mat-line>Kontakt</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list>\\r\\n      <h3 class=\\\"pozadina-glavna-50 boja-siva-300\\\" mat-subheader>Internet prodavnica</h3>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" *ngIf=\\\"partnerUlogovan\\\" [routerLink]=\\\"['korpa']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon matBadgeColor=\\\"warn\\\" class=\\\"boja-siva-300\\\" matBadge=\\\"{{korpaBadge}}\\\" mat-list-icon>shopping_cart\\r\\n        </mat-icon>\\r\\n        <p mat-line>Korpa</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['roba']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>searche</mat-icon>\\r\\n        <p mat-line>Pretraga</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['ulja']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>invert_colors</mat-icon>\\r\\n        <p mat-line>Ulja</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['filteri']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>layers</mat-icon>\\r\\n        <p mat-line>Filteri</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['akumulatori']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>battery_charging_full</mat-icon>\\r\\n        <p mat-line>Akumulatori</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['ostalo']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>category</mat-icon>\\r\\n        <p mat-line>Ostalo</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list *ngIf=\\\"partnerUlogovan\\\">\\r\\n      <h3 class=\\\"pozadina-glavna-50 boja-siva-300\\\" mat-subheader>Moj Profil</h3>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['licni-podaci']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>person</mat-icon>\\r\\n        <p mat-line>Licni Podaci</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['porudzbenice']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>list</mat-icon>\\r\\n        <p mat-line>Porudzbine</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list>\\r\\n      <mat-list-item *ngIf=\\\"partnerUlogovan === false\\\" class=\\\"material-icons\\\" [routerLink]=\\\"['login']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>exit_to_app</mat-icon>\\r\\n        <p mat-line>Login</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item *ngIf=\\\"partnerUlogovan\\\" class=\\\"material-icons\\\" (click)=\\\"otvoriDialog()\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>power_settings_new</mat-icon>\\r\\n        <p mat-line>Logout</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar *ngIf=\\\"openSideNav\\\" class=\\\"header-pozicija pozadina-glavna-50\\\">\\r\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n    </mat-toolbar>\\r\\n    <div class=\\\"pozicija\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n    <app-footer></app-footer>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.pozicija {\\n  margin: 0 auto;\\n  padding-bottom: 220px; }\\n\\n.sidenav {\\n  width: 200px;\\n  height: 100%; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0; }\\n\\n.header-navigacija {\\n  font-size: 0.6em !important;\\n  width: 200pxpx; }\\n\\n.header-sirina {\\n  width: 200px !important; }\\n\\np {\\n  color: #f6f6f6 !important;\\n  height: 18px; }\\n\\nmat-divider {\\n  border-width: 1px;\\n  border-style: solid;\\n  border-color: #dfe5e7; }\\n\\n.margin-gore {\\n  margin-top: 70px; }\\n\\n.side-toolbar {\\n  height: 75px;\\n  width: 200px;\\n  padding: 0px 0px !important; }\\n\\n.header-pozicija {\\n  top: 0px;\\n  position: fixed;\\n  z-index: 999 !important; }\\n\\n.header-glavni {\\n  top: 0px;\\n  position: absolute;\\n  z-index: 999 !important; }\\n\\n@media screen and (max-width: 1000px) {\\n  .pozicija {\\n    padding-bottom: 490px; } }\\n\\n@media screen and (max-width: 950px) {\\n  .pozicija {\\n    margin-top: 66px;\\n    padding-bottom: 490px; } }\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Partner } from '../e-shop/model/dto';\nimport { LoginService } from '../e-shop/service/login.service';\nimport { DataService } from '../e-shop/service/data/data.service';\nimport { LogoutModalComponent } from '../shared/modal/logout-modal/logout-modal.component';\n@Component({\n  selector: 'app-navigacija',\n  templateUrl: './navigacija.component.html',\n  styleUrls: ['./navigacija.component.scss']\n})\nexport class NavigacijaComponent implements OnInit {\n\n  public korpaBadge = 0;\n  public partner: Partner;\n  public partnerUlogovan = false;\n  public openSideNav = false;\n\n  constructor(\n    private korpaServis: DataService,\n    private loginServis: LoginService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.openSideNav = window.innerWidth < 950;\n    this.korpaServis.trenutnaKorpa.subscribe(korpa => this.korpaBadge = korpa.roba.length);\n    this.loginServis.daLiJePartnerUlogovan.subscribe(bool => this.partnerUlogovan = bool);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.openSideNav = window.innerWidth < 950;\n  }\n\n  otvoriDialog(): void {\n    const dialogRef = this.dialog.open(LogoutModalComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(() => {\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavigacijaComponent } from './navigacija.component';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { FooterModule } from '../footer/footer.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FooterModule,\n    MaterialModule\n  ],\n  declarations: [NavigacijaComponent],\n  exports: [NavigacijaComponent]\n})\nexport class NavigacijaModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatButtonModule, MatCheckboxModule, MatTableModule, MatTabsModule,\n  MatToolbarModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule,\n   MatCardModule, MatMenuModule, MatPaginatorModule, MatSortModule, MatExpansionModule,\n    MatFormFieldModule,\n    MatChipsModule, MatSelectModule, MatAutocompleteModule, MatTooltipModule,\n    MatRadioModule, MatSnackBarModule, MatBadgeModule,\n    MatDialogModule, MatProgressSpinnerModule, MatInputModule, MatStepperModule} from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatChipsModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTabsModule,\n    CommonModule,\n    FormsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    MatInputModule,\n    MatDialogModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTabsModule,\n    CommonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \"<div class=\\\"header\\\">\\r\\n    <h1>{{brend.ime}}</h1>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<mat-dialog-content>\\r\\n    <img [src]=\\\"brend.urlSlikePozadina\\\" />\\r\\n    <div [innerHTML]=\\\"brend.opis\\\"></div>\\r\\n</mat-dialog-content>\"","module.exports = \"h1 {\\n  color: #345cac;\\n  text-align: center;\\n  display: inline; }\\n\\np {\\n  margin-top: 20px; }\\n\\n.header {\\n  height: 3em;\\n  text-align: center; }\\n\\n.mat-dialog-content {\\n  max-height: 75vh; }\\n\\n/* :host /deep/ mySelector { */\\n\\n:host ::ng-deep p {\\n  margin-top: 20px; }\\n\\nimg {\\n  width: 100%;\\n  height: 100%; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Brend } from 'src/app/e-commerce/model/dto';\n\n@Component({\n  selector: 'app-brendovi-modal',\n  templateUrl: './brendovi-modal.component.html',\n  styleUrls: ['./brendovi-modal.component.scss']\n})\nexport class BrendoviModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<BrendoviModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public brend: Brend) { }\n\n  ngOnInit() {\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main>\\r\\n    <div class=\\\"header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"bezIzmena()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"pozadina-glavna-50 boja-siva-400\\\">\\r\\n      <h1>Artikal broj: {{data.katbr}}</h1>\\r\\n    </div>\\r\\n    <table class=\\\"table\\\">\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td>Proizvodjač</td>\\r\\n          <td>{{data.proizvodjac.naziv}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Cena</td>\\r\\n          <td>{{data.cenaKom | currency:\\\" \\\"}} RSD</td>\\r\\n        <tr>\\r\\n          <td>Kolicina</td>\\r\\n          <td>\\r\\n            <select class=\\\"custom-select custom-select-md\\\" [(ngModel)]=\\\"data.kolicina\\\">\\r\\n              <option *ngFor=\\\"let kolicina of stanje\\\" [value]=\\\"kolicina\\\">{{kolicina}}</option>\\r\\n            </select>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Ukupno za placanje</td>\\r\\n          <td><b>{{data.kolicina * data.cenaKom | currency:\\\" \\\"}} RSD</b></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\r\\n      <button class=\\\"button-glavni-100\\\" mat-raised-button (click)=\\\"sacuvajIzmene()\\\">Sacuvaj</button>\\r\\n      <span class=\\\"col-2\\\"></span>\\r\\n      <button class=\\\"button-crveni-50\\\" mat-raised-button (click)=\\\"bezIzmena()\\\">Poništi</button>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"p {\\n  text-align: center; }\\n\\nh1 {\\n  text-align: center;\\n  font-size: 1.2em;\\n  color: white;\\n  padding: 10px; }\\n\\ntd {\\n  font-size: 1em; }\\n\\n.header {\\n  height: 2em; }\\n\\n.pomeri {\\n  margin-left: 10px; }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport * as _ from 'lodash';\r\nimport { RobaKorpa } from 'src/app/e-shop/model/porudzbenica';\r\n\r\n@Component({\r\n  selector: 'app-izmena-kolicine-modal',\r\n  templateUrl: './izmena-kolicine-modal.component.html',\r\n  styleUrls: ['./izmena-kolicine-modal.component.scss']\r\n})\r\nexport class IzmenaKolicineModalComponent implements OnInit {\r\n\r\n  public stanje = [];\r\n  public data: RobaKorpa;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<IzmenaKolicineModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public roba: RobaKorpa) {}\r\n\r\n  ngOnInit() {\r\n    this.data = _.clone(this.roba);\r\n    this.popuniSelectStanja();\r\n  }\r\n\r\n  popuniSelectStanja() {\r\n    let index = 1;\r\n    while (index <= this.data.stanje) {\r\n      this.stanje[index - 1] = index;\r\n      index++;\r\n    }\r\n  }\r\n\r\n  sacuvajIzmene() {\r\n    this.data.kolicina = _.toNumber(this.data.kolicina);\r\n    this.data.cenaUkupno = this.data.kolicina * this.data.cenaKom;\r\n    this.dialogRef.close(this.data);\r\n  }\r\n\r\n  bezIzmena() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main>\\r\\n    <div class=\\\"header\\\">\\r\\n      <p>Da li ste sigurni da želite da se odjavite?</p>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"ostaniUlogovan()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex flex-row justify-content-center margin-top--15\\\">\\r\\n      <button mat-raised-button class=\\\"button-glavni-100\\\" (click)=\\\"logout()\\\">Odjava</button>\\r\\n      <span class=\\\"col-2\\\"></span>\\r\\n      <button mat-raised-button class=\\\"button-crveni-50\\\" (click)=\\\"ostaniUlogovan()\\\">Poništi</button>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"p {\\n  text-align: center;\\n  display: inline; }\\n\\n.header {\\n  height: 2em; }\\n\\nh1 {\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/e-shop/service/login.service';\n\n@Component({\n  selector: 'app-logout-modal',\n  templateUrl: './logout-modal.component.html',\n  styleUrls: ['./logout-modal.component.scss']\n})\nexport class LogoutModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<LogoutModalComponent>,\n    private router: Router,\n    private loginServis: LoginService) {}\n\n  ngOnInit() {\n    this.loginServis.vratiUlogovanogKorisnika(false).subscribe(partner => {\n      if (partner === null) {\n        this.dialogRef.close();\n        this.router.navigateByUrl('naslovna');\n        this.loginServis.izbaciPartnerIzSesije();\n      }\n    });\n  }\n\n  logout() {\n    this.loginServis.logout();\n    this.router.navigateByUrl('naslovna');\n    this.dialogRef.close();\n  }\n\n  ostaniUlogovan() {\n    this.dialogRef.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZaboravljenaSifraModalComponent } from './zaboravljena-sifra-modal/zaboravljena-sifra-modal.component';\nimport { RegistracijaModalComponent } from './registracija-modal/registracija-modal.component';\nimport { IzmenaKolicineModalComponent } from './izmena-kolicine-modal/izmena-kolicine-modal.component';\nimport { LogoutModalComponent } from './logout-modal/logout-modal.component';\nimport { UspesnoPorucivanjeModalComponent } from './uspesno-porucivanje-modal/uspesno-porucivanje-modal.component';\nimport { NeuspesnoPorucivanjeModalComponent } from './neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component';\nimport { PorukaModalComponent } from './poruka-modal/poruka-modal.component';\nimport { BrendoviModalComponent } from './brendovi-modal/brendovi-modal.component';\nimport { UpitModalComponent } from './upit-modal/upit-modal.component';\nimport { SesijaIsteklaModalComponent } from './sesija-istekla-modal/sesija-istekla-modal.component';\nimport { PrvoLogovanjeModalComponent } from './prvo-logovanje-modal/prvo-logovanje-modal.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { SharedMagacinModule } from 'src/app/e-shop/magacin/shared-components/shared-magacin.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MaterialModule,\n    SharedMagacinModule,\n  ],\n  declarations: [\n    ZaboravljenaSifraModalComponent,\n    RegistracijaModalComponent,\n    IzmenaKolicineModalComponent,\n    LogoutModalComponent,\n    UspesnoPorucivanjeModalComponent,\n    NeuspesnoPorucivanjeModalComponent,\n    PorukaModalComponent,\n    BrendoviModalComponent,\n    UpitModalComponent,\n    SesijaIsteklaModalComponent,\n    PrvoLogovanjeModalComponent],\n  entryComponents: [\n    ZaboravljenaSifraModalComponent,\n    RegistracijaModalComponent,\n    IzmenaKolicineModalComponent,\n    LogoutModalComponent,\n    UspesnoPorucivanjeModalComponent,\n    NeuspesnoPorucivanjeModalComponent,\n    PorukaModalComponent,\n    BrendoviModalComponent,\n    UpitModalComponent,\n    SesijaIsteklaModalComponent,\n    PrvoLogovanjeModalComponent]\n  })\nexport class ModalModule { }\n","module.exports = \"<div class=\\\"header\\\">\\r\\n  <h3>Obaveštenje</h3>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<p>Došlo je do promene količina traženih artikala.</p>\\r\\n<mat-dialog-content>\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"katBr\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Kat. br. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\"> {{roba.katbr}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"trazeno\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Traženo </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\"> {{roba.trazenaKolicina}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"raspolozivo\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Raspoloživo </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p class=\\\"boja-crvena-50\\\">{{roba.rapolozivaKolicina}}</p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <div class=\\\"text-center pomeri-dole\\\">\\r\\n    <button mat-raised-button (click)=\\\"zatvoriDialog()\\\" class=\\\"button-glavni-100\\\">Zatvori</button>\\r\\n  </div>\\r\\n</mat-dialog-content>\"","module.exports = \"th {\\n  text-align: center; }\\n\\ntd {\\n  text-align: center; }\\n\\n.pomeri-dole {\\n  margin-top: 20px; }\\n\\nh3 {\\n  color: #273747;\\n  text-align: center;\\n  display: inline; }\\n\\n.header {\\n  height: 3em;\\n  text-align: center; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Roba, Fakutra, FakturaDetalji } from 'src/app/e-shop/model/dto';\nimport { RobaPromena } from 'src/app/e-shop/model/porudzbenica';\n\n@Component({\n  selector: 'app-neuspesno-porucivanje-modal',\n  templateUrl: './neuspesno-porucivanje-modal.component.html',\n  styleUrls: ['./neuspesno-porucivanje-modal.component.scss']\n})\nexport class NeuspesnoPorucivanjeModalComponent implements OnInit {\n  public fakturaModal: Fakutra;\n  public robaModal: Roba[];\n  public robaPromena: RobaPromena[] = [];\n  \n  displayedColumns: string[] = ['katBr', 'trazeno', 'raspolozivo'];\n  dataSource = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<NeuspesnoPorucivanjeModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data) {}\n\n  ngOnInit() {\n    this.fakturaModal = this.data.faktura;\n    this.robaModal = this.data.roba;\n    this.popuniPromene();\n  }\n\n  popuniPromene() {\n    this.robaModal.forEach((roba: Roba) => {\n      this.fakturaModal.detalji.forEach((detalji: FakturaDetalji) => {\n        if (detalji.robaId === roba.robaid) {\n          const robaPromena = new RobaPromena();\n          robaPromena.katbr = roba.katbr;\n          robaPromena.opis = roba.naziv;\n          robaPromena.rapolozivaKolicina = roba.stanje;\n          robaPromena.trazenaKolicina = detalji.kolicina;\n          this.robaPromena.push(robaPromena);\n        }\n      });\n    });\n    this.dataSource = this.robaPromena;\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<mat-dialog-content>\\r\\n  <section *ngIf=\\\"!porukaPoslata && !ucitavanje\\\">\\r\\n    <div class=\\\"header\\\">\\r\\n      <h1>Pošalji poruku</h1>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <form role=\\\"form\\\" [formGroup]=\\\"porukaForm\\\">\\r\\n      <div class=\\\"forma-poruke\\\">\\r\\n        <table cellspacing=\\\"0\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput formControlName=\\\"ime\\\" placeholder=\\\"Ime\\\">\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput formControlName=\\\"prezime\\\" placeholder=\\\"Prezime\\\">\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <table cellspacing=\\\"0\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput formControlName=\\\"firma\\\" placeholder=\\\"Ima firme\\\">\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput type=\\\"tel\\\" formControlName=\\\"telefon\\\" placeholder=\\\"Broj telefona\\\">\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <div>\\r\\n          <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n            <input matInput type=\\\"email\\\" formControlName=\\\"posta\\\" placeholder=\\\"Pošta\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"porukaSubmited && p.posta.errors\\\">\\r\\n            <div *ngIf=\\\"p.posta.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Pošta je obavezna</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"p.posta.errors.email\\\">\\r\\n              <p class=\\\"upozorenje\\\">Pošta nije validna</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n            <textarea matInput formControlName=\\\"poruka\\\" rows=\\\"6\\\" placeholder=\\\"Poruka\\\"></textarea>\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"porukaSubmited && p.poruka.errors\\\">\\r\\n            <div *ngIf=\\\"p.poruka.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Poruka je obavezna</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"p.poruka.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Poruka mora imate minimalno 3 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <button mat-flat-button class=\\\"sirina-polja-unosa\\\" (click)=\\\"posaljiPoruku()\\\" color=\\\"primary\\\">Pošalji</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </section>\\r\\n  <section *ngIf=\\\"porukaPoslata\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    <p>Poruka je uspešno poslata. Odgovrićemo vam u najkraćem mogućem roku.</p>\\r\\n    <div class=\\\"text-center margin-top--15\\\">\\r\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"zatvoriDialog()\\\">Zatvori</button>\\r\\n    </div>\\r\\n  </section>\\r\\n</mat-dialog-content>\\r\\n<section *ngIf=\\\"ucitavanje\\\">\\r\\n  <div class=\\\"d-flex justify-content-center margin-bottom--10 margin-top--10\\\">\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </div>\\r\\n</section>\"","module.exports = \"h1 {\\n  display: inline;\\n  font-size: 1.5em;\\n  color: #345cac; }\\n\\n.sirina-polja-unosa {\\n  width: 350px !important; }\\n\\n.header {\\n  height: 3em;\\n  padding: 3%;\\n  text-align: center; }\\n\\n@media only screen and (max-device-width: 1025px) {\\n  .sirina-polja-unosa {\\n    width: 250px !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Poruka } from 'src/app/e-commerce/model/dto';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { EmailService } from 'src/app/shared/service/email.service';\nimport { MatDialogRef } from '@angular/material';\nimport { NotifikacijaService } from '../../service/notifikacija.service';\nimport { MatSnackBarKlase } from '../../model/konstante';\n\n@Component({\n  selector: 'app-poruka-modal',\n  templateUrl: './poruka-modal.component.html',\n  styleUrls: ['./poruka-modal.component.scss']\n})\nexport class PorukaModalComponent implements OnInit {\n  public porukaForm: FormGroup;\n  public porukaSubmited = false;\n  public porukaPoslata = false;\n\n  private alive = true;\n  public ucitavanje = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<PorukaModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailServis: EmailService,\n    private notifikacijaServis: NotifikacijaService\n  ) { }\n\n  ngOnInit() {\n    this.inicijalizujForme();\n  }\n\n  inicijalizujForme() {\n    this.porukaForm = this.formBuilder.group({\n      ime: [''],\n      prezime: [''],\n      firma: [''],\n      telefon: [''],\n      posta: ['', [Validators.required, Validators.email]],\n      poruka: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n  posaljiPoruku() {\n    this.porukaSubmited = true;\n    if (this.porukaForm.invalid) {\n      return;\n    }\n    const poruka = this.popuniPoruku();\n    this.ucitavanje = true;\n    this.emailServis.posaljiPoruku(poruka)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => throwError(error)),\n        finalize(() => this.ucitavanje = false)\n      ).subscribe(res => {\n        this.porukaPoslata = true;\n        this.porukaForm.reset();\n        this.porukaSubmited = false;\n        this.notifikacijaServis.notify('Poruka je uspešno poslata', MatSnackBarKlase.Zelena);\n      }, error => {\n        this.notifikacijaServis.notify('Došlo je do greške, poruka nije poslata', MatSnackBarKlase.Crvena);\n        this.dialogRef.close();\n      });\n  }\n\n  popuniPoruku(): Poruka {\n    const poruka = new Poruka();\n    poruka.ime = this.p.ime.value;\n    poruka.prezime = this.p.prezime.value;\n    poruka.firma = this.p.firma.value;\n    poruka.telefon = this.p.telefon.value;\n    poruka.posta = this.p.posta.value;\n    poruka.poruka = this.p.poruka.value;\n    return poruka;\n  }\n  // convenience getter for easy access to form fields\n  get p() { return this.porukaForm.controls; }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<section>\\r\\n    <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\r\\n        <mat-step>\\r\\n          <form >\\r\\n            <ng-template matStepLabel>Obaveštenje</ng-template>\\r\\n            <div>\\r\\n              <h1>Poštovani</h1>\\r\\n              <p>Dobrodošli u internet prodavnicu Automaterijala.</p>\\r\\n              <p class=\\\"margin-top--10\\\">Da bi Vaš nalog bio kompletno fukncionalan neophodno je da promenite vašu šifru. \\r\\n                Klikom na dugme dalje, prelazite na sledeći korak gde možete da ukucate vašu novu šifru.</p>\\r\\n            </div>\\r\\n            <div class=\\\"margin-top--15\\\">\\r\\n              <button mat-flat-button color=\\\"primary\\\" matStepperNext>Dalje</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"promenaSifreForm\\\">\\r\\n          <form [formGroup]=\\\"promenaSifreForm\\\" role=\\\"form\\\">\\r\\n            <ng-template matStepLabel>Promena</ng-template>\\r\\n            <h1>Promena šifre</h1>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"password\\\" #pass1 formControlName=\\\"pass1\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Nova šifra\\\" id=\\\"pass1\\\"\\r\\n                  name=\\\"pass1\\\" />\\r\\n                <div *ngIf=\\\"submitted && r.pass1.errors\\\">\\r\\n                  <div *ngIf=\\\"r.pass1.errors.required\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"r.pass1.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"password\\\" #pass2 formControlName=\\\"pass2\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Ponovite šifru\\\"\\r\\n                  id=\\\"password\\\" name=\\\"password\\\" />\\r\\n                <div *ngIf=\\\"submitted && r.pass2.errors\\\">\\r\\n                  <div *ngIf=\\\"r.pass2.errors.required\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"r.pass2.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"submitted && !r.pass2.errors && pass1.value != pass2.value\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Šifre nisu iste</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            <div>\\r\\n              <button mat-flat-button color=\\\"warm\\\" matStepperPrevious>Back</button>\\r\\n              <button mat-flat-button color=\\\"primary\\\" (click)=\\\"promeniSifru()\\\" matStepperNext>Next</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-step>\\r\\n        <mat-step>\\r\\n          <ng-template matStepLabel>Konačno</ng-template>\\r\\n          <div>\\r\\n              <h1>Čestitamo</h1>\\r\\n              <p>Šifra je uspešno promenjena. Vaš nalog je podešen i aktiviran.</p>\\r\\n            </div>\\r\\n          <div class=\\\"d-flex justify-content-center margin-top--15\\\">\\r\\n            <button mat-flat-button color=\\\"primary\\\" (click)=\\\"zatvoriDialog()\\\" matStepperNext>Zatvori</button>\\r\\n          </div>\\r\\n        </mat-step>\\r\\n      </mat-horizontal-stepper>\\r\\n</section>\\r\\n\"","module.exports = \"h1 {\\n  font-size: 1.4em;\\n  text-align: center;\\n  color: #345cac; }\\n\\n.upozorenje {\\n  text-align: left;\\n  font-size: 0.8em;\\n  color: red;\\n  margin-top: 2px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { PartnerService } from 'src/app/e-shop/service/partner.service';\nimport { PromenaSifre, Partner } from 'src/app/e-shop/model/dto';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\n\n@Component({\n  selector: 'app-prvo-logovanje-modal',\n  templateUrl: './prvo-logovanje-modal.component.html',\n  styleUrls: ['./prvo-logovanje-modal.component.scss']\n})\nexport class PrvoLogovanjeModalComponent implements OnInit {\n\n  public promenaSifreForm: FormGroup;\n  public submitted = false;\n  public partner: Partner;\n\n  private alive = true;\n  public uspesnaPromena = true;\n  public ucitavanje = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<PrvoLogovanjeModalComponent>,\n    private partnerServis: PartnerService,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data) { }\n\n  ngOnInit() {\n    this.partner = this.data;\n    this.inicijalizujForme();\n  }\n\n  inicijalizujForme() {\n    this.promenaSifreForm = this.formBuilder.group({\n      pass1: ['', [Validators.required, Validators.minLength(3)]],\n      pass2: ['', [Validators.required, Validators.minLength(3)]]\n    }, { validator: this.proveriSifre });\n  }\n\n  proveriSifre(group: FormGroup) {\n    const pass = group.controls.pass1.value;\n    const confirmPass = group.controls.pass2.value;\n\n    return pass === confirmPass ? null : { notSame: true };\n  }\n\n  promeniSifru() {\n    this.submitted = true;\n    if (this.promenaSifreForm.invalid || this.r.pass1.value !== this.r.pass2.value) {\n      return;\n    }\n    this.pozoviServisIPromeniSifru();\n  }\n\n  pozoviServisIPromeniSifru() {\n    const dto = this.napraviDto();\n    this.partnerServis.promeniSifru(dto, true).pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => {\n        if (error.status === 400) {\n          this.uspesnaPromena = false;\n          return EMPTY;\n        }\n        return throwError(error);\n      }),\n      finalize(() => this.ucitavanje = false)\n    )\n      .subscribe(\n        () => {\n          this.uspesnaPromena = true;\n        },\n        () => {\n          this.uspesnaPromena = false;\n        });\n\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n  private napraviDto(): PromenaSifre {\n    const dto = new PromenaSifre();\n    dto.sifra = this.r.pass1.value;\n    dto.ponovljenjaSifra = this.r.pass2.value;\n    dto.ppid = this.partner.ppid;\n    return dto;\n  }\n\n  get r() { return this.promenaSifreForm.controls; }\n\n}\n","module.exports = \"<mat-dialog-content>\\r\\n  <main>\\r\\n    <div class=\\\"modal-naslov\\\">\\r\\n      <h1 class=\\\"h1-modal-naslov\\\">Registracija</h1>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\r\\n      <mat-step>\\r\\n        <ng-template matStepLabel>Vrsta</ng-template>\\r\\n        <mat-radio-group class=\\\"radio-group\\\" [(ngModel)]=\\\"vrstaRegistracije\\\">\\r\\n          <mat-radio-button color=\\\"primary\\\" *ngFor=\\\"let registracija of registracije\\\" [value]=\\\"registracija\\\">\\r\\n            {{registracija}}\\r\\n          </mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n        <div>\\r\\n          <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"odrediFormu()\\\" matStepperNext>Dalje</button>\\r\\n        </div>\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"odredjenaForma\\\">\\r\\n        <ng-template matStepLabel>Forma</ng-template>\\r\\n        <form role=\\\"form\\\" [formGroup]=\\\"privatnoLiceForm\\\" *ngIf=\\\"vrstaRegistracije == registracije[0]\\\">\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #imeIPrezime formControlName=\\\"imeIPrezime\\\" matInput placeholder=\\\"Ime i prezime\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && privatno.imeIPrezime.errors\\\">\\r\\n            <div *ngIf=\\\"privatno.imeIPrezime.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Ime i prezime je obavezno</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"privatno.imeIPrezime.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Ime i prezime mora imati minimalno 3 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #grad formControlName=\\\"grad\\\" matInput placeholder=\\\"Grad\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && privatno.grad.errors\\\">\\r\\n            <div *ngIf=\\\"privatno.grad.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"privatno.grad.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Grad mora imati minimalno 2 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #adresa formControlName=\\\"adresa\\\" matInput placeholder=\\\"Adresa\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && privatno.adresa.errors\\\">\\r\\n            <div *ngIf=\\\"privatno.adresa.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Adresa je obavezna</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"privatno.adresa.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Adresa mora imati minimalno 3 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && privatno.email.errors\\\">\\r\\n            <div *ngIf=\\\"privatno.email.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Email je obavezan</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"privatno.email.errors.email\\\">\\r\\n              <p class=\\\"upozorenje\\\">Email nije validan</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #kontaktTelefon formControlName=\\\"kontaktTelefon\\\" matInput type=\\\"tel\\\" placeholder=\\\"Broj telefona\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && privatno.kontaktTelefon.errors\\\">\\r\\n            <div *ngIf=\\\"privatno.kontaktTelefon.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Broj telefona je obavezan</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"privatno.kontaktTelefon.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Broj telefona mora imati vise od 5 karakera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n        <form role=\\\"form\\\" [formGroup]=\\\"parvnoLiceForm\\\" *ngIf=\\\"vrstaRegistracije == registracije[1]\\\">\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #grad formControlName=\\\"nazivFirme\\\" matInput placeholder=\\\"Naziv firme\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && pravno.nazivFirme.errors\\\">\\r\\n            <div *ngIf=\\\"pravno.nazivFirme.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Naziv firme je obavezan</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pravno.nazivFirme.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Ime i prezime mora imati minimalno 3 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #pib formControlName=\\\"pib\\\" matInput placeholder=\\\"Pib\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && pravno.pib.errors\\\">\\r\\n            <div *ngIf=\\\"pravno.pib.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Pib je obavezan</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pravno.pib.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Pib mora imati minimalno 3 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #grad formControlName=\\\"grad\\\" matInput placeholder=\\\"Grad\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && pravno.grad.errors\\\">\\r\\n            <div *ngIf=\\\"pravno.grad.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pravno.grad.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Grad mora imati minimalno 2 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #adresa formControlName=\\\"adresa\\\" matInput placeholder=\\\"Adresa\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && pravno.adresa.errors\\\">\\r\\n            <div *ngIf=\\\"pravno.adresa.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Adresa je obavezna</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pravno.adresa.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">Adresa mora imati minimalno 3 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && pravno.email.errors\\\">\\r\\n            <div *ngIf=\\\"pravno.email.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Email je obavezan</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pravno.email.errors.email\\\">\\r\\n              <p class=\\\"upozorenje\\\">Email nije validan</p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <mat-form-field class=\\\"puna-duzina\\\">\\r\\n            <input #kontaktTelefon formControlName=\\\"kontaktTelefon\\\" matInput type=\\\"tel\\\" placeholder=\\\"Broj telefona\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"formaSubmited && pravno.kontaktTelefon.errors\\\">\\r\\n            <div *ngIf=\\\"pravno.kontaktTelefon.errors.required\\\">\\r\\n              <p class=\\\"upozorenje\\\">Telefon je obavezan</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pravno.kontaktTelefon.errors.minlength\\\">\\r\\n              <p class=\\\"upozorenje\\\">>Telefon mora imati minimalno 5 karaktera</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        <div>\\r\\n          <button mat-button matStepperPrevious>Nazad</button>\\r\\n          <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"registracijaKorisnika()\\\" matStepperNext>Registruj\\r\\n            se</button>\\r\\n        </div>\\r\\n      </mat-step>\\r\\n      <mat-step>\\r\\n        <ng-template matStepLabel>Uspešno</ng-template>\\r\\n        <h3>Registracija je uspešno poslata</h3>\\r\\n        <p> U narednih 24h vaš zahtev će biti obradjen i dobićete mail sa detaljima vašeg naloga.</p>\\r\\n        <div>\\r\\n          <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"zatvoriDialog()\\\">Zatvori</button>\\r\\n        </div>\\r\\n      </mat-step>\\r\\n    </mat-horizontal-stepper>\\r\\n  </main>\\r\\n</mat-dialog-content>\"","module.exports = \"h3 {\\n  font-size: 1.2em;\\n  font-weight: bold; }\\n\\n.radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.puna-duzina {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { Registracija } from 'src/app/e-shop/model/dto';\nimport { EmailService } from 'src/app/shared/service/email.service';\n\n@Component({\n  selector: 'app-registracija-modal',\n  templateUrl: './registracija-modal.component.html',\n  styleUrls: ['./registracija-modal.component.scss']\n})\nexport class RegistracijaModalComponent implements OnInit {\n\n  registracije: string[] = ['Fizičko lice', 'Pravno lice'];\n  public vrstaRegistracije: string;\n\n  // forme\n  public privatnoLiceForm: FormGroup;\n  public parvnoLiceForm: FormGroup;\n  public odredjenaForma: FormGroup;\n  public formaSubmited = false;\n\n  private registracija: Registracija = new Registracija();\n\n  private alive = true;\n  public ucitavanje = false;\n  constructor(\n    public dialogRef: MatDialogRef<RegistracijaModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailService: EmailService) { }\n\n  ngOnInit() {\n    this.vrstaRegistracije = this.registracije[0];\n    this.inicijalizujSveRegistracioneForme();\n  }\n\n  inicijalizujSveRegistracioneForme() {\n    this.privatnoLiceForm = this.formBuilder.group({\n      imeIPrezime: ['', [Validators.required, Validators.minLength(3)]],\n      grad: ['', [Validators.required, Validators.minLength(2)]],\n      adresa: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      kontaktTelefon: ['', [Validators.required, Validators.minLength(5)]]\n    });\n    this.parvnoLiceForm = this.formBuilder.group({\n      nazivFirme: ['', [Validators.required, Validators.minLength(3)]],\n      pib: ['', [Validators.required, Validators.minLength(3)]],\n      grad: ['', [Validators.required, Validators.minLength(2)]],\n      adresa: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      kontaktTelefon: ['', [Validators.required, Validators.minLength(5)]]\n    });\n    this.odredjenaForma = this.parvnoLiceForm;\n  }\n\n  registracijaKorisnika() {\n    this.formaSubmited = true;\n    if (this.vrstaRegistracije === this.registracije[0]) {\n      if (this.privatnoLiceForm.invalid) {\n        return;\n      } else {\n        this.registracija = new Registracija();\n        this.popuniRegistracijuZaPrivatnaLica();\n      }\n    } else {\n      if (this.parvnoLiceForm.invalid) {\n        return;\n      } else {\n        this.registracija = new Registracija();\n        this.popuniRegistracijuZaPravnaLica();\n      }\n    }\n    this.emailService.posaljiMailZaRegistraciju(this.registracija).pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => throwError(error)),\n      finalize(() => this.ucitavanje = false)\n    ).subscribe(res => {\n    }, error => {\n    });\n  }\n\n  public odrediFormu() {\n    if (this.vrstaRegistracije === this.registracije[0]) {\n      this.odredjenaForma = this.privatnoLiceForm;\n    } else {\n      this.odredjenaForma = this.parvnoLiceForm;\n    }\n  }\n\n  private popuniRegistracijuZaPrivatnaLica() {\n    this.registracija.imeIPrezime = this.privatno.imeIPrezime.value;\n    this.registracija.grad = this.privatno.grad.value;\n    this.registracija.adresa = this.privatno.adresa.value;\n    this.registracija.email = this.privatno.email.value;\n    this.registracija.kontaktTelefon = this.privatno.kontaktTelefon.value;\n    this.registracija.daLiJePravnoLice = false;\n  }\n\n  private popuniRegistracijuZaPravnaLica() {\n    this.registracija.nazivFirme = this.pravno.nazivFirme.value;\n    this.registracija.pib = this.pravno.pib.value;\n    this.registracija.grad = this.pravno.grad.value;\n    this.registracija.adresa = this.pravno.adresa.value;\n    this.registracija.email = this.pravno.email.value;\n    this.registracija.kontaktTelefon = this.pravno.kontaktTelefon.value;\n    this.registracija.daLiJePravnoLice = true;\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n  // convenience getter for easy access to form fields\n  get privatno() { return this.privatnoLiceForm.controls; }\n  get pravno() { return this.parvnoLiceForm.controls; }\n\n}\n","module.exports = \"<div class=\\\"header\\\">\\r\\n  <h3>Poštovani</h3>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<p>Vaša sesija je istekla. Molimo ulogujte se ponovo.</p>\\r\\n<div class=\\\"d-flex justify-content-center margin-top--10\\\">\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"zatvoriDialog()\\\">Zatvori</button>\\r\\n</div>\"","module.exports = \".header {\\n  height: 3em;\\n  padding: 3%;\\n  text-align: center; }\\n\\nh3 {\\n  display: inline;\\n  color: #345cac; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-sesija-istekla-modal',\n  templateUrl: './sesija-istekla-modal.component.html',\n  styleUrls: ['./sesija-istekla-modal.component.scss']\n})\nexport class SesijaIsteklaModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<SesijaIsteklaModalComponent>) { }\n\n  ngOnInit() {\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<mat-dialog-content *ngIf=\\\"!ucitavanje\\\">\\r\\n  <section *ngIf=\\\"!porukaJePoslata\\\">\\r\\n    <div class=\\\"header\\\">\\r\\n      <h1>Pošalji upit</h1>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriUpitDialog()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <form role=\\\"form\\\" [formGroup]=\\\"upitForm\\\">\\r\\n      <div class=\\\"forma-poruke\\\">\\r\\n        <table cellspacing=\\\"0\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput formControlName=\\\"email_telefon\\\" placeholder=\\\"Vaš email ili broj telefona\\\">\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"upitSubmited && u.email_telefon.errors\\\">\\r\\n                <div *ngIf=\\\"u.email_telefon.errors.required\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Email ili telefon je obavezan</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput formControlName=\\\"marka_model\\\" placeholder=\\\"Marka i model automobila - (Fiat Punto)\\\">\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"upitSubmited && u.marka_model.errors\\\">\\r\\n                <div *ngIf=\\\"u.marka_model.errors.required\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Marka и model automobila je obavezan</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput formControlName=\\\"godiste\\\" placeholder=\\\"Godište\\\">\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"upitSubmited && u.godiste.errors\\\">\\r\\n                <div *ngIf=\\\"u.godiste.errors.required\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Godište automobila je obavezana</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput formControlName=\\\"kubikaza\\\" placeholder=\\\"Kubikaža\\\">\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"upitSubmited && u.kubikaza.errors\\\">\\r\\n                <div *ngIf=\\\"u.kubikaza.errors.required\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Kubikaža automobila je obavezana</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <input matInput formControlName=\\\"kilovati\\\" placeholder=\\\"Kilovati\\\">\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"upitSubmited && u.kilovati.errors\\\">\\r\\n                <div *ngIf=\\\"u.kilovati.errors.required\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Broj kilovata automobila je obavezan</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <mat-select placeholder=\\\"Izaberite vrstu goriva\\\" formControlName=\\\"gorivo\\\" name=\\\"gorivo\\\" multiple>\\r\\n                  <mat-option *ngFor=\\\"let gor of gorivo\\\" [value]=\\\"gor\\\">\\r\\n                    {{gor}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"upitSubmited && u.gorivo.errors\\\">\\r\\n                <div *ngIf=\\\"u.gorivo.errors.required\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Vrsta goriva je obavezna</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <mat-select placeholder=\\\"Izaberite vrstu pogona automobila\\\" formControlName=\\\"pogon\\\" name=\\\"pogon\\\"\\r\\n                  multiple>\\r\\n                  <mat-option *ngFor=\\\"let pogon of pogoni\\\" [value]=\\\"pogon\\\">\\r\\n                    {{pogon}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"upitSubmited && u.pogon.errors\\\">\\r\\n                <div *ngIf=\\\"u.pogon.errors.required\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Vrsta pogona automobila je obavezna</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <mat-select placeholder=\\\"Izaberite šta vas interesuje\\\" formControlName=\\\"interesuje_me\\\" name=\\\"gorivo\\\"\\r\\n                  multiple>\\r\\n                  <mat-option *ngFor=\\\"let ponuda of ponude\\\" [value]=\\\"ponuda\\\">\\r\\n                    {{ponuda}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"upitSubmited && u.interesuje_me.errors\\\">\\r\\n                <div *ngIf=\\\"u.interesuje_me.errors.required\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Morate izabrati bar jednu opciju</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"daLiJeObelezenoDrugo()\\\">\\r\\n            <td>\\r\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\r\\n                <textarea matInput class=\\\"visina-textarea\\\" formControlName=\\\"drugo\\\"\\r\\n                  placeholder=\\\"Interesuje me...\\\"></textarea>\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <button mat-flat-button class=\\\"sirina-polja-unosa\\\" (click)=\\\"posaljiUpit()\\\" color=\\\"primary\\\">Pošalji</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </section>\\r\\n  <section *ngIf=\\\"porukaJePoslata\\\">\\r\\n    <p>Ukoro ćemo obraditi vaš upit i odgovoriti vam u najkraćem mogućem roku. Hvala na poverenju.</p>\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button mat-flat-button class=\\\"zatvori-button\\\"color=\\\"primary\\\" (click)=\\\"zatvoriUpitDialog()\\\">Zatvori</button>\\r\\n    </div>\\r\\n  </section>\\r\\n</mat-dialog-content>\\r\\n<section *ngIf=\\\"ucitavanje\\\">\\r\\n  <div class=\\\"d-flex justify-content-center margin-bottom--10 margin-top--10\\\">\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </div>\\r\\n</section>\"","module.exports = \"h1 {\\n  display: inline;\\n  font-size: 1.5em;\\n  color: #345cac; }\\n\\n.sirina-polja-unosa {\\n  width: 350px !important; }\\n\\n.header {\\n  height: 3em;\\n  padding: 3%;\\n  text-align: center; }\\n\\n.visina-textarea {\\n  height: 150px; }\\n\\n.mat-dialog-content {\\n  max-height: 90vh; }\\n\\n.zatvori-button {\\n  margin-top: 15px; }\\n\\n@media only screen and (max-device-width: 1025px) {\\n  .sirina-polja-unosa {\\n    width: 250px !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Upit } from 'src/app/e-commerce/model/dto';\nimport { Validators, FormBuilder, FormGroup, RequiredValidator } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material';\nimport { EmailService } from 'src/app/shared/service/email.service';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { NotifikacijaService } from '../../service/notifikacija.service';\nimport { MatSnackBarKlase } from '../../model/konstante';\n\n@Component({\n  selector: 'app-upit-modal',\n  templateUrl: './upit-modal.component.html',\n  styleUrls: ['./upit-modal.component.scss']\n})\nexport class UpitModalComponent implements OnInit {\n\n  public upitForm: FormGroup;\n  public upitSubmited = false;\n  public porukaJePoslata = false;\n\n  private alive = true;\n  public ucitavanje = false;\n  selectedCar: string;\n\n  selektovanoGorivo: string;\n  pogoni = [\n    '2WD',\n    '4WD'];\n  gorivo = [\n    'Benzin', 'Dizel', 'Benzin+Gas(TNG)',\n    'Metan CNG', 'Električni pogon', 'Električni pogon', 'Hibridni pogon'];\n  ponude = [\n    'Mali servis', 'Veliki servis', 'Prednje kočnice',\n    'Zadnje kočnice', 'Set kvačila', 'Zamajac', 'Drugo'];\n\n  constructor(\n    public dialogRef: MatDialogRef<UpitModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailServis: EmailService,\n    private notifikacijaServis: NotifikacijaService\n  ) { }\n\n  ngOnInit() {\n    this.inicijalizujForme();\n  }\n\n  inicijalizujForme() {\n    this.upitForm = this.formBuilder.group({\n      marka_model: ['', [Validators.required]],\n      godiste: ['', [Validators.required]],\n      kubikaza: ['', [Validators.required]],\n      kilovati: ['', [Validators.required]],\n      gorivo: ['', [Validators.required]],\n      pogon: ['', [Validators.required]],\n      interesuje_me: ['', [Validators.required]],\n      email_telefon: ['', [Validators.required]],\n      drugo: ['']\n    });\n  }\n  posaljiUpit() {\n    this.upitSubmited = true;\n    if (this.upitForm.invalid) {\n      return;\n    }\n    const upit = this.popuniUpit();\n    this.ucitavanje = true;\n    this.emailServis.posaljiUpit(upit)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => throwError(error)),\n        finalize(() => this.ucitavanje = false)\n      ).subscribe(res => {\n        this.upitForm.reset();\n        this.upitSubmited = false;\n        this.porukaJePoslata = true;\n        this.notifikacijaServis.notify('Upit je uspešno poslat', MatSnackBarKlase.Plava);\n\n      }, error => {\n        this.notifikacijaServis.notify('Došlo je do greške, upit nije poslat', MatSnackBarKlase.Crvena);\n        this.dialogRef.close();\n      });\n  }\n\n  popuniUpit(): Upit {\n    const upit = new Upit();\n    upit.emailTelefon = this.u.email_telefon.value;\n    upit.markaModel = this.u.marka_model.value;\n    upit.godiste = this.u.godiste.value;\n    upit.kubikaza = this.u.kubikaza.value;\n    upit.kilovati = this.u.kilovati.value;\n    upit.gorivo = this.u.gorivo.value;\n    upit.pogon = this.u.pogon.value;\n    upit.interesujeMe = this.u.interesuje_me.value;\n    if (this.u.drugo.value) {\n      upit.drugo = this.u.drugo.value;\n    }\n    return upit;\n  }\n  // convenience getter for easy access to form fields\n  get u() { return this.upitForm.controls; }\n\n  daLiJeObelezenoDrugo() {\n    const interesujeMe = this.u.interesuje_me.value;\n    return interesujeMe.includes('Drugo');\n  }\n\n  zatvoriUpitDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main class=\\\"text-center\\\">\\r\\n      <p>Porudžbina je uspešno poslata i uskoro će biti obradjena.</p>\\r\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\r\\n      <button mat-raised-button class=\\\"button-glavni-100 pomeri\\\" (click)=\\\"zatvori()\\\">Zatvori</button>\\r\\n      </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \".pomeri {\\n  margin-top: 15px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-uspesno-porucivanje-modal',\r\n  templateUrl: './uspesno-porucivanje-modal.component.html',\r\n  styleUrls: ['./uspesno-porucivanje-modal.component.scss']\r\n})\r\nexport class UspesnoPorucivanjeModalComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UspesnoPorucivanjeModalComponent>) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  zatvori() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-dialog-content *ngIf=\\\"!ucitavanje\\\">\\r\\n  <main>\\r\\n    <div class=\\\"modal-naslov\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <section *ngIf=\\\"!mailUspesnoPoslat\\\">\\r\\n      <h1>Pronađi svoj Automaterijal nalog</h1>\\r\\n      <p>Unesi svoju e-mail ili korisničko ime</p>\\r\\n      <form role=\\\"form\\\" [formGroup]=\\\"zaboravljeSifraForma\\\">\\r\\n        <mat-form-field class=\\\"email-input\\\">\\r\\n          <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"E-mail ili korisničko ime\\\">\\r\\n        </mat-form-field>\\r\\n        <div *ngIf=\\\"formaSubmited && zaboravljeno.email.errors\\\">\\r\\n          <div *ngIf=\\\"zaboravljeno.email.errors.required\\\">\\r\\n            <p class=\\\"upozorenje\\\">Podatak je obavezan</p>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"zaboravljeno.email.errors.minlength\\\">\\r\\n            <p class=\\\"upozorenje\\\">Podatak mora da ima vise od 3 karaktera</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"pomeri-dole\\\">\\r\\n          <button mat-raised-button (click)=\\\"posaljiMailZaboravljenaSifra()\\\" class=\\\"button-glavni-100\\\">Potvrdi</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </section>\\r\\n    <section *ngIf=\\\"mailUspesnoPoslat\\\">\\r\\n      <div *ngIf=\\\"mailPoslatPartneru\\\">\\r\\n        <h1>Mail uspešno poslat</h1>\\r\\n        <p>Uskoro će vam stići mail sa linkom gde možete promeniti vašu šifru.</p>\\r\\n        <div class=\\\"pomeri-dole\\\">\\r\\n          <button mat-raised-button (click)=\\\"zatvoriDialog()\\\" class=\\\"button-glavni-100\\\">Zatvori</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!mailPoslatPartneru\\\">\\r\\n        <h1 class=\\\"boja-crvena-50\\\">Obaveštenje</h1>\\r\\n        <p>Došlo je do greške. Administracija je obaveštena i problem će ubrzo biti rešen.</p>\\r\\n        <p>Hvala na razumevanju</p>\\r\\n        <div class=\\\"pomeri-dole\\\">\\r\\n          <button mat-raised-button (click)=\\\"zatvoriDialog()\\\" class=\\\"button-glavni-100\\\">Zatvori</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </main>\\r\\n</mat-dialog-content>\\r\\n<section *ngIf=\\\"ucitavanje\\\">\\r\\n  <div class=\\\"d-flex justify-content-center margin-bottom--10 margin-top--10\\\">\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </div>\\r\\n</section>\"","module.exports = \"h1 {\\n  font-size: 1.4em;\\n  font-weight: bold;\\n  margin-bottom: 25px; }\\n\\np {\\n  margin-bottom: 1.5em;\\n  font-size: 0.97em; }\\n\\n.email-input {\\n  width: 80%; }\\n\\n.pomeri-dole {\\n  margin-top: 0.9em; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { EmailService } from 'src/app/shared/service/email.service';\nimport { ResetSifre } from 'src/app/e-shop/model/dto';\nimport { NotifikacijaService } from '../../service/notifikacija.service';\nimport { MatSnackBarKlase } from '../../model/konstante';\n\n@Component({\n  selector: 'app-zaboravljena-sifra-modal',\n  templateUrl: './zaboravljena-sifra-modal.component.html',\n  styleUrls: ['./zaboravljena-sifra-modal.component.scss']\n})\nexport class ZaboravljenaSifraModalComponent implements OnInit {\n\n  public resetSifre: ResetSifre = new ResetSifre();\n  public mailUspesnoPoslat = false;\n  public mailPoslatPartneru = false;\n\n  // forme\n  public zaboravljeSifraForma: FormGroup;\n  public formaSubmited = false;\n\n  private alive = true;\n  public ucitavanje = false;\n  constructor(\n    public dialogRef: MatDialogRef<ZaboravljenaSifraModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailService: EmailService,\n    private notifikacijaServis: NotifikacijaService) { }\n\n  ngOnInit() {\n    this.inicijalizujSveRegistracioneForme();\n  }\n  inicijalizujSveRegistracioneForme() {\n    this.zaboravljeSifraForma = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.minLength(3)]],\n    });\n  }\n\n  posaljiMailZaboravljenaSifra() {\n    this.formaSubmited = true;\n    if (this.zaboravljeSifraForma.invalid) {\n      return;\n    }\n    this.ucitavanje = true;\n    this.resetSifre.email = this.zaboravljeno.email.value;\n    this.emailService\n    .posaljiMailZaResetovanjeSifre(this.resetSifre)\n    .pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => {\n        if (error.status === 400 || error.status === 404) {\n          const snackPoruka = 'E-mail ili korisničko ime ne postoji u našoj bazi.';\n          this.notifikacijaServis.notify(snackPoruka, MatSnackBarKlase.Crvena);\n          return EMPTY;\n        } else if (error.status === 503) {\n          this.mailUspesnoPoslat = true;\n          return EMPTY;\n        }\n        throwError(error);\n      }),\n      finalize(() => this.ucitavanje = false)\n    ).subscribe(res => {\n      this.mailUspesnoPoslat = true;\n      this.mailPoslatPartneru = true;\n    }, error => {\n      this.mailPoslatPartneru = false;\n      console.log('Server internal error! Adminsitration is contacted.');\n    });\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n  // convenience getter for easy access to form fields\n  get zaboravljeno() { return this.zaboravljeSifraForma.controls; }\n}\n","export class MatSnackBarKlase {\r\n    public static Zelena = 'green-snackbar';\r\n    public static Plava = 'primary-snackbar';\r\n    public static Crvena = 'red-snackbar';\r\n }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Registracija, ResetSifre} from '../../e-shop/model/dto';\nimport { timeoutWith, catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\nimport { Poruka, Upit } from 'src/app/e-commerce/model/dto';\nimport { environment } from 'src/environments/environment';\n\nconst DOMAIN_URL = environment.baseUrl + '/api/email';\nconst REGISTRACIJA_URL = '/registracija';\nconst RESETOVANJE_SIFRE_URL = '/zaboravljena-sifra';\nconst PORUKA_URL = '/poruka';\nconst UPIT_URL = '/upit';\n\nconst TIMEOUT = 15000;\nconst TIMEOUT_ERROR = 'Timeout error!';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  constructor(\n    private http: HttpClient) { }\n\n  public posaljiMailZaRegistraciju(registracija: Registracija): Observable<any> {\n    const fullUrl = DOMAIN_URL + REGISTRACIJA_URL;\n   return this.http.post(fullUrl, registracija)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n\n  public posaljiMailZaResetovanjeSifre(email: ResetSifre): Observable<any> {\n    const fullUrl = DOMAIN_URL + RESETOVANJE_SIFRE_URL;\n   return this.http.post(fullUrl, email)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n\n  public posaljiPoruku(poruka: Poruka): Observable<any> {\n    const fullUrl = DOMAIN_URL + PORUKA_URL;\n   return this.http.post(fullUrl, poruka)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n\n  public posaljiUpit(upit: Upit): Observable<any> {\n    const fullUrl = DOMAIN_URL + UPIT_URL;\n   return this.http.post(fullUrl, upit)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBarRef, MatSnackBar } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifikacijaService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  public notify(poruka: string, klasaBoja: string) {\n    this.snackBar.open(poruka, '', {\n      duration: 2000,\n      panelClass: [klasaBoja]\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: ''\r\n  // baseUrl: 'http://localhost:8080'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}