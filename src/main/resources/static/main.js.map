{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/e-commerce/dasboard/clanak/clanak.component.html","webpack:///./src/app/e-commerce/dasboard/clanak/clanak.component.scss","webpack:///./src/app/e-commerce/dasboard/clanak/clanak.component.ts","webpack:///./src/app/e-commerce/dasboard/dasboard.component.html","webpack:///./src/app/e-commerce/dasboard/dasboard.component.scss","webpack:///./src/app/e-commerce/dasboard/dasboard.component.ts","webpack:///./src/app/e-commerce/dasboard/ponuda/ponuda.component.html","webpack:///./src/app/e-commerce/dasboard/ponuda/ponuda.component.scss","webpack:///./src/app/e-commerce/dasboard/ponuda/ponuda.component.ts","webpack:///./src/app/e-commerce/dasboard/vesti/vesti.component.html","webpack:///./src/app/e-commerce/dasboard/vesti/vesti.component.scss","webpack:///./src/app/e-commerce/dasboard/vesti/vesti.component.ts","webpack:///./src/app/e-commerce/kontakt/kontakt.component.html","webpack:///./src/app/e-commerce/kontakt/kontakt.component.scss","webpack:///./src/app/e-commerce/kontakt/kontakt.component.ts","webpack:///./src/app/e-commerce/model/dto.ts","webpack:///./src/app/e-commerce/o-nama/o-nama.component.html","webpack:///./src/app/e-commerce/o-nama/o-nama.component.scss","webpack:///./src/app/e-commerce/o-nama/o-nama.component.ts","webpack:///./src/app/e-shop/faktura/faktura-detalji/faktura-detalji.component.html","webpack:///./src/app/e-shop/faktura/faktura-detalji/faktura-detalji.component.scss","webpack:///./src/app/e-shop/faktura/faktura-detalji/faktura-detalji.component.ts","webpack:///./src/app/e-shop/faktura/faktura.component.html","webpack:///./src/app/e-shop/faktura/faktura.component.scss","webpack:///./src/app/e-shop/faktura/faktura.component.ts","webpack:///./src/app/e-shop/korpa/korpa.component.html","webpack:///./src/app/e-shop/korpa/korpa.component.scss","webpack:///./src/app/e-shop/korpa/korpa.component.ts","webpack:///./src/app/e-shop/login/login.component.css","webpack:///./src/app/e-shop/login/login.component.html","webpack:///./src/app/e-shop/login/login.component.ts","webpack:///./src/app/e-shop/magacin/akumulatori/akumulatori.component.css","webpack:///./src/app/e-shop/magacin/akumulatori/akumulatori.component.html","webpack:///./src/app/e-shop/magacin/akumulatori/akumulatori.component.ts","webpack:///./src/app/e-shop/magacin/filteri/filteri.component.css","webpack:///./src/app/e-shop/magacin/filteri/filteri.component.html","webpack:///./src/app/e-shop/magacin/filteri/filteri.component.ts","webpack:///./src/app/e-shop/magacin/ostalo/kategorija-specificna/kategorija-specificna.component.html","webpack:///./src/app/e-shop/magacin/ostalo/kategorija-specificna/kategorija-specificna.component.scss","webpack:///./src/app/e-shop/magacin/ostalo/kategorija-specificna/kategorija-specificna.component.ts","webpack:///./src/app/e-shop/magacin/ostalo/ostalo.component.html","webpack:///./src/app/e-shop/magacin/ostalo/ostalo.component.scss","webpack:///./src/app/e-shop/magacin/ostalo/ostalo.component.ts","webpack:///./src/app/e-shop/magacin/roba/roba.component.css","webpack:///./src/app/e-shop/magacin/roba/roba.component.html","webpack:///./src/app/e-shop/magacin/roba/roba.component.ts","webpack:///./src/app/e-shop/magacin/shared-components/filter/filter.component.html","webpack:///./src/app/e-shop/magacin/shared-components/filter/filter.component.scss","webpack:///./src/app/e-shop/magacin/shared-components/filter/filter.component.ts","webpack:///./src/app/e-shop/magacin/shared-components/tabela/tabela.component.html","webpack:///./src/app/e-shop/magacin/shared-components/tabela/tabela.component.scss","webpack:///./src/app/e-shop/magacin/shared-components/tabela/tabela.component.ts","webpack:///./src/app/e-shop/magacin/ulja/antifriz/antifriz.component.css","webpack:///./src/app/e-shop/magacin/ulja/antifriz/antifriz.component.html","webpack:///./src/app/e-shop/magacin/ulja/antifriz/antifriz.component.ts","webpack:///./src/app/e-shop/magacin/ulja/industrijska/industrijska.component.css","webpack:///./src/app/e-shop/magacin/ulja/industrijska/industrijska.component.html","webpack:///./src/app/e-shop/magacin/ulja/industrijska/industrijska.component.ts","webpack:///./src/app/e-shop/magacin/ulja/kociona/kociona.component.css","webpack:///./src/app/e-shop/magacin/ulja/kociona/kociona.component.html","webpack:///./src/app/e-shop/magacin/ulja/kociona/kociona.component.ts","webpack:///./src/app/e-shop/magacin/ulja/menjacko/menjacko.component.css","webpack:///./src/app/e-shop/magacin/ulja/menjacko/menjacko.component.html","webpack:///./src/app/e-shop/magacin/ulja/menjacko/menjacko.component.ts","webpack:///./src/app/e-shop/magacin/ulja/motorna/motorna.component.css","webpack:///./src/app/e-shop/magacin/ulja/motorna/motorna.component.html","webpack:///./src/app/e-shop/magacin/ulja/motorna/motorna.component.ts","webpack:///./src/app/e-shop/magacin/ulja/ulja.component.css","webpack:///./src/app/e-shop/magacin/ulja/ulja.component.html","webpack:///./src/app/e-shop/magacin/ulja/ulja.component.ts","webpack:///./src/app/e-shop/model/dto.ts","webpack:///./src/app/e-shop/model/filter.ts","webpack:///./src/app/e-shop/model/konstante.ts","webpack:///./src/app/e-shop/model/page.ts","webpack:///./src/app/e-shop/model/porudzbenica.ts","webpack:///./src/app/e-shop/model/roba.enum.ts","webpack:///./src/app/e-shop/partner/partner.component.html","webpack:///./src/app/e-shop/partner/partner.component.scss","webpack:///./src/app/e-shop/partner/partner.component.ts","webpack:///./src/app/e-shop/resetovanje-sfire/resetovanje-sfire.component.html","webpack:///./src/app/e-shop/resetovanje-sfire/resetovanje-sfire.component.scss","webpack:///./src/app/e-shop/resetovanje-sfire/resetovanje-sfire.component.ts","webpack:///./src/app/e-shop/service/data/data.service.ts","webpack:///./src/app/e-shop/service/data/local-storage.service.ts","webpack:///./src/app/e-shop/service/faktura.service.ts","webpack:///./src/app/e-shop/service/login.service.ts","webpack:///./src/app/e-shop/service/partner.service.ts","webpack:///./src/app/e-shop/service/proizvodjac.service.ts","webpack:///./src/app/e-shop/service/roba.service.ts","webpack:///./src/app/e-shop/utils/app-utils.service.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/navigacija/navigacija.component.html","webpack:///./src/app/navigacija/navigacija.component.scss","webpack:///./src/app/navigacija/navigacija.component.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/shared/modal/brendovi-modal/brendovi-modal.component.html","webpack:///./src/app/shared/modal/brendovi-modal/brendovi-modal.component.scss","webpack:///./src/app/shared/modal/brendovi-modal/brendovi-modal.component.ts","webpack:///./src/app/shared/modal/izmena-kolicine-modal/izmena-kolicine-modal.component.html","webpack:///./src/app/shared/modal/izmena-kolicine-modal/izmena-kolicine-modal.component.scss","webpack:///./src/app/shared/modal/izmena-kolicine-modal/izmena-kolicine-modal.component.ts","webpack:///./src/app/shared/modal/logout-modal/logout-modal.component.html","webpack:///./src/app/shared/modal/logout-modal/logout-modal.component.scss","webpack:///./src/app/shared/modal/logout-modal/logout-modal.component.ts","webpack:///./src/app/shared/modal/neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component.html","webpack:///./src/app/shared/modal/neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component.scss","webpack:///./src/app/shared/modal/neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component.ts","webpack:///./src/app/shared/modal/poruka-modal/poruka-modal.component.html","webpack:///./src/app/shared/modal/poruka-modal/poruka-modal.component.scss","webpack:///./src/app/shared/modal/poruka-modal/poruka-modal.component.ts","webpack:///./src/app/shared/modal/registracija-modal/registracija-modal.component.html","webpack:///./src/app/shared/modal/registracija-modal/registracija-modal.component.scss","webpack:///./src/app/shared/modal/registracija-modal/registracija-modal.component.ts","webpack:///./src/app/shared/modal/upit-modal/upit-modal.component.html","webpack:///./src/app/shared/modal/upit-modal/upit-modal.component.scss","webpack:///./src/app/shared/modal/upit-modal/upit-modal.component.ts","webpack:///./src/app/shared/modal/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.html","webpack:///./src/app/shared/modal/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.scss","webpack:///./src/app/shared/modal/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component.ts","webpack:///./src/app/shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.html","webpack:///./src/app/shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.scss","webpack:///./src/app/shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component.ts","webpack:///./src/app/shared/model/konstante.ts","webpack:///./src/app/shared/pipes/DatePipe.ts","webpack:///./src/app/shared/pipes/EmptyPipe.ts","webpack:///./src/app/shared/pipes/PrevodilacPipe.ts","webpack:///./src/app/shared/service/email.service.ts","webpack:///./src/app/shared/service/notifikacija.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilteriComponent } from './e-shop/magacin/filteri/filteri.component';\r\nimport { AkumulatoriComponent } from './e-shop/magacin/akumulatori/akumulatori.component';\r\nimport { UljaComponent } from './e-shop/magacin/ulja/ulja.component';\r\nimport { KorpaComponent } from './e-shop/korpa/korpa.component';\r\nimport { LoginComponent } from './e-shop/login/login.component';\r\nimport { FakturaComponent } from './e-shop/faktura/faktura.component';\r\nimport { FakturaDetaljiComponent } from './e-shop/faktura/faktura-detalji/faktura-detalji.component';\r\nimport { OstaloComponent } from './e-shop/magacin/ostalo/ostalo.component';\r\nimport { KategorijaSpecificnaComponent } from './e-shop/magacin/ostalo/kategorija-specificna/kategorija-specificna.component';\r\nimport { PartnerComponent } from './e-shop/partner/partner.component';\r\nimport { RobaComponent } from './e-shop/magacin/roba/roba.component';\r\nimport { DasboardComponent } from './e-commerce/dasboard/dasboard.component';\r\nimport { ResetovanjeSfireComponent } from './e-shop/resetovanje-sfire/resetovanje-sfire.component';\r\nimport { KontaktComponent } from './e-commerce/kontakt/kontakt.component';\r\nimport { ONamaComponent } from './e-commerce/o-nama/o-nama.component';\r\nimport { ClanakComponent } from './e-commerce/dasboard/clanak/clanak.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/naslovna', pathMatch: 'full' },\r\n  {path: 'naslovna' , component: DasboardComponent},\r\n  {path: 'o-nama' , component: ONamaComponent},\r\n  {path: 'kontakt' , component: KontaktComponent},\r\n  {path: 'roba' , component: RobaComponent},\r\n  {path: 'filteri' , component: FilteriComponent},\r\n  {path: 'ulja' , component: UljaComponent},\r\n  {path: 'akumulatori' , component: AkumulatoriComponent},\r\n  {path: 'ostalo' , component: OstaloComponent},\r\n  {path: 'ostalo/:id', component: KategorijaSpecificnaComponent},\r\n  {path: 'login' , component: LoginComponent},\r\n  {path: 'kontakt' , component: DasboardComponent},\r\n  {path: 'licni-podaci' , component: PartnerComponent},\r\n  {path: 'porudzbenice', component: FakturaComponent},\r\n  {path: 'porudzbenice/:id', component: FakturaDetaljiComponent},\r\n  {path: 'naslovna/:id', component: ClanakComponent},\r\n  {path: 'korpa', component: KorpaComponent},\r\n  {path: 'reset-sifre/:id', component: ResetovanjeSfireComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {scrollPositionRestoration: 'enabled'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<app-navigacija></app-navigacija>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Automaterijal';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { StorageServiceModule } from 'angular-webstorage-service';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './shared/material/material.module';\nimport { NavigacijaComponent } from './navigacija/navigacija.component';\nimport { RobaComponent } from './e-shop/magacin/roba/roba.component';\nimport { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FilteriComponent } from './e-shop/magacin/filteri/filteri.component';\nimport { AkumulatoriComponent } from './e-shop/magacin/akumulatori/akumulatori.component';\nimport { UljaComponent } from './e-shop/magacin/ulja/ulja.component';\nimport { MotornaComponent } from './e-shop/magacin/ulja/motorna/motorna.component';\nimport { MenjackoComponent } from './e-shop/magacin/ulja/menjacko/menjacko.component';\nimport { KocionaComponent } from './e-shop/magacin/ulja/kociona/kociona.component';\nimport { AntifrizComponent } from './e-shop/magacin/ulja/antifriz/antifriz.component';\nimport { IndustrijskaComponent } from './e-shop/magacin/ulja/industrijska/industrijska.component';\nimport { KorpaComponent } from './e-shop/korpa/korpa.component';\nimport { LoginComponent } from './e-shop/login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FakturaComponent } from './e-shop/faktura/faktura.component';\nimport { TranslatePipe } from './shared/pipes/PrevodilacPipe';\nimport { EmptyPipe } from './shared/pipes/EmptyPipe';\nimport { FakturaDetaljiComponent } from './e-shop/faktura/faktura-detalji/faktura-detalji.component';\nimport { DatePipe } from './shared/pipes/DatePipe';\nimport { OstaloComponent } from './e-shop/magacin/ostalo/ostalo.component';\nimport { KategorijaSpecificnaComponent } from './e-shop/magacin/ostalo/kategorija-specificna/kategorija-specificna.component';\nimport { PartnerComponent } from './e-shop/partner/partner.component';\nimport { DasboardComponent } from './e-commerce/dasboard/dasboard.component';\nimport { ResetovanjeSfireComponent } from './e-shop/resetovanje-sfire/resetovanje-sfire.component';\nimport { KontaktComponent } from './e-commerce/kontakt/kontakt.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { IzmenaKolicineModalComponent } from './shared/modal/izmena-kolicine-modal/izmena-kolicine-modal.component';\nimport { LogoutModalComponent } from './shared/modal/logout-modal/logout-modal.component';\nimport { UspesnoPorucivanjeModalComponent } from './shared/modal/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component';\nimport { RegistracijaModalComponent } from './shared/modal/registracija-modal/registracija-modal.component';\nimport { ZaboravljenaSifraModalComponent } from './shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component';\nimport { PorukaModalComponent } from './shared/modal/poruka-modal/poruka-modal.component';\nimport { ONamaComponent } from './e-commerce/o-nama/o-nama.component';\nimport { OwlModule } from 'ngx-owl-carousel';\nimport { BrendoviModalComponent } from './shared/modal/brendovi-modal/brendovi-modal.component';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { ClanakComponent } from './e-commerce/dasboard/clanak/clanak.component';\nimport { PonudaComponent } from './e-commerce/dasboard/ponuda/ponuda.component';\nimport { VestiComponent as Vesti } from './e-commerce/dasboard/vesti/vesti.component';\nimport { UpitModalComponent } from './shared/modal/upit-modal/upit-modal.component';\nimport { FilterComponent } from './e-shop/magacin/shared-components/filter/filter.component';\nimport { TabelaComponent } from './e-shop/magacin/shared-components/tabela/tabela.component';\nimport { NeuspesnoPorucivanjeModalComponent } from './shared/modal/neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigacijaComponent,\n    RobaComponent,\n    DasboardComponent,\n    FilteriComponent,\n    AkumulatoriComponent,\n    UljaComponent,\n    MotornaComponent,\n    MenjackoComponent,\n    KocionaComponent,\n    AntifrizComponent,\n    IndustrijskaComponent,\n    KorpaComponent,\n    IzmenaKolicineModalComponent,\n    LoginComponent,\n    LogoutModalComponent,\n    FakturaComponent,\n    TranslatePipe,\n    EmptyPipe,\n    DatePipe,\n    FakturaDetaljiComponent,\n    OstaloComponent,\n    KategorijaSpecificnaComponent,\n    PartnerComponent,\n    UspesnoPorucivanjeModalComponent,\n    RegistracijaModalComponent,\n    ZaboravljenaSifraModalComponent,\n    ResetovanjeSfireComponent,\n    KontaktComponent,\n    FooterComponent,\n    PorukaModalComponent,\n    ONamaComponent,\n    BrendoviModalComponent,\n    ClanakComponent,\n    PonudaComponent,\n    Vesti,\n    UpitModalComponent,\n    FilterComponent,\n    TabelaComponent,\n    NeuspesnoPorucivanjeModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    HttpClientModule,\n    CarouselModule,\n    OwlModule,\n    ReactiveFormsModule,\n    StorageServiceModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    ZaboravljenaSifraModalComponent,\n    RegistracijaModalComponent,\n    IzmenaKolicineModalComponent,\n    LogoutModalComponent,\n    UspesnoPorucivanjeModalComponent,\n    NeuspesnoPorucivanjeModalComponent,\n    PorukaModalComponent,\n    BrendoviModalComponent,\n    UpitModalComponent]\n})\nexport class AppModule { }\n","module.exports = \"<main>\\n  <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\n    <button class=\\\"button-glavni-100 nazad-button\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\n      <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\n    </button>\\n  </div>\\n  <section>\\n    <div class=\\\"d-flex flex-column d-flex justify-content-center vest-sektor\\\">\\n      <div [innerHTML]=\\\"vest.naslov\\\"></div>\\n      <div><img src={{vest.slika}}></div>\\n      <div [innerHTML]=\\\"vest.tekst\\\"></div>\\n    </div>\\n  </section>\\n</main>\"","module.exports = \"img {\\n  width: 100%;\\n  height: 300px; }\\n\\n.vest-sektor {\\n  width: 50%;\\n  margin-left: 25%; }\\n\\n/* :host /deep/ mySelector { */\\n\\n:host ::ng-deep ul {\\n  list-style-type: circle;\\n  padding: 0px 30px; }\\n\\n:host ::ng-deep p {\\n  margin-top: 15px;\\n  padding: 10px; }\\n\\n:host ::ng-deep h1 {\\n  text-align: center;\\n  margin-bottom: 20px; }\\n\\n@media only screen and (max-width: 1025px) {\\n  .img {\\n    width: 100%;\\n    height: 100px; }\\n  .vest-sektor {\\n    width: 90%;\\n    margin-left: 5%; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { VestiNaslovna, Vest } from '../../model/dto';\n\n@Component({\n  selector: 'app-clanak',\n  templateUrl: './clanak.component.html',\n  styleUrls: ['./clanak.component.scss']\n})\nexport class ClanakComponent implements OnInit {\n\n  public vest: Vest;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    let urlParam;\n    this.route.params.subscribe((params: Params) => {\n      urlParam = params.id;\n    });\n    this.vest = this.objediniSveVesti()\n      .filter((vest: Vest) => vest.id === urlParam)\n      .pop();\n  }\n\n  idiNazad() {\n    this.router.navigate(['/naslovna']);\n  }\n\n  objediniSveVesti() {\n    const sveVesti = [];\n    sveVesti.push(\n      this.shell_u_ponudi(), this.febi_u_ponudi(),\n      this.mahle_u_ponudi(), this.ks_u_ponudi(),\n      this.mahle_pakovanje_vesti(), this.mahle_kompresori_vesti());\n    return sveVesti;\n  }\n\n  shell_u_ponudi(): Vest {\n    const shell_u_ponudi = new Vest();\n    shell_u_ponudi.id = 'shell-u-ponudi';\n    shell_u_ponudi.naslov = '<h1>Uz novu <b>GTL</b> tehnologiju budućnost je počela</h1>';\n    shell_u_ponudi.slika = 'assets/slike/novouponudi/velika/shell.png';\n    shell_u_ponudi.tekst = '<p>Shell je multinacionalna angloholandska naftna kompanija osnovana osnovana u Ujedinjenom Kraljevstvu sa sedištem u Holandiji. Kompanija je vertikalno integrisana i ima aktivnosti gotovo u svim područijima industrije nafte i gasa. Kao vodeća kompanija u proizvodnji ulja I maziva prisutan je u preko 100 zemalja. U svom portfoliu ima preko 2000 proizvoda raznih namena kako bi odgovorio svim zahtevima koje tržište diktira. Shell je takođe izbor mnogih proizvođača vozila, mašina, industrijskih postrojenja I mnogih dugih proizvođača kao prvo punjenje u svojim proizvodima. Shell je trenutno jedina energentska kompanija na svetu koja bazna ulja dobija iz gasa (GTL tehnologija). Postorjenje za preradu se nalazi u Kataru i jedino je tog tipa. Prvo postrojenje se nalazilo u Maleziji I napravljeno je pre 40 godina I sluzilo je za razvoj tehnologije. Razvitkom fabrika je premeštena u Katar I sada punim kapacitetima proizvodi potrebne količine baznog ulja za potrebe svetskog tržišta. </p> <p>Šel je takođe I po tržišnoj kapitalizaciji jedno od vodećih preuzeća u svetu. Šel je u  2013 godini bio vodeće preduzeće na Fortune global 500-listi najvećih preduzeća na svetu.</p>';\n    return shell_u_ponudi;\n  }\n\n  febi_u_ponudi(): Vest {\n    const shell_u_ponudi = new Vest();\n    shell_u_ponudi.id = 'febi-u-ponudi';\n    shell_u_ponudi.naslov = '<h1>Kompletno rešenje za vaše vozilo</h1>';\n    shell_u_ponudi.slika = 'assets/slike/novouponudi/velika/febi.png';\n    shell_u_ponudi.tekst = '<p>Febi bilstein je  osnovan davne 1844 godine. Danas je jedan od vodećih svetskih proizvođača i dobavljača rezervnih delova za putnička i komercijalna vozila na nezavisnom tržištu rezervnih delova.  Više od 170 godina održava kontinuitet, kvalitet, uslugu, pouzdanost i inovacije. Asortiman cini 30.000 razlicitih rezervnih delova. Osim toga, febi ima svoja predstavništva ili iskusnog partnera u preko 69 zemalja. </p> <p>Od upravljačke, motorne i kočne tehnike, tehnike šasija i učvršćivanja točkova do autoelektrike i pneumatike i programa febi plus – kod firme febi bilstein ćete naći sve za profesionalno servisiranje - putničkih vozila, kamiona, autobusa, prikolica, poluprikolica i malih transportera svih aktuelnih marki i modela.</p> <p class=\"proba\">Febi bilstein stoji za proizvode koji ispunjavaju najviše zahteve kvaliteta izrade i bezbednosti ugradnje. Kvalitetom, brzinom i postavljanjem trendova febi bilstein vam daje odlučujući podsticaj na globalnom tržištu. Zato što kao premium marka ima obavezu da ispuni zahteve svojih kupaca – svakodnevno.</p> <p>AUTOMATERIJAL d.o.o - je zastupnik koncerna Febi Bilstein i Blue Printa za zapadnu Srbiju.</p>';\n    return shell_u_ponudi;\n  }\n\n  mahle_u_ponudi(): Vest {\n    const mahle_u_ponudi = new Vest();\n    mahle_u_ponudi.id = 'mahle-u-ponudi';\n    mahle_u_ponudi.naslov = '<h1>U korak sa vremenom</h1>';\n    mahle_u_ponudi.slika = 'assets/slike/novouponudi/velika/mahle.png';\n    mahle_u_ponudi.tekst = '<p>Mahle je vodeći međunarodni partner za razvoj I dobavljač za automobilsku industriju, kao I pionir I pokretač tehnologije za budućnost.</p> <p>Zasnovan na velikoj složenosti sistema koja se sastoji od motora I komponenata motora, filtriranja I upravljanja toplotnom energijom, portfolio proizvoda grupe se bavi svim ključnim pitanjima vezanim za tehnologiju pogonskog sistema i klima uređaja.</p> <p>Mahle proizvodi se ugrađuju u najmanje svako drugo vozilo širom sveta. Decenijama Mahle komponente I sistemi su takođe korišćeni na svetskim trkalištima I izvan puta-u stacionarnim aplikacijama, za mobilnu mašineriju, železničku transport, kao I pomorske aplikacije.</p> <p>Ono po čemu je Mahle preopoznatljiv širom sveta je svakako pre svega motorna grupa. Ogroman deo svetskih proizvođača vozila, kako  putničkih tako I teretnih upravo ugrađuju u svoje motore komponente dizajnirane u napravljene u Mahle fabrikama. Takođe, kupovinom svetskog Brenda Knecht, Mahle ulazi kao premijum proizvođač filtera na tržište, nudeći svoje proizvode u aftermarketu istog kvaliteta kao I oni koji su prva ugradnja ovog proizvođača.</p> <p>Kupovinom nekoliko velikih proizođača komponenti za vozila Mahle je svoj portfolio proširio I na uređaje vezane za klimatizaciju vozila, termomenadžment, turbopunjače, alternatore, alnasere I mnoge druge sastavne delove vozila. Ono po čemu je mahle prepoznatljiv je motorna grupa.</p>';\n    return mahle_u_ponudi;\n  }\n\n  ks_u_ponudi(): Vest {\n    const shell_u_ponudi = new Vest();\n    shell_u_ponudi.id = 'ks-u-ponudi';\n    shell_u_ponudi.naslov = '<h1>Godine poverenja su preporuka</h1>';\n    shell_u_ponudi.slika = 'assets/slike/novouponudi/velika/ks.png';\n    shell_u_ponudi.tekst = '<p>U svojoj ulozi dobavljača prvog reda, Pierburg je tradicionalno bio jedan od najbližih partnera automobilskoj industriji, od samog početka uspešnog unapređenja razvoja automobila.Pierburg je osnovan 1909. godine kao trgovac čelikom u Berlinu; 1928. godine, Pierburg je počeo s proizvodnjom karburatora i vrlo brzo je stsao u glavnog  dobavljača za sve nemačke proizvođače automobila i mnoge međunarodne proizvođače motornih vozila i proizvođače motora.Godine 1986. Pierburg je preuzeo Rheinmetall Group i 1998. se spojio sa Kolbenschmidt-om da bi formirao Kolbenschmidt Pierburg AG.U okviru Rheinmetall Automotive, Pierburg je specijalista za kontrolu emisije, dovod vazduha, prigušne ventile i solenoidne ventile.Decenije iskustva u kombinaciji sa sveobuhvatnim, inovativnim i globalno priznatim mogućnostima u svakom aspektu motora su faktori koji su doveli Pierburg u svoju misiju da stalno razvija i proizvodi komponente, module i sisteme za budućnost.U razvoju novih generacija motora dobijaju na značaju takvi faktori kao što su smanjena potrošnja goriva, niže emisije štetnih gasova  i poboljšane performanse, udobnost i sigurnost.U te svrhe, Pierburg nudi visoko tehnološka rešenja: električne pumpe za hlađenje na zahtev, sisteme za recirkulaciju izduvnih gasova  sa ​​istosmernim motorom, ventile za odvod vazduha, te različite verzije pogonskih modula. Svi ovi razvoji pomažu da se stvori ekonomski i ekološki uravnotežen automobil.</p> <p>Divizija KS Kolbenschmidt razvija, proizvodi i prodaje klipove za benzinske i dizel motore za automobile i komercijalna vozila i jedan je od najistaknutijih igrača u svom segmentu. Ostali proizvodi uključuju klipove za dvotaktne i kompresorske motore kao i velike klipove za stacionarne, brodske i lokomotivne motore.Unapređenje gustine snage, kao i postizanje daljnjeg smanjenja potrošnje goriva i emisija, već godinama predstavljaju faktore koji utiču na razvoj novih tipova klipova kod KS Kolbenschmidt.</p>';\n    return shell_u_ponudi;\n  }\n\n  mahle_pakovanje_vesti() {\n    const mahlePakovanjeVesti = new Vest();\n    mahlePakovanjeVesti.id = 'mahle-pakovanje';\n    mahlePakovanjeVesti.naslov = '<h1>Nova ambalaža - dokazan kvalitet</h1>';\n    mahlePakovanjeVesti.slika = 'assets/slike/novouponudi/velika/mahle-pakovanja.png';\n    mahlePakovanjeVesti.tekst = '<p>MAHLE Aftermarket proizvodi dolaze u novo dizajniranom pakovanju od 2019. godine. Jednostavno i jasno za lako rukovanje u trgovini i radionicama. I naravno, oni će još uvek imati dokazan kvalitet MAHLE.</p> <p>Novo: Jasne boje, koncizna informacija i jasan dizajn omogućavaju lako rukovanje i brzu identifikaciju u skladištu.</p> <p>Novi pristup opisu proizvoda prilagođen čitaču, dodatne ikone podrške za proizvode, prikazuju se samo bitne informacije.</p><p>Takođe je usklađena šema boja, što je rezultiralo sledećim promjenama:</p> <ul><li>Promena boje ambalaže BEHR sa narandžaste na plavu</li><li> Promena boje za delove motora od crvene do plave</li><li> Činimo ga još jednostavnijim: MAHLE ORIGINAL postaje MAHLE</li></ul> <p> Jednostavno i jasno - zahvaljujući novom dizajnu ambalaže: </p><ul> <li>Svi relevantni detalji na prvi pogled</li> <li>Jednostavno rukovanje u trgovini i radionicama</li> <li>Jednostavna identifikacija u skladištu (sa udaljenosti) zahvaljujući jasnim bojama</li> <li>Garantovana visoka sigurnost (zaštita od piraterije proizvoda)</li> <li>Snažan izgled za sedam jakih brendova</li></ul> <p>MAHLE Aftermarket objedinjuje sedam jakih, međunarodnih brendova koji su sinonim za inovacije i beskompromisni kvalitet. Pored kišobranskog brenda MAHLE, tu spadaju uspešne kompanije kao što su BEHR, CLEVITE, IZUMI, METAL LEVE i KNECHT FILTER. BRAIN BEE, novo integrisana u MAHLE porodicu marki 2018. godine, je stručnjak za radioničku opremu i dijagnostiku za tržišta u Evropi, Bliskom Istoku, Africi, Južnoj Americi i delovima Azije.</p>   <p>Širom svijeta, brand MAHLE je sinonim za rezervne delove u kvalitetui originalne opreme duž celog pogonskog sklopa - od komponenti motora, turbokompresora, filtera, hlađenja motora i klima uređaja, starter motora i alternatora kroz radioničku opremu i dijagnostiku, e-mobilnost i elektroniku , pa čak i rezervne delove za klasična vozila.</p>';\n    return mahlePakovanjeVesti;\n  }\n\n  mahle_kompresori_vesti() {\n    const mahleKompresoriVesti = new Vest();\n    mahleKompresoriVesti.id = 'mahle-kompresori';\n    mahleKompresoriVesti.naslov = '<h1>Mahle kompresori klime</h1>';\n    mahleKompresoriVesti.slika = 'assets/slike/novouponudi/velika/kompresori.png';\n    mahleKompresoriVesti.tekst = '<p>Kompanija MAHLE ulazi na tržište kompresora klima uređaja. Sinonim kvaliteta i pouzdanosti kompanije MAHLE  ovi kompresori opravdavaju.</p> <p>Nivo klimatskog komfora definisan u današnjim vozilima je već na visokom nivou i nastaviće da raste u budućnosti. Međutim, klima uređaji imaju više uloga nego što je  udobna vožnja. Oni takođe igraju ključnu ulogu u pogledu bezbednosti. Pored održavanja vozača udobnim i opreznim, klima uređaj takođe odvlažuje vazduh u kabini i na taj način sprečava zamagljivanje prozora.</p> <p>U svom portfoliu MAHLE nudi veliki broj kompresora za veliki broj renomiranih proizvođača vozila, kao što su VW, AUDI, BMW, Mercedes, Opel...</p>';\n    return mahleKompresoriVesti;\n  }\n\n}\n","module.exports = \"<main>\\n  <section class=\\\"d-flex flex-xl-row-reverse flex-column centar skecija-mala\\\">\\n    <div class=\\\"pomeri-levo\\\">\\n      <i class=\\\"material-icons velicina-ikone\\\">\\n        place\\n      </i>\\n      <p class=\\\"header\\\">Prvomajska 61, Šabac</p>\\n    </div>\\n    <div class=\\\"pomeri-levo\\\">\\n      <i class=\\\"material-icons velicina-ikone\\\">\\n        email\\n      </i>\\n      <p class=\\\"header\\\">office@automaterijal.com</p>\\n    </div>\\n    <div class=\\\"pomeri-levo\\\">\\n      <i class=\\\"material-icons velicina-ikone\\\">\\n        phone\\n      </i>\\n      <p class=\\\"header\\\"> <a class=\\\"header\\\" href=\\\"tel:015334630\\\">015/334-630</a></p>\\n    </div>\\n  </section>\\n  <section>\\n    <carousel>\\n      <slide class=\\\"animated fadeIn\\\" *ngFor=\\\"let brand of mySlidePagePapers;let i = index\\\">\\n        <img src=\\\"{{brand.urlSlikePozadina}}\\\" alt=\\\"first slide\\\" style=\\\"display: block; width: 100%;\\\">\\n      </slide>\\n    </carousel>\\n  </section>\\n  <section class=\\\"d-flex flex-xl-row flex-column centar pozadina-bela skecija-srednja\\\">\\n    <div class=\\\"flex-fill mobilni\\\">\\n      <p class=\\\"inline-content paragraph text-center\\\">Posetite našu online prodavnicu i webshop katalog</p>\\n      <button color=\\\"primary\\\" class=\\\"inline-content inline-button\\\" (click)=\\\"goToShoping()\\\" mat-mini-fab>\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">shopping_cart</mat-icon>\\n      </button>\\n    </div>\\n    <div class=\\\"flex-fill\\\">\\n      <p class=\\\"inline-content paragraph text-center\\\">Pošaljite nam upit za deo koji trižite</p>\\n      <button color=\\\"primary\\\" (click)=\\\"otvoriUpitModal()\\\" class=\\\"inline-content inline-button\\\" mat-mini-fab>\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">question_answer</mat-icon>\\n      </button>\\n    </div>\\n  </section>\\n  <section class=\\\"sekcija\\\">\\n    <app-ponuda></app-ponuda>\\n  </section>\\n  <section class=\\\"pozadina-bela sekcija\\\">\\n    <app-vesti></app-vesti>\\n  </section>\\n</main>\"","module.exports = \".animated {\\n  -webkit-animation-duration: 1s;\\n  animation-duration: 1s;\\n  -webkit-animation-fill-mode: both;\\n  animation-fill-mode: both; }\\n\\n@-webkit-keyframes fadeIn {\\n  0% {\\n    opacity: 0; }\\n  100% {\\n    opacity: 1; } }\\n\\n@Keyframes fadeIn {\\n  0% {\\n    opacity: 0; }\\n  100% {\\n    opacity: 1; } }\\n\\n.fadeIn {\\n  -webkit-animation-name: fadeIn;\\n  animation-name: fadeIn; }\\n\\nimg {\\n  height: 300px;\\n  vw: 100 !important; }\\n\\n.sekcija {\\n  padding: 30px;\\n  padding-bottom: 40px; }\\n\\n.skecija-mala {\\n  padding: 10px; }\\n\\n.skecija-srednja {\\n  padding: 20px; }\\n\\n.inline-content {\\n  display: inline; }\\n\\n.paragraph {\\n  font-size: 1.01em;\\n  margin-right: 15px;\\n  text-align: center; }\\n\\n.centar {\\n  text-align: center; }\\n\\n.velicina-ikone {\\n  font-size: 0.8em;\\n  color: #345cac; }\\n\\n.header {\\n  display: inline;\\n  font-size: 0.9em;\\n  margin-left: 5px;\\n  color: black; }\\n\\n.pomeri-levo {\\n  margin-right: 15px; }\\n\\n@media only screen and (max-width: 1025px) {\\n  .paragraph {\\n    font-size: 1em;\\n    margin-right: 0px;\\n    text-align: left; }\\n  .inline-content {\\n    display: block; }\\n  .inline-button {\\n    margin-left: 44%;\\n    margin-bottom: 20px;\\n    margin-top: 5px; }\\n  .mobilni {\\n    justify-content: center;\\n    align-content: center;\\n    text-align: center; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Brend } from '../model/dto';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { UpitModalComponent } from 'src/app/shared/modal/upit-modal/upit-modal.component';\n\n@Component({\n  selector: 'app-dasboard',\n  templateUrl: './dasboard.component.html',\n  styleUrls: ['./dasboard.component.scss']\n})\nexport class DasboardComponent implements OnInit {\n  public mySlidePagePapers = this.vratiSveSlajdove();\n\n  ngOnInit() {}\n  constructor(private router: Router, public dialog: MatDialog) {}\n\n  goToShoping() {\n    this.router.navigateByUrl('/roba');\n  }\n\n  vratiSveSlajdove() {\n    const nizSlajdovi = [];\n    const febi = this.febi();\n    const shell = this.shell();\n    const kolbenschmidt = this.kolbenschmidt();\n    nizSlajdovi.push(febi, shell, kolbenschmidt);\n    return nizSlajdovi;\n  }\n\n  febi() {\n    const febi = new Brend();\n    febi.urlSlikePozadina = 'assets/slike/novouponudi/mala/kompresori.png';\n    return febi;\n   }\n\n   shell() {\n    const shell = new Brend();\n    shell.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/shell.png';\n      return shell;\n   }\n\n   kolbenschmidt() {\n    const kolbenschmidt = new Brend();\n    kolbenschmidt.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/msc.png';\n    return kolbenschmidt;\n   }\n\n   otvoriUpitModal() {\n    this.dialog.open(UpitModalComponent, {\n      width: '400px'\n    });\n   }\n}\n","module.exports = \"<h1>Izdvajamo iz ponude</h1>\\n<div class=\\\"d-flex flex-lg-row flex-column justify-content-center\\\">\\n  <div *ngFor=\\\"let vest of ponuda\\\">\\n    <mat-card class=\\\"example-card\\\" fxLayout=\\\"row\\\" fxLayoutWrap>\\n      <mat-card-header class=\\\"naslov\\\">\\n        <mat-card-title>\\n          <h2>{{vest.naslov}}</h2>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <img mat-card-image src=\\\"{{vest.opisSlika}}\\\" alt=\\\"Slika Ponude\\\">\\n      <mat-card-content class=\\\"card-sadrzaj\\\">\\n        <p class=\\\"opis-vesti\\\">\\n          {{vest.opis}}\\n        </p>\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"d-flex justify-content-center\\\">\\n        <button class=\\\"sirina button-glavni-100\\\" mat-raised-button (click)=\\\"detaljiVesti(vest.id)\\\">Pročitaj</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\\n</div>\"","module.exports = \"h1 {\\n  font-size: 1.6em;\\n  color: #345cac;\\n  margin-bottom: 20px;\\n  text-align: center; }\\n\\nh2 {\\n  font-size: 1.3em;\\n  font-weight: bold; }\\n\\n.naslov {\\n  justify-content: center; }\\n\\n.example-card {\\n  width: 80%;\\n  margin-left: 5%; }\\n\\n.opis-vesti {\\n  text-align: center;\\n  font-size: 0.97em; }\\n\\n.sirina {\\n  width: 200px; }\\n\\n.card-sadrzaj {\\n  height: 40px; }\\n\\n@media only screen and (max-width: 1025px) {\\n  .example-card {\\n    width: 95%;\\n    margin-left: 10px;\\n    margin-top: 10px; }\\n  h1 {\\n    font-size: 1.5em; }\\n  h2 {\\n    font-size: 1.2em; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { VestiNaslovna } from '../../model/dto';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ponuda',\n  templateUrl: './ponuda.component.html',\n  styleUrls: ['./ponuda.component.scss']\n})\nexport class PonudaComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  public ponuda = [];\n\n  ngOnInit() {\n    this.vratiSvePonude();\n  }\n  detaljiVesti(id: string) {\n    this.router.navigate(['/naslovna/' + id]);\n  }\n\n  vratiSvePonude() {\n    const shell = this.shell();\n    const febi = this.febi();\n    const mahle = this.mahle();\n    const ks = this.ks();\n    this.ponuda.push(shell, febi, mahle, ks);\n  }\n\n  shell(): VestiNaslovna {\n    const shell = new VestiNaslovna();\n    shell.id = 'shell-u-ponudi';\n    shell.naslov = 'Shell';\n    shell.opis = 'Shell – globalni lider u proizvodnji ulja I maziva';\n    shell.opisSlika = 'assets/slike/novouponudi/mala/shell.png';\n    return shell;\n  }\n\n  febi(): VestiNaslovna {\n    const febi = new VestiNaslovna();\n    febi.id = 'febi-u-ponudi';\n    febi.naslov = 'Febi';\n    febi.opis = 'Više od 45000 proizvoda u službi održavanja vašeg vozila';\n    febi.opisSlika = 'assets/slike/novouponudi/mala/febi.png';\n    return febi;\n  }\n\n  mahle(): VestiNaslovna {\n    const mahle = new VestiNaslovna();\n    mahle.id = 'mahle-u-ponudi';\n    mahle.naslov = 'Mahle';\n    mahle.opis = 'Od 1920 u srži automobila';\n    mahle.opisSlika = 'assets/slike/novouponudi/mala/mahle.png';\n    return mahle;\n  }\n\n  ks(): VestiNaslovna {\n    const ks = new VestiNaslovna();\n    ks.id = 'ks-u-ponudi';\n    ks.naslov = 'Kolbenschmidt';\n    ks.opis = 'Godine poverenja su preporuka';\n    ks.opisSlika = 'assets/slike/novouponudi/mala/ks.png';\n    return ks;\n  }\n\n}\n","module.exports = \"<h1>Vesti</h1>\\n<div class=\\\"d-flex flex-lg-row flex-column\\\">\\n  <div class=\\\"d-flex flex-lg-row flex-column justify-content-center\\\" *ngFor=\\\"let vest of ponuda\\\">\\n    <mat-card class=\\\"example-card\\\" fxLayout=\\\"row\\\" fxLayoutWrap>\\n      <mat-card-header class=\\\"naslov\\\">\\n        <mat-card-title>\\n          <h2>{{vest.naslov}}</h2>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <img mat-card-image src=\\\"{{vest.opisSlika}}\\\" alt=\\\"Slika vesti\\\">\\n      <mat-card-content class=\\\"card-sadrzaj\\\">\\n        <p class=\\\"opis-vesti\\\">\\n          {{vest.opis}}\\n        </p>\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"d-flex justify-content-center\\\">\\n        <button class=\\\"sirina button-glavni-100\\\" mat-raised-button (click)=\\\"detaljiVesti(vest.id)\\\"\\n          color=\\\"primary\\\">Pročitaj</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\\n</div>\"","module.exports = \"h1 {\\n  font-size: 1.6em;\\n  color: #345cac;\\n  margin-bottom: 20px;\\n  text-align: center; }\\n\\nh2 {\\n  font-size: 1.3em;\\n  font-weight: bold; }\\n\\n.naslov {\\n  justify-content: center; }\\n\\n.example-card {\\n  width: 80%;\\n  margin-left: 5%; }\\n\\n.opis-vesti {\\n  text-align: center;\\n  font-size: 0.97em; }\\n\\n.sirina {\\n  width: 200px; }\\n\\n.card-sadrzaj {\\n  height: 40px; }\\n\\n@media only screen and (max-width: 1025px) {\\n  .example-card {\\n    width: 95%;\\n    margin-left: 10px;\\n    margin-top: 10px; }\\n  h1 {\\n    font-size: 1.5em; }\\n  h2 {\\n    font-size: 1.2em; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { VestiNaslovna } from '../../model/dto';\n\n@Component({\n  selector: 'app-vesti',\n  templateUrl: './vesti.component.html',\n  styleUrls: ['./vesti.component.scss']\n})\nexport class VestiComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  public ponuda = [];\n\n  ngOnInit() {\n    this.vratiSvePonude();\n  }\n  detaljiVesti(id: string) {\n    this.router.navigate(['/naslovna/' + id]);\n  }\n\n  vratiSvePonude() {\n    const mahlePakovanjeVest = this.vestNovoPakovanjeMahle();\n    const mahleKompresori = this.vestMahleKompresori();\n    this.ponuda.push(mahlePakovanjeVest, mahleKompresori);\n  }\n\n  vestNovoPakovanjeMahle() {\n    const vest = new VestiNaslovna();\n    vest.id = 'mahle-pakovanje';\n    vest.naslov = 'Novo Pakovanje Mahle';\n    vest.opis = 'Novi dizajn ambalaže za MAHLE Aftermarket proizvode od 2019. godine';\n    vest.opisSlika = 'assets/slike/novouponudi/mala/mahle-pakovanje.png';\n    return vest;\n  }\n\n  vestMahleKompresori() {\n    const vest = new VestiNaslovna();\n    vest.id = 'mahle-kompresori';\n    vest.naslov = 'Mahle kompresori klime';\n    vest.opis = 'Novo u asortimanu - kompresori klime Mahle';\n    vest.opisSlika = 'assets/slike/novouponudi/mala/kompresori.png';\n    return vest;\n  }\n}\n","module.exports = \"<main>\\n    <h1>Kontaktirajte nas</h1>\\n  <div class=\\\"pozadina-bela \\\">\\n    <div class=\\\"d-flex flex-fill flex-column flex-lg-row informacije\\\">\\n      <div class=\\\"align-self-center flex-fill informacije-deo\\\">\\n        <h2>Informacije</h2>\\n      </div>\\n      <div class=\\\"granica-informacije\\\"></div>\\n      <div class=\\\"flex-fill informacije-deo\\\">\\n        <i class=\\\"material-icons  boja-glavna-100\\\">\\n          place\\n        </i>\\n        <div class=\\\"adresa\\\">\\n          <p>Prvomajska 61</p>\\n          <p>15000 Šabac</p>\\n        </div>\\n      </div>\\n      <div class=\\\"granica-informacije\\\"></div>\\n      <div class=\\\"flex-fill informacije-deo\\\">\\n        <i class=\\\"material-icons  boja-glavna-100\\\">\\n          access_alarm\\n        </i>\\n        <div class=\\\"d-flex flex-row adresa\\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Radnim danom:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> 08-18h</li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex flex-row \\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Subotom:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> 09-15h</li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex flex-row \\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Nedelja:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li>Neradan dan</li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"granica-informacije\\\"></div>\\n      <div class=\\\"flex-fill informacije-deo\\\">\\n        <i class=\\\"material-icons boja-glavna-100\\\">\\n          phone\\n        </i>\\n        <div class=\\\"d-flex flex-row \\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Malpoprodaja:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li><a class=\\\"telefon\\\" href=\\\"tel:015334630\\\">015/334-630</a></li>\\n              <li><a class=\\\"telefon\\\" href=\\\"tel:015310049\\\">015/310-049</a></li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex flex-row veleprodaja-dole\\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Veleprodaja:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> <a class=\\\"telefon\\\" href=\\\"tel:015319000\\\">015/319-000</a></li>\\n              <li class=\\\"telefon\\\">015/319-001 Fax </li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex flex-row veleprodaja-dole\\\">\\n          <div class=\\\"sirina-telefona\\\">\\n            <p class=\\\"telefoni\\\">Email:</p>\\n          </div>\\n          <div>\\n            <ul>\\n              <li> office@automaterijal.com</li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"google-mapa\\\">\\n    <iframe\\n      src=\\\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d2833.8797026959655!2d19.695872!3d44.742471!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x6fb532b6b846f3cf!2sAutomaterijal!5e0!3m2!1sen!2sus!4v1548771004118\\\"\\n      frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n  </div>\\n\\n  <div class=\\\"pozadina-bela\\\">\\n    <div class=\\\"d-flex flex-fill flex-column flex-lg-row informacije\\\">\\n      <div class=\\\"flex-fill poruke-deo\\\">\\n        <h2>Pošalji poruku</h2>\\n        <div class=\\\"poruka-div\\\">\\n          <p class=\\\"poruka-informacije\\\">\\n            <i class=\\\"material-icons poruka\\\">\\n              mail_outline\\n            </i>\\n            Pošta </p>\\n          <p class=\\\"poruka-objasnjenje\\\"> office@automaterijal.com </p>\\n        </div>\\n        <div class=\\\"poruka-div\\\">\\n          <p class=\\\"poruka-informacije\\\">\\n            <i class=\\\"material-icons poruka\\\">\\n              chat_bubble_outline\\n            </i>\\n            Pratite nas </p>\\n          <div>\\n            <a href=\\\"https://sr-rs.facebook.com/automaterijal/\\\" target=\\\"_blank\\\" mat-fab id=\\\"drustvena-mreza\\\"\\n              matTooltip=\\\"Facebook\\\" color=\\\"primary\\\">f</a>\\n            <a href=\\\"https://www.instagram.com/automaterijal/\\\" target=\\\"_blank\\\" mat-fab id=\\\"drustvena-mreza\\\"\\n              class=\\\"razmak-drus\\\" matTooltip=\\\"Instagram\\\" color=\\\"primary\\\">\\n              <i class=\\\"material-icons instagram\\\">\\n                photo_camera\\n              </i>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"flex-fill\\\">\\n        <form role=\\\"form\\\" [formGroup]=\\\"porukaForm\\\">\\n          <div class=\\\"forma-poruke\\\">\\n            <table cellspacing=\\\"0\\\">\\n              <tr>\\n                <td>\\n                  <mat-form-field>\\n                    <input matInput formControlName=\\\"ime\\\" placeholder=\\\"Ime\\\">\\n                  </mat-form-field>\\n                </td>\\n                <td>\\n                  <mat-form-field>\\n                    <input matInput formControlName=\\\"prezime\\\" placeholder=\\\"Prezime\\\">\\n                  </mat-form-field>\\n                </td>\\n              </tr>\\n            </table>\\n            <table cellspacing=\\\"0\\\">\\n              <tr>\\n                <td>\\n                  <mat-form-field>\\n                    <input matInput formControlName=\\\"firma\\\" placeholder=\\\"Ima firme\\\">\\n                  </mat-form-field>\\n                </td>\\n                <td>\\n                  <mat-form-field>\\n                    <input matInput type=\\\"tel\\\" formControlName=\\\"telefon\\\" placeholder=\\\"Broj telefona\\\">\\n                  </mat-form-field>\\n                </td>\\n              </tr>\\n            </table>\\n            <div>\\n              <mat-form-field class=\\\"duzina-input\\\">\\n                <input matInput type=\\\"email\\\" formControlName=\\\"posta\\\" placeholder=\\\"Pošta\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"porukaSubmited && p.posta.errors\\\">\\n                <div *ngIf=\\\"p.posta.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Pošta je obavezna</p>\\n                </div>\\n                <div *ngIf=\\\"p.posta.errors.email\\\">\\n                  <p class=\\\"upozorenje\\\">Pošta nije validna</p>\\n                </div>\\n              </div>\\n            </div>\\n            <div>\\n              <mat-form-field class=\\\"duzina-input\\\">\\n                <textarea matInput formControlName=\\\"poruka\\\" rows=\\\"8\\\" placeholder=\\\"Poruka\\\"></textarea>\\n              </mat-form-field>\\n              <div *ngIf=\\\"porukaSubmited && p.poruka.errors\\\">\\n                <div *ngIf=\\\"p.poruka.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Poruka je obavezna</p>\\n                </div>\\n                <div *ngIf=\\\"p.poruka.errors.minlength\\\">\\n                  <p class=\\\"upozorenje\\\">Poruka mora imate minimalno 3 karaktera</p>\\n                </div>\\n              </div>\\n            </div>\\n            <button mat-flat-button class=\\\"duzina-input\\\" (click)=\\\"posaljiPoruku()\\\" color=\\\"primary\\\">Pošalji</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"h1 {\\n  text-align: center;\\n  margin-top: 1em; }\\n\\nh2 {\\n  color: #345cac !important;\\n  margin-top: 1em; }\\n\\nh3 {\\n  color: #345cac; }\\n\\nul {\\n  display: inline;\\n  text-align: left;\\n  margin: 0px;\\n  padding: 0px; }\\n\\nli {\\n  color: #263238;\\n  margin-top: 2px; }\\n\\ntd {\\n  margin: 0px !important;\\n  padding: 0px !important; }\\n\\niframe {\\n  width: 80%;\\n  height: 450px; }\\n\\n.telefon {\\n  display: inline;\\n  font-size: 1em;\\n  margin-left: 5px;\\n  color: black; }\\n\\n.informacije {\\n  width: 100%;\\n  margin-top: 50px; }\\n\\n.informacije-deo {\\n  padding: 10px;\\n  text-align: center; }\\n\\n.poruka-div {\\n  margin-top: 40px; }\\n\\n.poruka {\\n  color: #345cac !important;\\n  font-size: 1.5em;\\n  position: relative;\\n  top: 5px; }\\n\\n.poruke-deo {\\n  position: relative;\\n  left: 16%; }\\n\\n.poruka-informacije {\\n  display: inline;\\n  font-size: 1.1em; }\\n\\n.poruka-objasnjenje {\\n  color: #345cac !important; }\\n\\n#drustvena-mreza {\\n  width: 45px;\\n  height: 45px;\\n  font-size: 1.8em; }\\n\\n#drustvena-mreza:hover {\\n  background-color: #547aa1; }\\n\\n.razmak-drus {\\n  margin-left: 10px; }\\n\\n.instagram {\\n  top: -4px;\\n  position: relative; }\\n\\n.mat-fab .mat-button-wrapper {\\n  padding: 0px !important;\\n  display: inline-block;\\n  line-height: 24px;\\n  border-radius: 50%; }\\n\\n.granica-informacije {\\n  border-right: 1px solid #dfe5e7;\\n  border-left: 1px solid #dfe5e7;\\n  margin-top: 30px;\\n  height: 130px; }\\n\\n.telefoni {\\n  color: #263238; }\\n\\n.sirina-telefona {\\n  width: 125px;\\n  margin-left: 5%;\\n  text-align: left; }\\n\\n.veleprodaja-dole {\\n  margin-top: 15px; }\\n\\n.adresa {\\n  margin-top: 10px; }\\n\\n.google-mapa {\\n  margin-top: 5px;\\n  margin-left: 15%;\\n  height: 405px; }\\n\\n.forma-poruke {\\n  box-shadow: 0 0px 15px 2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  width: 500px;\\n  padding: 10px;\\n  margin-top: 20px;\\n  margin-left: 15%;\\n  margin-bottom: 50px;\\n  text-align: center; }\\n\\n.duzina-input {\\n  width: 350px;\\n  margin-bottom: 1rem; }\\n\\n.upozorenje {\\n  text-align: left;\\n  font-size: 0.8em !important;\\n  color: red;\\n  margin-top: -20px;\\n  margin-bottom: 0px;\\n  padding-left: 65px; }\\n\\n@media only screen and (max-width: 1000px) {\\n  h2 {\\n    padding-left: 0em; }\\n  iframe {\\n    width: 100%;\\n    height: 350px; }\\n  .poruke-deo {\\n    position: relative;\\n    left: 1em; }\\n  .google-mapa {\\n    height: 305px;\\n    margin-top: 5px;\\n    margin-left: 0px; }\\n  .granica-informacije {\\n    border-right: 0px solid #dfe5e7 !important;\\n    border-left: 0px solid #dfe5e7 !important;\\n    height: 60%; }\\n  .informacije[_ngcontent-c9] {\\n    width: 100%;\\n    margin-left: 0%;\\n    margin-top: 50px; }\\n  .informacije-deo {\\n    width: 100%;\\n    text-align: center;\\n    font-weight: 500; }\\n  .forma-poruke {\\n    width: 99%;\\n    padding: 0px;\\n    margin-left: 2px;\\n    margin-right: 2px;\\n    margin-top: 20px;\\n    margin-bottom: 50px;\\n    text-align: center; }\\n  .my-snack-bar {\\n    background-color: #b71c1c !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EmailService } from 'src/app/shared/service/email.service';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Poruka } from '../model/dto';\nimport { NotifikacijaService } from 'src/app/shared/service/notifikacija.service';\nimport { MatSnackBarKlase } from 'src/app/shared/model/konstante';\n\n@Component({\n  selector: 'app-kontakt',\n  templateUrl: './kontakt.component.html',\n  styleUrls: ['./kontakt.component.scss']\n})\nexport class KontaktComponent implements OnInit {\n  public porukaForm: FormGroup;\n  public porukaSubmited = false;\n\n  private alive = true;\n  public ucitavanje = false;\n\n  ngOnInit() {\n    this.inicijalizujForme();\n    }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private emailServis: EmailService,\n    private notifikacijaServis: NotifikacijaService\n  ) {}\n\n  inicijalizujForme() {\n    this.porukaForm = this.formBuilder.group({\n      ime: [''],\n      prezime: [''],\n      firma: [''],\n      telefon: [''],\n      posta: ['', [Validators.required, Validators.email]],\n      poruka: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n\n  posaljiPoruku() {\n    this.porukaSubmited = true;\n    if (this.porukaForm.invalid) {\n      return;\n    }\n    const poruka = this.popuniPoruku();\n    this.emailServis.posaljiPoruku(poruka)\n    .pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) =>  throwError(error)),\n      finalize(() => this.ucitavanje = false)\n    ).subscribe(res => {\n    }, error => {\n      console.log('Error pri slanju poruke', error);\n      this.notifikacijaServis.notify('Poruka nije poslata, pokusajte kasnije.', MatSnackBarKlase.Crvena);\n    });\n    console.log('Poruka uspesno poslat');\n    this.notifikacijaServis.notify('Poruka uspešno poslatata', MatSnackBarKlase.Plava);\n    this.porukaForm.reset();\n    this.porukaSubmited = false;\n  }\n\n  popuniPoruku(): Poruka {\n    const poruka = new Poruka();\n    poruka.ime = this.p.ime.value;\n    poruka.prezime = this.p.prezime.value;\n    poruka.firma = this.p.firma.value;\n    poruka.telefon = this.p.telefon.value;\n    poruka.posta = this.p.posta.value;\n    poruka.poruka = this.p.poruka.value;\n    return poruka;\n  }\n  // convenience getter for easy access to form fields\n  get p() { return this.porukaForm.controls; }\n\n}\n","export class Poruka {\r\n    ime?: string;\r\n    prezime?: string;\r\n    firma?: string;\r\n    telefon?: string;\r\n    posta?: string;\r\n    poruka?: string;\r\n}\r\n\r\nexport class Upit {\r\n    emailTelefon?: string;\r\n    markaModel?: string;\r\n    godiste?: string;\r\n    kubikaza?: string;\r\n    kilovati?: string;\r\n    gorivo?: any;\r\n    pogon?: any;\r\n    interesujeMe?: any;\r\n    drugo?: string;\r\n}\r\n\r\nexport class Brend {\r\n    ime?: string;\r\n    urlSlikeLogo?: string;\r\n    urlSlikePozadina?: string;\r\n    opis?: string;\r\n}\r\n\r\n\r\nexport class VestiNaslovna {\r\n    id?: string;\r\n    naslov?: string;\r\n    opis?: string;\r\n    opisSlika?: string;\r\n    slika?: string;\r\n    vest?: string;\r\n}\r\n\r\nexport class Vest {\r\n    id?: string;\r\n    naslov?: string;\r\n    slika?: string;\r\n    tekst?: string;\r\n}\r\n","module.exports = \"<main>\\n  <h1>O nama</h1>\\n  <div class=\\\"d-flex flex-column flex-lg-row pozadina-bela\\\">\\n    <div class=\\\"parcele\\\">\\n      <div class=\\\"parcela-ikona\\\">\\n        <i class=\\\"material-icons ikona\\\">\\n          account_balance\\n        </i>\\n        <h2>Istorija</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"parcele\\\">\\n      <p>\\n        <b>AUTOMATERIJAL d.o.o. </b> Šabac je osnovano 1990. godine i, sada već preko 29 godina, bavi se snabdevanjem\\n        našeg tržišta kvalitetnim delovima, mazivima materijalom za održavanje motornih vozila.\\n      </p>\\n      <p class=\\\"drugi-stih\\\">Poslujemo kao maloprodaja i veleprodaja. Kao veleprodaja razvili smo svoju prodajnu mrežu na\\n        regionu Zapadne Srbije (mačvanski, sremski, kolubarski i zlatiborski okrug). Naši partneri u ovom poslu su\\n        fizička lica, ovlašćeni i nezavisni serviseri, vlasnici voznih parkova, proizvođačka industrijska preduzeća,\\n        veleprodaje i maloprodaje delova i materijala za popravku motornih vozila.\\n      </p>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex flex-column-reverse flex-lg-row\\\">\\n    <div class=\\\"parcele\\\">\\n      <p>\\n        Mi zadovoljavamo potrebe naših partnera koje se najvećim delom odnose na delove i materijal za održavanje i\\n        popravku motora i stajnog trapa, prvenstveno putničkih motornih vozila proizvedenih u Nemačkoj a sve više smo\\n        snabdeveni i odgovarajućim artiklima za vozila proizvedena u drugim evropskim zemljama, npr.: Škoda, Fiat,\\n        Renault, Peugeot, Citroen, Alfa Romeo, Saab, Volvo itd., kao i za vozila proizvedena u Japanu, Koreji i širom\\n        sveta: Toyota, Honda, Mazda, Nissan, Mitsubishi, Suzuki, Kia, Hyundai, Chevrolet - Daewoo, Chrysler, Rover,\\n        Daihatsu, Subaru, itd.\\n      </p>\\n      <p class=\\\"drugi-stih\\\">Uz našu robu uvek plasiramo i dodatnu uslugu, prvenstveno se to odnosi na svaku vrstu pomoći\\n        u pronalaženju odgovarajućeg artikla i pored svog angažmana u tu svrhu obezbeđujemo odgovarajuću dokumentaciju i\\n        kataloge za servisere i trgovce. Zatim, organizujemo i realizujemo razne vrste obuka za servisere i trgovce, u\\n        saradnji sa proizvođačima – uvoznicima učestvujemo u ugovornom opremanju poslovnog – radnog prostora naših\\n        partnera, istrajavamo u potpunom realizovanju svih ugovorenih garancija i drugo.\\n      </p>\\n    </div>\\n    <div class=\\\"parcele\\\">\\n      <div class=\\\"parcela-ikona\\\">\\n        <i class=\\\"material-icons ikona\\\">\\n          work\\n        </i>\\n        <h2>Usluge</h2>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex flex-column flex-lg-row pozadina-bela\\\">\\n    <div class=\\\"parcele\\\">\\n      <div class=\\\"parcela-ikona\\\">\\n        <i class=\\\"material-icons ikona\\\">\\n          build\\n        </i>\\n        <h2>Proizvodi</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"parcele\\\">\\n      <p>\\n        Za neke brendove smo se zaštitili kao ovlašćeni uvoznici i distributeri za definisanu teritoriju, a sa nekim\\n        konkurentima i sarađujemo, tako da smo vremenom izgradili poziciju nezaobilaznog faktora na svom terenu u\\n        oblasti kojom se bavimo. AUTOMATERIJAL d.o.o. je direktni uvoznik, iz Nemačke, od proizvođača \\\"Kolbenschmidt\\\",\\n        \\\"Pierburg\\\", i \\\"Victor Reinz\\\", iz Italije \\\"DeDaX\\\", zastupnik koncerna \\\"Bilstein\\\" i \\\"Febi\\\", uključujući i brend\\n        \\\"Blue Print\\\", regionalni zastupnik - ovlašćeni distributer „Magneti Marelli“, regionalni zastupnik - ovlašćeni\\n        distributer „Shell“, „Castrol“ „TOTAL“, „Fuchs“, „LukOil“ i „ENEOS“ maziva, ovlašćeni distributer i serviser\\n        „energizer“ akumulatora, regionalni zastupnik - originalih BMW rezervnih delova. U našoj prodaji se nalaze\\n        proizvodi raznih renomiranih proizvodjača rezervnih delova i opreme.</p>\\n    </div>\\n  </div>\\n  <div class=\\\"pozadina-bela\\\">\\n    <div class=\\\"d-flex justify-content-center logoi\\\">\\n      <div class=\\\"owl-carousel-moj\\\">\\n        <owl-carousel [options]=\\\"mySlideOptions\\\"[carouselClasses]=\\\"['owl-theme']\\\">\\n          <div class=\\\"item\\\" *ngFor=\\\"let brand of mySlideBrands;let i = index\\\">\\n            <div class=\\\"dobavljaci-logo\\\">\\n                <button mat-button class=\\\"dugme\\\" (click)=\\\"otvoriDialog(brand)\\\">\\n                <img width=\\\"65px\\\" height=\\\"65px\\\" src={{brand.urlSlikeLogo}} />\\n              </button>\\n            </div>\\n          </div>\\n        </owl-carousel>\\n      </div>\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"h1 {\\n  text-align: center;\\n  margin-top: 1em;\\n  margin-bottom: 1em; }\\n\\nh2 {\\n  color: #345cac; }\\n\\np {\\n  text-align: justify; }\\n\\n.parcele {\\n  width: 50%;\\n  padding: 3%; }\\n\\n.parcela-ikona {\\n  text-align: center;\\n  position: relative;\\n  bottom: -30%; }\\n\\n.drugi-stih {\\n  margin-top: 1rem; }\\n\\n.ikona {\\n  font-size: 3rem;\\n  color: #345cac;\\n  text-align: center; }\\n\\n.dobavljaci-logo {\\n  width: 65px;\\n  height: 65px; }\\n\\n.logoi {\\n  width: 80%;\\n  margin-left: 10%; }\\n\\n.owl-carousel-moj {\\n  width: 930px !important; }\\n\\n.dugme {\\n  padding: 0 11px; }\\n\\n@media only screen and (max-device-width: 1025px) {\\n  .owl-carousel-moj {\\n    width: 500px !important; }\\n  .parcele {\\n    width: 100%;\\n    padding: 3%; }\\n  .logoi {\\n    width: 100%;\\n    margin-left: 0%; }\\n  .owl-carousel-moj {\\n    width: 100% !important; } }\\n\\n@media only screen and (max-width: 1025px) {\\n  .owl-carousel-moj {\\n    width: 100% !important; }\\n  .parcele {\\n    width: 100%;\\n    padding: 3%; }\\n  .logoi {\\n    width: 100%;\\n    margin-left: 0%; } }\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Brend } from '../model/dto';\nimport { MatDialog } from '@angular/material';\nimport { BrendoviModalComponent } from 'src/app/shared/modal/brendovi-modal/brendovi-modal.component';\nimport { e } from '@angular/core/src/render3';\n\n@Component({\n  selector: 'app-o-nama',\n  templateUrl: './o-nama.component.html',\n  styleUrls: ['./o-nama.component.scss']\n})\nexport class ONamaComponent implements OnInit {\n  innerWidth;\n  public mySlideBrands = this.vratiSveBrendove();\n  public mySlideOptions = null;\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.innerWidth = window.innerWidth;\n    this.changeSlideConfiguration();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.innerWidth = window.innerWidth;\n    this.changeSlideConfiguration();\n  }\n\n  changeSlideConfiguration() {\n    if (this.innerWidth < 500) {\n      this.mySlideOptions = {\n        items: 3, margin: 5,\n        dots: true, nav: false, autoplay: true,\n        autoplayTimeout: 2500, rewind: true\n      };\n    } else {\n      this.mySlideOptions = {\n        items: 7, margin: 20,\n        dots: true, nav: false, autoplay: true,\n        autoplayTimeout: 2500, rewind: true\n      };\n    }\n  }\n\n  otvoriDialog(brend: Brend) {\n    this.dialog.open(BrendoviModalComponent, {\n      width: '700px',\n      data: brend\n    });\n  }\n\n  vratiSveBrendove() {\n    const nizOdBrendova = [];\n    const febi = this.febi();\n    const shell = this.shell();\n    const mahle = this.mahle();\n    const kolbenschmidt = this.kolbenschmidt();\n    const pierburg = this.pierburg();\n    const victorReinz = this.victorReinz();\n    const bluePrint = this.bluePrint();\n    const mm = this.mm();\n    nizOdBrendova.push(febi, shell, mahle, victorReinz, kolbenschmidt, pierburg, mm, bluePrint);\n    return nizOdBrendova;\n  }\n\n  febi() {\n    const febi = new Brend();\n    febi.ime = 'Febi';\n    febi.urlSlikeLogo = 'assets/slike/brendovi/logo/febi.png';\n    febi.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/febi.png';\n    febi.opis = '<p>Febi bilstein je  osnovan davne 1844 godine. Danas je jedan od vodećih svetskih proizvođača i dobavljača rezervnih delova za putnička i komercijalna vozila na nezavisnom tržištu rezervnih delova.  Više od 170 godina održava kontinuitet, kvalitet, uslugu, pouzdanost i inovacije. Asortiman cini 30.000 razlicitih rezervnih delova. Osim toga, febi ima svoja predstavništva ili iskusnog partnera u preko 69 zemalja. </p> <p>Od upravljačke, motorne i kočne tehnike, tehnike šasija i učvršćivanja točkova do autoelektrike i pneumatike i programa febi plus – kod firme febi bilstein ćete naći sve za profesionalno servisiranje - putničkih vozila, kamiona, autobusa, prikolica, poluprikolica i malih transportera svih aktuelnih marki i modela.</p> <p class=\"proba\">Febi bilstein stoji za proizvode koji ispunjavaju najviše zahteve kvaliteta izrade i bezbednosti ugradnje. Kvalitetom, brzinom i postavljanjem trendova febi bilstein vam daje odlučujući podsticaj na globalnom tržištu. Zato što kao premium marka ima obavezu da ispuni zahteve svojih kupaca – svakodnevno.</p> <p>AUTOMATERIJAL d.o.o - je zastupnik koncerna Febi Bilstein i Blue Printa za zapadnu Srbiju.</p>';\n    return febi;\n  }\n\n  shell() {\n    const shell = new Brend();\n    shell.ime = 'Shell';\n    shell.urlSlikeLogo = 'assets/slike/brendovi/logo/shell.png';\n    shell.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/shell.png';\n    shell.opis = '<p> Kompanije Shell ima iza sebe 70 godina u inovacijama i stoga je broj jedan dobavljač lubrikanata. Poznata činjenica je da neki od  svetskih proizvođaća automobila preferiraju Shell motorno ulje prvo punjenje novih vozila koja izlaze iz fabike. Kompletan asortiman uključujući sintetičke proizvode visokih performansi može da zadovolji sve poterbe i aplikacije koje vam trebaju.</p><p>AUTOMATERIJAL d.o.o je ovlašceni distributer Shell ulja. </p>'\n    return shell;\n  }\n\n  victorReinz() {\n    const vr = new Brend();\n    vr.ime = 'Victor Reinz';\n    vr.urlSlikeLogo = 'assets/slike/brendovi/logo/vik.png';\n    vr.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/victor-reinz.png';\n    vr.opis = '<p> Victor Reinz je Nemačka kompanija koja donosi inovativne tehnologije zaptivanja vrhunskog kvaliteta. Više od 80 godina brend Victor Reinz je sinonim za vrhunske zaptivače i semeringe. Svi rezervni delovi u asortimanu ispunjavaju visoke standarde kvaliteta OEM. Poslednjih godina na tržištu su zauzeli vodeću poziciju, kao proizvođači dihtunga glave, garniture dihtunga i semeringa.</p><p > Skoro sve poznate marke i modeli proizvođača automobila širom sveta su opremljeni sa profesionalnim zaptivnim rešenjima iz Victor Reinza u oblasti motora i izduvnih grasova.</p>'\n    return vr;\n  }\n\n  mahle() {\n    const mahle = new Brend();\n    mahle.ime = 'Mahle';\n    mahle.urlSlikeLogo = 'assets/slike/brendovi/logo/mahle.png';\n    mahle.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/mahle.png';\n    mahle.opis = '<p>Marka MAHLE označava rezervne delove u kvalitetu originalne opreme duž celog pogonskog sklopa - od komponenti motora, filtracije i perifernih uređaja motora do upravljanja toplotom i mehatronike. Takođe predstavlja visokokvalitetnu specijalnu opremu za održavanje i servis. </p> <p>Marka je podržana od strane MAHLE-a, vodećeg svetskog dobavljača automobilske opreme, koji snabdeva tržište automobilske opreme visokokvalitetnim proizvodima zahvaljujući OE kompetenciji, vodeći istraživački i razvojni rad, kao i svoju međunarodnu logističku mrežu. </p>'\n    return mahle;\n  }\n\n  kolbenschmidt() {\n    const kolbenschmidt = new Brend();\n    kolbenschmidt.ime = 'Kolbenschmidt';\n    kolbenschmidt.urlSlikeLogo = 'assets/slike/brendovi/logo/ks.png';\n    kolbenschmidt.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/ks.png';\n    kolbenschmidt.opis = '<p> Kolbenschmidt razvija i proizvodi klipove za benzin i dizel motore za putnicka i teretna vozila. Jedan je od najistaknutijih igraca u ovom segmentu. Ostali proizvodi uključuju ventile, vođice ventila, karike, ležajeve radilica, bregaste osovine.. </p> <p class=\"probam\">Smanjenje potrošnje goriva i emisija izduvnih gasova su godinama glavni pokretač razvoja  novih vrsta klipova.</p> <p class=\"proba\"> Već godinama, mnogi važni dileri originalnih delova su redovne mušterije Kolbenschmidt-a. Glavna tržišta su Evropa, Serverna i Južna Amerika, i Azija.';\n    return kolbenschmidt;\n  }\n\n  pierburg() {\n    const pierburg = new Brend();\n    pierburg.ime = 'Pierburg';\n    pierburg.urlSlikeLogo = 'assets/slike/brendovi/logo/pirb.png';\n    pierburg.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/pb.png';\n    pierburg.opis = '<p>Pierburg, kao dobavljač prve klase, tradicionalno je jedan od najbližih partnera u autobomilskoj industriji. Osnovan je 1909. godine, kao trgovina čelika u Berlinu. 1928. godine počinje sa proizvodnjom karburatora i uskoro postaje jedini snabdevač svih nemačkih automobila i mnogih svetskih proizvođača motornih vozila i proizvođača motora. Pierburg razvija inovativne komponente i sistemska rešenja sa priznatim nadležnostima u oblasti dovoda vazduha i kontrole emisija. Svi ovi proizvodi, pumpe goriva, egr ventil, nepovratni ventil, protokomeri o vakuum pumpe, odgovaraju visokim zahtevima tržišta i standardima kvaliteta.</p> <p> Kako u prošlosti tako i sad, Pierburg aktivno oblikuje budućnost automobila.</p>';\n    return pierburg;\n  }\n\n  mm() {\n    const mm = new Brend();\n    mm.ime = 'Magenti Marreli';\n    mm.urlSlikeLogo = 'assets/slike/brendovi/logo/mm.png';\n    mm.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/magneti-marelli.png';\n    mm.opis = '<p>Magneti Mareilli je međunarodna grupa posvećena projektovanju i proizvodnji sistema visoke tehnologije i komponenti za automobilsku indrustriju. Osnovana je 1919. godine, sa kapitalom potpisana na dva jednaka dela između Fiat-a i kompanije Ercole Marelli. Sa 38.000 zaposlenih, 89 proizvodnih pogona, prisutni su u 19 zemalja i snabdevaju sve najvažnije proizvođače u Evropi, Severnoj i Južnoj Americi i Aziji. Cilj Magenti Marelli-ja je da bude na raspolaganju kupcima po pristupačnoj ceni, spajanjem visokog kvaliteta i visoke tehnologije.</p> <p> Magneti Marelli je prvi stvorio ksenonsko svetlo 1991. godine, dajući novu dimenziju frontalnoj rasvetli. Od 2010. godine, postaje dobavljač Mercedes-Benz za sve LED farove sa prilagodljivom funkcijom za svetlo.</p> <p>2010. godine Ministartsvo za kulturnu baštinu i aktivnost Italije nagrađuje Magneti Marelli sa \"Deklaracija o istorijskom značaju\".</p>';\n    return mm;\n  }\n\n  bluePrint() {\n    const bp = new Brend();\n    bp.ime = 'Blue Print';\n    bp.urlSlikeLogo = 'assets/slike/brendovi/logo/bp.png';\n    bp.urlSlikePozadina = 'assets/slike/brendovi/pagepaper/blueprint.png';\n    bp.opis = '<p>Blue Print je pravi izbor za kvalitetne rezervne delove za azijske, američke, britanske automobile i laka komercijalna vozila. Blue Print pruža aftermarket visoko preciznim komponentama kao i tehničkim i informacijskim rešenjima za više od 160 različitih tipova proizvoda.</p> <p>Širok asortiman od više od 23.000 artikala dostupnih u preko 160 vrsta proizvoda pod jednom robnom markom, uključujući i OE proizvode svrstava Blue Print kao jednog od brendova sa najvećom ponudom na tržištu.</p>';\n    return bp;\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <main>\\r\\n        <div *ngIf=\\\"faktura && fakturaDetalji && dataSource != null && dataSource.length > 0\\\">\\r\\n            <h1>Detalji fakture: {{faktura.id}}</h1>\\r\\n            <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\r\\n                <button class=\\\"button-glavni-100 nazad-button\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\r\\n                    <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"d-flex flex-wrap bd-highlight flex-sm-row flex-column detalji-div\\\">\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-100\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p *ngIf=\\\"faktura.status\\\" class=\\\"boja-siva-400\\\">Status: {{faktura.status.naziv}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-100\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p class=\\\"boja-siva-400\\\">Datum: {{faktura.vremePorucivanja | datum}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-100\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p *ngIf=\\\"faktura.nacinPlacanja\\\" class=\\\"boja-siva-400\\\">Nacin placanja:\\r\\n                            {{faktura.nacinPlacanja.naziv}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-100\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p *ngIf=\\\"faktura.nacinPrevoza\\\" class=\\\"boja-siva-400\\\">Nacin prevoza: {{\\\"prevoz_\\\" +\\r\\n                            faktura.nacinPrevoza.id | translate}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"p-1 flex-fill bd-highlight\\\">\\r\\n                    <label class=\\\"input-group-text button-glavni-100\\\" for=\\\"inputGroupSelect01\\\">\\r\\n                        <p *ngIf=\\\"faktura.adresa\\\" class=\\\"boja-siva-400\\\">Adresa: {{faktura.adresa.naziv}}</p>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n                <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                    <!-- Kataloski broj Column -->\\r\\n                    <ng-container matColumnDef=\\\"robaId\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Kataloski Broj </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2\\\">\\r\\n                                {{faktura.kataloskiBroj}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Kataloski broj Column -->\\r\\n                    <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Proizvodjač </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p >\\r\\n                                {{faktura.proizvodjac.naziv}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Narucena Kolicina Column -->\\r\\n                    <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Narucena Kolicina</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p >\\r\\n                                {{faktura.kolicina}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Potvrdjena Kolicina Column -->\\r\\n                    <ng-container matColumnDef=\\\"potvrdjenaKolicina\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Potvrdjena Kolicina </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p >\\r\\n                                {{faktura.potvrdjenaKolicina}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Rabat Column -->\\r\\n                    <ng-container matColumnDef=\\\"rabat\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Rabat </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p >\\r\\n                                {{faktura.rabat}}%\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Cena Column -->\\r\\n                    <ng-container matColumnDef=\\\"cena\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-1 text-right iznos-margin\\\">\\r\\n                                {{faktura.cena | currency:\\\" \\\"}} RSD\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- tatus Column -->\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\">Status</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"text-center mat-body-1\\\">\\r\\n                                {{faktura.status.naziv}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <div class=\\\"d-flex flex-column flex-sm-row\\\">\\r\\n                    <div class=\\\"d-flex flex-fill justify-content-end\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"d-flex flex-fill justify-content-end\\\">\\r\\n                        <table class=\\\"table sirina-cena\\\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td class=\\\"pozadina-glavna-50 boja-siva-400\\\">Ukupnan iznos: </td>\\r\\n                                    <td class=\\\"text-right\\\"><b>{{faktura.iznosPotvrdjen | currency:\\\" \\\"}} RSD</b></td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"dataSource == null || dataSource.length == 0\\\">\\r\\n            <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\r\\n                <button class=\\\"button-glavni-100 nazad-button nazad-dugme-dole\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\r\\n                    <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n                <i class=\\\"material-icons icon-size\\\">\\r\\n                    error_outline\\r\\n                </i>\\r\\n                <h1 class=\\\"h1-faktura-upozorenje\\\">Porudzbenica je prazna</h1>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"error\\\">\\r\\n            <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\r\\n                <button class=\\\"button-glavni-100 nazad-button greska-dugme-pozicija\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\r\\n                    <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex flex-column prazna-tabela\\\">\\r\\n                <i class=\\\"material-icons icon-size\\\">\\r\\n                    error_outline\\r\\n                </i>\\r\\n                <h1 class=\\\"h1-faktura-upozorenje\\\">Porudzbenica ne postoji</h1>\\r\\n            </div>\\r\\n        </div>\\r\\n    </main>\\r\\n</div>\"","module.exports = \"h1 {\\n  margin-left: 5%;\\n  margin-top: 0.5em; }\\n\\np {\\n  font-size: 0.92em; }\\n\\ntable {\\n  margin: 0px !important; }\\n\\n.nazad-dugme-dole {\\n  top: 40px; }\\n\\n.greska-dugme-pozicija {\\n  position: relative;\\n  top: 50px; }\\n\\n.detalji-div {\\n  width: 90%;\\n  margin-left: 5%; }\\n\\n@media only screen and (max-device-width: 640px) {\\n  h1 {\\n    margin-top: 0px; }\\n  .nazad-dugme-dole {\\n    top: 10px; }\\n  .greska-dugme-pozicija {\\n    position: relative;\\n    top: 5px; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Partner, FakturaDetalji, Fakutra } from '../../model/dto';\r\nimport { LoginService } from '../../service/login.service';\r\nimport { FakturaService } from '../../service/faktura.service';\r\n\r\n@Component({\r\n  selector: 'app-faktura-detalji',\r\n  templateUrl: './faktura-detalji.component.html',\r\n  styleUrls: ['./faktura-detalji.component.scss']\r\n})\r\nexport class FakturaDetaljiComponent implements OnInit {\r\n\r\n  public partner: Partner;\r\n  public faktura: Fakutra = new Fakutra();\r\n  public fakturaDetalji: FakturaDetalji[];\r\n  public dataSource: any;\r\n\r\n  public error = false;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n\r\n  public displayedColumns: string[] = ['robaId', 'proizvodjac', 'kolicina', 'potvrdjenaKolicina'\r\n  , 'rabat', 'cena', 'status'];\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private route: ActivatedRoute,\r\n    private fakturaServis: FakturaService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.fakturaServis.vratiFakturuPojedinacno(params.id, this.partner.ppid)\r\n        .subscribe((res: Fakutra) => {\r\n          this.error = false;\r\n          this.faktura = res;\r\n          this.fakturaDetalji = res.detalji;\r\n          this.dataSource = this.fakturaDetalji;\r\n        },\r\n          error => {\r\n            this.error = true;\r\n            console.log('Pronaci detalje fakture je bacilo gresku', error);\r\n          });\r\n    });\r\n  }\r\n\r\n  idiNazad() {\r\n    this.router.navigate(['/porudzbenice']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <main>\\r\\n        <div *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n            <h1>Moje porudzbenice</h1>\\r\\n            <div class=\\\"tabela-div\\\">\\r\\n                <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                    <!-- Kataloski broj Column -->\\r\\n                    <ng-container matColumnDef=\\\"orderId\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Broj Fakture </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2\\\">\\r\\n                                {{faktura.orderId}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Broj stavki Column -->\\r\\n                    <ng-container matColumnDef=\\\"brojStavki\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Broj stavki</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p >\\r\\n                                {{faktura.brojStavki}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Cena Column -->\\r\\n                    <ng-container matColumnDef=\\\"iznosNarucen\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Iznos narucen </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                                {{faktura.iznosNarucen | currency:\\\" \\\"}} RSD\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    \\r\\n                    <!-- Cena Column -->\\r\\n                    <ng-container matColumnDef=\\\"iznosPotvrdjen\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Iznos potvrdjen </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n                                {{faktura.iznosPotvrdjen | currency:\\\" \\\"}} RSD\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Vreme porucivanja Column -->\\r\\n                    <ng-container matColumnDef=\\\"vremePorucivanja\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Datum </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p  class=\\\"text-center\\\">\\r\\n                                {{faktura.vremePorucivanja | datum}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Status Column -->\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <p class=\\\"mat-body-2\\\">\\r\\n                                {{faktura.status.naziv}}\\r\\n                            </p>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Akcije Column -->\\r\\n                    <ng-container matColumnDef=\\\"ackije\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let faktura\\\">\\r\\n                            <button class=\\\"button-glavni-100\\\" mat-raised-button (click)=\\\"detaljiFakture(faktura.id)\\\">Detalji</button>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n                    [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n                </mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"error\\\">\\r\\n            <i class=\\\"material-icons icon-size\\\">\\r\\n                error_outline\\r\\n            </i>\\r\\n            <h1 class=\\\"h1-faktura-upozorenje\\\">Istorija porucivanja je prazna</h1>\\r\\n        </div>\\r\\n    </main>\\r\\n</div>\"","module.exports = \".napomena {\\n  width: 300px; }\\n\\nh1 {\\n  margin-top: 30px;\\n  margin-left: 5%; }\\n\\n@media only screen and (max-device-width: 640px) {\\n  h1 {\\n    margin-top: 0px; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../service/login.service';\r\nimport { Partner, Fakutra, FakturaPage } from '../model/dto';\r\nimport { FakturaService } from '../service/faktura.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-faktura',\r\n  templateUrl: './faktura.component.html',\r\n  styleUrls: ['./faktura.component.scss']\r\n})\r\nexport class FakturaComponent implements OnInit {\r\n\r\n  public partner: Partner;\r\n  private fakure: Fakutra[];\r\n  public dataSource: any;\r\n\r\n  public error = false;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public displayedColumns: string[] = ['orderId', 'brojStavki', 'iznosNarucen', 'iznosPotvrdjen', 'vremePorucivanja', 'status', 'ackije'];\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private fakturaService: FakturaService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.vratiFaktureKorisnika();\r\n  }\r\n\r\n  vratiFaktureKorisnika() {\r\n    this.fakturaService.vratiFaktureKorisnika(this.pageIndex, this.rowsPerPage, this.partner.ppid)\r\n    .subscribe((res: FakturaPage) => {\r\n      this.error = false;\r\n      this.fakure = res.content;\r\n      this.dataSource = this.fakure;\r\n      this.rowsPerPage = res.size;\r\n      this.pageIndex = res.number;\r\n      this.tableLength = res.totalElements;\r\n    },\r\n      error => {\r\n        this.error = true;\r\n        console.log('Pronaci fakture je bacilo gresku', error);\r\n      });\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.vratiFaktureKorisnika();\r\n  }\r\n\r\n  detaljiFakture(id: number) {\r\n    this.router.navigate(['/porudzbenice/' + id]);\r\n  }\r\n\r\n}\r\n","module.exports = \"<main>\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"dataSource.length == 0\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            shopping_cart\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Korpa je trenutno prazna</h1>\\r\\n    </div>\\r\\n    <div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource.length > 0\\\">\\r\\n        <i class=\\\"material-icons korpa-h1\\\">\\r\\n            shopping_cart\\r\\n        </i>\\r\\n        <div class=\\\"margin-bottom--10\\\" style=\\\"overflow-x:auto;\\\">\\r\\n            <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <!-- Kataloski broj Column -->\\r\\n                <ng-container matColumnDef=\\\"katbr\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kataloski broj </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.katbr}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Kataloski broj proizvodjaca Column -->\\r\\n                <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kataloski broj proizvodjaca </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p>\\r\\n                            {{roba.katbrpro}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Naziv Column -->\\r\\n                <ng-container matColumnDef=\\\"naziv\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p>\\r\\n                            {{roba.naziv}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Proizvodjač Column -->\\r\\n                <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Proizvodjač </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.proizvodjac.naziv}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Cena Column -->\\r\\n                <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Kolicina </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.kolicina}}\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Cena Column -->\\r\\n                <ng-container matColumnDef=\\\"cena\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Ukupno </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n                        <p class=\\\"mat-body-2\\\">\\r\\n                            {{roba.cenaUkupno | currency:\\\" \\\"}} DIN\\r\\n                        </p>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Kolicina Column -->\\r\\n                <ng-container matColumnDef=\\\"izbaciDugme\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let roba; let i = index;\\\">\\r\\n                        <div class=\\\"d-flex flex-column flex-lg-row bd-highlight\\\">\\r\\n                            <div class=\\\"p-1 bd-highlight\\\">\\r\\n                                <button class=\\\"button-glavni-100\\\" mat-raised-button\\r\\n                                    (click)=\\\"otvoriDialog(roba)\\\">Izmeni</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"p-1 bd-highlight\\\">\\r\\n                                <button class=\\\"button-crveni-50\\\" mat-raised-button\\r\\n                                    (click)='izbaciIzKorpe(i)'>Izbaci</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex flex-column flex-xl-row\\\">\\r\\n            <div class=\\\"d-flex flex-column flex-xl-row flex-fill \\\">\\r\\n                <div class=\\\"flex-fill\\\">\\r\\n                    <div class=\\\"d-flex flex-fill flex-column pomeri-dole\\\">\\r\\n                        <div *ngIf=\\\"nacinPlacanja && nacinPlacanja.length > 0\\\" class=\\\"granice\\\">\\r\\n                            <h3>Način plaćanja</h3>\\r\\n                            <hr>\\r\\n                            <mat-radio-group class=\\\"radio-grupa\\\" [(ngModel)]=\\\"izabranNacinPlacanja\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" class=\\\"radio-dugme\\\"\\r\\n                                    *ngFor=\\\"let placanje of nacinPlacanja\\\" [value]=\\\"placanje\\\">\\r\\n                                    {{placanje.naziv}}\\r\\n                                </mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"nacinPrevoza && nacinPrevoza.length > 0\\\"\\r\\n                        class=\\\"d-flex flex-fill flex-column pomeri-dole\\\">\\r\\n                        <div class=\\\"granice visina-prevoza\\\">\\r\\n                            <h3>Način prevoza</h3>\\r\\n                            <hr>\\r\\n                            <mat-radio-group class=\\\"radio-grupa\\\" [(ngModel)]=\\\"izabranNacinPrevoza\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" class=\\\"radio-dugme\\\"\\r\\n                                    *ngFor=\\\"let prevoz of nacinPrevoza\\\" [value]=\\\"prevoz\\\">\\r\\n                                    {{\\\"prevoz_\\\" + prevoz.id | translate}}\\r\\n                                </mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"izabranNacinPrevoza.id === 2\\\" class=\\\"granice pomeri-dole\\\">\\r\\n                            <h4>Izaberite način dostave</h4>\\r\\n                            <mat-radio-group class=\\\"radio-grupa\\\" [(ngModel)]=\\\"izabranaTrecaLiceOpcija\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" class=\\\"radio-dugme\\\"\\r\\n                                    *ngFor=\\\"let opcije of treceLiceOpcije\\\" [value]=\\\"opcije\\\">\\r\\n                                    {{opcije}}\\r\\n                                </mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                            <div>\\r\\n                                <div *ngIf=\\\"izabranaTrecaLiceOpcija === treceLiceOpcije[0]\\\">\\r\\n                                    <mat-form-field>\\r\\n                                        <mat-select placeholder=\\\"Kurirske sluzbe\\\" [(ngModel)]=\\\"izabraneKurirskeSluzbe\\\">\\r\\n                                            <mat-option *ngFor=\\\"let sluzbe of kurirskeSluzbe\\\" [value]=\\\"sluzbe\\\">\\r\\n                                                {{sluzbe}}\\r\\n                                            </mat-option>\\r\\n                                        </mat-select>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"izabranaTrecaLiceOpcija === treceLiceOpcije[1]\\\">\\r\\n                                    <mat-form-field role=\\\"form\\\" [formGroup]=\\\"drugiNacinPrevoza\\\">\\r\\n                                        <textarea matInput #prevoz formControlName=\\\"prevoz\\\"\\r\\n                                            placeholder=\\\"Upišite drugi način prevoza...\\\"></textarea>\\r\\n                                    </mat-form-field>\\r\\n                                    <div *ngIf=\\\"dugmeZaPorucivanjeStisnuto && d.prevoz.errors\\\">\\r\\n                                        <div *ngIf=\\\"d.prevoz.errors.required\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Ovo polje je obavezno</p>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"d.prevoz.errors.minlength\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Minimalno 3 karaktera</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"flex-fill\\\">\\r\\n                    <div class=\\\"d-flex flex-fill flex-column pomeri-dole\\\">\\r\\n                        <div *ngIf=\\\"nacinPlacanja && nacinPlacanja.length > 0\\\" class=\\\"granice visina\\\">\\r\\n                            <h3>Napomena</h3>\\r\\n                            <hr>\\r\\n                            <mat-form-field class=\\\"sirina-cena\\\">\\r\\n                                <textarea matInput class=\\\"napomena\\\" [(ngModel)]=\\\"napomena\\\"\\r\\n                                    placeholder=\\\"Unesite napomenu...\\\"></textarea>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"d-flex flex-fill flex-column pomeri-dole\\\">\\r\\n                        <div *ngIf=\\\"nacinPlacanja && nacinPlacanja.length > 0\\\" class=\\\"granice\\\">\\r\\n                            <h3>Izaberite adresu dostave</h3>\\r\\n                            <hr>\\r\\n                            <mat-radio-group class=\\\"radio-grupa\\\" [(ngModel)]=\\\"izabraneAdresaDostave\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" class=\\\"radio-dugme\\\"\\r\\n                                    *ngFor=\\\"let adresa of adresaDostave\\\" [value]=\\\"adresa\\\">\\r\\n                                    {{adresa}}\\r\\n                                </mat-radio-button>\\r\\n                            </mat-radio-group>\\r\\n                        </div>\\r\\n                        <div class=\\\"granice pomeri-dole\\\">\\r\\n                            <div *ngIf=\\\"izabraneAdresaDostave === adresaDostave[0]\\\" class=\\\"pomeri-dole\\\">\\r\\n                                <h4>Adresa</h4>\\r\\n                                <label> {{partner.adresa}}</label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"izabraneAdresaDostave === adresaDostave[1]\\\" class=\\\"pomeri-dole\\\">\\r\\n                                <h4>Druga adresa dostave</h4>\\r\\n                                <form role=\\\"form\\\" [formGroup]=\\\"adresaForm\\\">\\r\\n                                    <div>\\r\\n                                        <mat-form-field role=\\\"form\\\">\\r\\n                                            <input type=\\\"text\\\" #ulica formControlName=\\\"ulica\\\" matInput\\r\\n                                                placeholder=\\\"Ulica i broj\\\">\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"dugmeZaPorucivanjeStisnuto && a.ulica.errors\\\">\\r\\n                                        <div *ngIf=\\\"a.ulica.errors.required\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Naziv ulice je obavezan</p>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"a.ulica.errors.minlength\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Naziv ulice mora imati minimalno 3 karaktera</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <mat-form-field role=\\\"form\\\">\\r\\n                                            <input type=\\\"text\\\" #grad formControlName=\\\"grad\\\" matInput placeholder=\\\"Grad\\\">\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"dugmeZaPorucivanjeStisnuto && a.grad.errors\\\">\\r\\n                                        <div *ngIf=\\\"a.grad.errors.required\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"a.grad.errors.minlength\\\">\\r\\n                                            <p class=\\\"upozorenje\\\">Naziv grada mora imati minimalno 2 karaktera</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex flex-fill flex-column\\\">\\r\\n                <table class=\\\"table sirina-cena\\\">\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td class=\\\"pozadina-glavna-50 boja-siva-400\\\">Bez pdv-a: </td>\\r\\n                            <td class=\\\"text-right\\\">{{bezPdv | currency:\\\" \\\"}} RSD</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"pozadina-glavna-50 boja-siva-400\\\">Pdv: </td>\\r\\n                            <td class=\\\"text-right\\\">{{pdv | currency:\\\" \\\"}} RSD</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"pozadina-glavna-50 boja-siva-400\\\">Ukupno za uplatu: </td>\\r\\n                            <td class=\\\"text-right\\\"><b>{{ukupno | currency:\\\" \\\"}} RSD</b></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div>\\r\\n                    <button class=\\\"button-glavni-100 dugme-sirina float-right\\\" mat-raised-button\\r\\n                        (click)=\\\"posaljiPorudzbinu(roba)\\\">Potvrdi</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</main>\"","module.exports = \".korpa-h1 {\\n  margin-top: 0.5em;\\n  font-size: 3.5em;\\n  color: #345cac; }\\n\\np {\\n  text-align: left !important; }\\n\\nh3 {\\n  font-weight: bold;\\n  padding-left: 10px;\\n  padding-top: 10px;\\n  color: #345cac; }\\n\\nhr {\\n  width: 90%;\\n  margin-bottom: 5px;\\n  margin-top: 5px; }\\n\\nh4 {\\n  font-size: 1em;\\n  font-weight: bold;\\n  padding-left: 1em;\\n  color: #345cac; }\\n\\ntextarea {\\n  color: #273747; }\\n\\nlabel {\\n  color: #273747;\\n  font-weight: bold; }\\n\\n.radio-grupa {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.radio-dugme {\\n  margin: 2px;\\n  font-size: 0.8em !important; }\\n\\n.sirina-cena {\\n  width: 95%; }\\n\\n.dugme-sirina {\\n  width: 150px;\\n  height: 40px;\\n  border-radius: 5px; }\\n\\n.granice {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  background-color: white;\\n  padding-left: 5px;\\n  width: 95%;\\n  margin: 5px; }\\n\\n.pomeri-dole {\\n  margin-top: 7px; }\\n\\n.visina {\\n  height: 181px; }\\n\\n.visina-prevoza {\\n  height: 193px; }\\n\\n.napomena {\\n  height: 80px; }\\n\\n.google-mapa {\\n  margin-left: 10%;\\n  width: 80%; }\\n\\n@media only screen and (max-device-width: 640px) {\\n  .korpa-h1 {\\n    margin-top: 0.5em; }\\n  .sirina-cena {\\n    width: 95%;\\n    margin-left: 2%; } }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataService } from '../service/data/data.service';\r\nimport { Korpa, RobaKorpa } from '../model/porudzbenica';\r\nimport { LocalStorageService } from '../service/data/local-storage.service';\r\nimport { MatTable, MatDialog } from '@angular/material';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { ValueHelp, Partner, Fakutra, FakturaDetalji, Roba } from '../model/dto';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../service/login.service';\r\nimport { FakturaService } from '../service/faktura.service';\r\nimport { Router } from '@angular/router';\r\nimport { IzmenaKolicineModalComponent } from 'src/app/shared/modal/izmena-kolicine-modal/izmena-kolicine-modal.component';\r\nimport { UspesnoPorucivanjeModalComponent } from 'src/app/shared/modal/uspesno-porucivanje-modal/uspesno-porucivanje-modal.component';\r\nimport { NeuspesnoPorucivanjeModalComponent } from 'src/app/shared/modal/neuspesno-porucivanje-modal/neuspesno-porucivanje-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-korpa',\r\n  templateUrl: './korpa.component.html',\r\n  styleUrls: ['./korpa.component.scss']\r\n})\r\nexport class KorpaComponent implements OnInit {\r\n\r\n  public korpa: Korpa;\r\n  public partner: Partner;\r\n  public bezPdv: string;\r\n  public pdv: string;\r\n  public ukupno: string;\r\n  public dataSource: any;\r\n  public nacinPlacanja: ValueHelp[];\r\n  public izabranNacinPlacanja: ValueHelp;\r\n  public nacinPrevoza: ValueHelp[];\r\n  public izabranNacinPrevoza: ValueHelp;\r\n  private faktura: Fakutra;\r\n\r\n  // sve forme\r\n  public drugiNacinPrevoza: FormGroup;\r\n  public adresaForm: FormGroup;\r\n  public dugmeZaPorucivanjeStisnuto = false;\r\n\r\n  public displayedColumns: string[] = ['katbr', 'katbrpro', 'naziv'\r\n    , 'proizvodjac', 'kolicina', 'cena', 'izbaciDugme'];\r\n\r\n  public treceLiceOpcije: string[] = ['Kurirske službe', 'Drugo'];\r\n  public izabranaTrecaLiceOpcija: string;\r\n  public kurirskeSluzbe: string[] = ['Aks', 'Beks', 'City'];\r\n  public izabraneKurirskeSluzbe: string;\r\n  public adresaDostave: string[] = ['Vaša adresa', 'Druga'];\r\n  public izabraneAdresaDostave: string;\r\n  public napomena: string;\r\n  public ucitavanje = false;\r\n  private alive = true;\r\n  @ViewChild(MatTable) table: MatTable<any>;\r\n\r\n  constructor(\r\n    private dataService: DataService,\r\n    private loginServis: LoginService,\r\n    public storage: LocalStorageService,\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private fakturaServis: FakturaService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.vratiOpsteInformacije();\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => {\r\n      this.korpa = korpa;\r\n      this.preracunajUkupno();\r\n      this.dataSource = this.korpa.roba;\r\n    });\r\n    this.izabranaTrecaLiceOpcija = this.treceLiceOpcije[0];\r\n    this.izabraneKurirskeSluzbe = this.kurirskeSluzbe[0];\r\n    this.izabraneAdresaDostave = this.adresaDostave[0];\r\n    this.inicijalizujSveForme();\r\n  }\r\n\r\n  inicijalizujSveForme() {\r\n    this.drugiNacinPrevoza = this.formBuilder.group({\r\n      prevoz: ['', [Validators.required, Validators.minLength(3)]]\r\n    });\r\n    this.adresaForm = this.formBuilder.group({\r\n      ulica: ['', [Validators.required, Validators.minLength(3)]],\r\n      grad: ['', [Validators.required, Validators.minLength(2)]]\r\n    });\r\n  }\r\n\r\n  vratiOpsteInformacije() {\r\n    const vrsteInformacije = ['placanje', 'prevoz'];\r\n    vrsteInformacije.forEach(vrsta => {\r\n      this.dataService.vratiOpsteInformacije(vrsta).pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => throwError(error)),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n        .subscribe(\r\n          res => {\r\n            if (vrsta === vrsteInformacije[0]) {\r\n              this.nacinPlacanja = res;\r\n              this.izabranNacinPlacanja = res[0];\r\n            } else {\r\n              this.nacinPrevoza = res;\r\n              this.izabranNacinPrevoza = res[0];\r\n            }\r\n          },\r\n          error => {\r\n            console.log('Podnaci informaciju je izbacilo gresku izbacilo je gresko');\r\n          });\r\n    });\r\n\r\n  }\r\n\r\n  izbaciIzKorpe(index: number) {\r\n    this.dataService.izbaciIzKorpe(index);\r\n    this.table.renderRows();\r\n  }\r\n\r\n  otvoriDialog(roba: RobaKorpa): void {\r\n    const dialogRef = this.dialog.open(IzmenaKolicineModalComponent, {\r\n      width: '400px',\r\n      data: roba\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      if (result) {\r\n        this.promeniKolicinuArtikla(result);\r\n      }\r\n    });\r\n  }\r\n  otvoriDialogUspesnoPorucivanje(): void {\r\n    const dialogRef = this.dialog.open(UspesnoPorucivanjeModalComponent, {\r\n      width: '400px'\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.router.navigate(['/naslovna']);\r\n    });\r\n  }\r\n  otvoriDialogNeuspesnoPorucivanje(roba: Roba[], faktura: Fakutra): void {\r\n    const dialogRef = this.dialog.open(NeuspesnoPorucivanjeModalComponent, {\r\n      width: '400px',\r\n      data: { faktura: faktura, roba: roba }\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.zatvaranjeNeuspesnogDiloga(roba);\r\n    });\r\n  }\r\n\r\n  zatvaranjeNeuspesnogDiloga(roba: Roba[]) {\r\n    let stanjePromenjeno = false;\r\n    roba.forEach((r: Roba) => {\r\n      this.korpa.roba\r\n        .filter((robaKorpa: RobaKorpa) => robaKorpa.robaid === r.robaid)\r\n        .map((robaKorpa: RobaKorpa) => {\r\n          stanjePromenjeno = true;\r\n          robaKorpa.kolicina = r.stanje;\r\n        });\r\n    });\r\n\r\n    this.korpa.roba = this.korpa.roba.filter((rKorpa: RobaKorpa) => rKorpa.kolicina > 0);\r\n\r\n    if (stanjePromenjeno) {\r\n      this.dataSource = null;\r\n      this.dataSource = this.korpa.roba;\r\n    }\r\n  }\r\n\r\n  promeniKolicinuArtikla(artikal: RobaKorpa) {\r\n    this.korpa.roba.forEach(roba => {\r\n      if (roba.katbr === artikal.katbr) {\r\n        roba.kolicina = artikal.kolicina;\r\n        roba.cenaUkupno = artikal.cenaUkupno;\r\n      }\r\n    });\r\n    this.storage.zameniArtikalSaNovim(artikal);\r\n    this.preracunajUkupno();\r\n    this.dataSource = this.korpa.roba;\r\n    this.table.renderRows();\r\n  }\r\n\r\n  private preracunajUkupno() {\r\n    this.korpa.ukupno = 0;\r\n    this.korpa.roba.forEach(roba => {\r\n      this.korpa.ukupno = this.korpa.ukupno + roba.cenaUkupno;\r\n    });\r\n    this.bezPdv = (this.korpa.ukupno / 1.2).toFixed(2);\r\n    this.pdv = (this.korpa.ukupno - this.korpa.ukupno / 1.2).toFixed(2);\r\n    this.ukupno = this.korpa.ukupno.toFixed(2);\r\n  }\r\n\r\n  // glavna metoda\r\n  posaljiPorudzbinu() {\r\n    this.dugmeZaPorucivanjeStisnuto = true;\r\n    if (this.izabraneAdresaDostave === this.adresaDostave[1]) {\r\n      if (this.adresaForm.invalid) {\r\n        return;\r\n      }\r\n    }\r\n    if (this.izabranNacinPrevoza === this.treceLiceOpcije[1]) {\r\n      if (this.drugiNacinPrevoza.invalid) {\r\n        return;\r\n      }\r\n    }\r\n    this.korpa.nacinIsporuke = this.izabranNacinPrevoza.id;\r\n    this.korpa.nacinPlacanja = this.izabranNacinPlacanja.id;\r\n    this.popuniNapomenu();\r\n    this.korpaUFakturu();\r\n    this.fakturaServis.submitujFakturu(this.faktura).pipe(\r\n      takeWhile(() => this.alive),\r\n      catchError((error: Response) => throwError(error)),\r\n      finalize(() => this.ucitavanje = false)\r\n    )\r\n      .subscribe((res: Roba[]) => {\r\n        if (res.length === 0) {\r\n          this.otvoriDialogUspesnoPorucivanje();\r\n          this.dataService.ocistiKorpu();\r\n          this.router.navigate(['/naslovna']);\r\n        } else {\r\n          this.otvoriDialogNeuspesnoPorucivanje(res, this.faktura);\r\n        }\r\n      },\r\n        error => {\r\n          console.log('Error = ', error);\r\n        });\r\n\r\n    console.log('Kora za porudzbinu  ' + JSON.stringify(this.faktura));\r\n    console.log('Porucivanje je uspesno! :)');\r\n  }\r\n\r\n  korpaUFakturu() {\r\n    this.faktura = new Fakutra();\r\n    this.faktura.adresa = this.napraviIPopuniValueHelp(this.partner.ppid);\r\n    this.faktura.nacinPlacanja = this.napraviIPopuniValueHelp(this.korpa.nacinPlacanja);\r\n    this.faktura.nacinPrevoza = this.napraviIPopuniValueHelp(this.korpa.nacinIsporuke);\r\n    this.faktura.napomena = this.korpa.napomena;\r\n    this.faktura.iznosNarucen = this.korpa.ukupno;\r\n    this.faktura.detalji = [];\r\n    this.korpa.roba.forEach((roba: RobaKorpa) => {\r\n      this.faktura.detalji.push(this.popuniStavke(roba));\r\n    });\r\n  }\r\n\r\n  popuniStavke(roba: RobaKorpa) {\r\n    const stavka = new FakturaDetalji();\r\n    stavka.kataloskiBroj = roba.katbr;\r\n    stavka.proizvodjac = roba.proizvodjac;\r\n    stavka.kolicina = roba.kolicina;\r\n    stavka.rabat = roba.rabat;\r\n    stavka.robaId = roba.robaid;\r\n    stavka.cena = roba.cenaKom;\r\n    return stavka;\r\n  }\r\n\r\n  napraviIPopuniValueHelp(id: number): ValueHelp {\r\n    const valueHelp = new ValueHelp();\r\n    valueHelp.id = id;\r\n    return valueHelp;\r\n  }\r\n\r\n  popuniNapomenu() {\r\n    this.korpa.napomena = '';\r\n    if (this.izabranNacinPrevoza === this.nacinPrevoza[2]) {\r\n      let nacinPrevoza;\r\n      if (this.izabranaTrecaLiceOpcija === this.treceLiceOpcije[0]) {\r\n        nacinPrevoza = this.izabraneKurirskeSluzbe;\r\n      } else {\r\n        nacinPrevoza = this.drugiNacinPrevoza.controls.prevoz.value;\r\n      }\r\n      this.korpa.napomena = this.korpa.napomena + 'Način prevoza: ' + nacinPrevoza + ' - ';\r\n    }\r\n\r\n    if (this.izabraneAdresaDostave === this.adresaDostave[1]) {\r\n      let adresaDostave;\r\n      if (this.izabranaTrecaLiceOpcija === this.treceLiceOpcije[0]) {\r\n        adresaDostave = this.adresaForm.controls.ulica.value + ', ' + this.adresaForm.controls.grad.value;\r\n      }\r\n      this.korpa.napomena = this.korpa.napomena + 'Adresa dostave: ' + adresaDostave + ' - ';\r\n    }\r\n    if (this.napomena) {\r\n      this.korpa.napomena = this.korpa.napomena + 'Napomena: ' + this.napomena;\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get a() { return this.adresaForm.controls; }\r\n  get d() { return this.drugiNacinPrevoza.controls; }\r\n}\r\n","module.exports = \".flex-login {\\r\\n    margin-top: 10%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n.login-form {\\r\\n    width: 400px;\\r\\n    justify-content: center;\\r\\n}\\r\\nh1 {\\r\\n    text-align: center;\\r\\n\\ttext-transform: uppercase;\\r\\n}\\r\\nbutton{\\r\\n    margin:auto;\\r\\n    display:block;\\r\\n}\\r\\np {\\r\\n      text-align: center;\\r\\n}\\r\\n.is-invalid {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n.upozorenje {\\r\\n    text-align: left;\\r\\n    font-size: 0.8em;\\r\\n    margin:0px !important;\\r\\n    color: red;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"flex-login\\\">\\r\\n\\t\\t<div class=\\\"login-form\\\">\\r\\n\\t\\t\\t<h1>Prijavi se</h1>\\r\\n\\t\\t\\t<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"!uspesnoLogovanje\\\">\\r\\n\\t\\t\\t\\t<p>Korisničko ime ili šifra je pogrešna.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<form role=\\\"form\\\" (keydown)=\\\"enterNaFormi($event)\\\" [formGroup]=\\\"registerForm\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Korisničko ime\\\" id=\\\"username\\\"\\r\\n\\t\\t\\t\\t\\t name=\\\"username\\\" [(ngModel)]=\\\"credentials.username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.controls.username.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerForm.controls.username.errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.username.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Korisničko ime je obavezno</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.username.errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Korisničko ime mora imati minimalno 3 karaktera</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Šifra\\\" id=\\\"password\\\"\\r\\n\\t\\t\\t\\t\\t name=\\\"password\\\" [(ngModel)]=\\\"credentials.password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.controls.password.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerForm.controls.password.errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.password.errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"registerForm.controls.password.errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\r\\n\\t\\t\\t\\t\\t<button mat-button type=\\\"button\\\" (click)=\\\"otvoriResgracijaDialog()\\\" class=\\\"boja-glavna-100\\\">Nemate nalog?</button>\\r\\n\\t\\t\\t\\t\\t<button mat-raised-button (click)=\\\"login()\\\" class=\\\"rounded button-glavni-100\\\">Prijava</button>\\r\\n\\t\\t\\t\\t\\t<button mat-button type=\\\"button\\\" (click)=\\\"otvoriZaboravljenuSifruDialog()\\\" class=\\\"boja-glavna-100\\\">Zaboravili ste šifru?</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Credentials, Partner } from '../model/dto';\r\nimport { LoginService } from '../service/login.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { RegistracijaModalComponent } from 'src/app/shared/modal/registracija-modal/registracija-modal.component';\r\nimport { ZaboravljenaSifraModalComponent } from 'src/app/shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public registerForm: FormGroup;\r\n  public submitted = false;\r\n  public credentials: Credentials = {};\r\n  public partner: Partner;\r\n  public uspesnoLogovanje = true;\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private formBuilder: FormBuilder,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      password: ['', [Validators.required, Validators.minLength(3)]]\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  login() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n        return;\r\n    }\r\n    this.loginServis.ulogujSe(this.credentials);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    this.loginServis.daLiJeLogovanjeUspesno.subscribe(b => this.uspesnoLogovanje = b);\r\n  }\r\n\r\n  otvoriResgracijaDialog() {\r\n    const dialogRef = this.dialog.open(RegistracijaModalComponent, {\r\n      width: '400px'\r\n    });\r\n  }\r\n\r\n  otvoriZaboravljenuSifruDialog() {\r\n    const dialogRef = this.dialog.open(ZaboravljenaSifraModalComponent, {\r\n      width: '400px'\r\n    });\r\n  }\r\n\r\n  enterNaFormi(event) {\r\n    if (event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\"\\r\\n                (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n\\r\\n    <app-filter [vrstaRobe]=\\\"vrstaRobe\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\"></app-filter>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n\\r\\n    <app-tabela [rowsPerPage]=\\\"rowsPerPage\\\" [pageIndex]=\\\"pageIndex\\\" [tableLength]=\\\"tableLength\\\"\\r\\n        [dataSource]=\\\"dataSource\\\" [roba]=\\\"roba\\\" (magacinEvent)=\\\"paginatorEvent($event)\\\"></app-tabela>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba } from '../../model/dto';\r\nimport { RobaService } from '../../service/roba.service';\r\nimport { DataService } from '../../service/data/data.service';\r\nimport { VrstaRobe } from '../../model/roba.enum';\r\nimport { Filter } from '../../model/filter';\r\n\r\n@Component({\r\n  selector: 'app-akumulatori',\r\n  templateUrl: './akumulatori.component.html',\r\n  styleUrls: ['./akumulatori.component.css']\r\n})\r\nexport class AkumulatoriComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.AKUMULATORI;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public filter: Filter = new Filter();\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.pronandjiSveAkumulatore();\r\n  }\r\n\r\n  pronandjiSveAkumulatore() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiAkumulatore(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiAkumulatorePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiAkumulatore(\r\n      this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId\r\n      )\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiAkumulatorePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiAkumulatorePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n\r\n    this.pronadjiAkumulatorePoPretrazi(this.searchValue);\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n@media only screen and (max-device-width :1025px) { \\r\\n    .mobilna-duzina {\\r\\n        width: 100%;\\r\\n    }\\r\\n    .input-group-prepend {\\r\\n        margin-top: 10px;\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <main>\\r\\n        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n            <div class=\\\"forms-input\\\">\\r\\n                <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\"\\r\\n                    (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n                <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                    <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                        <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                    <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                        <mat-icon>view_headline</mat-icon>\\r\\n                    </button>\\r\\n                    <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                        <mat-icon>view_headline</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n                <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n            </label>\\r\\n        </div>\\r\\n        \\r\\n        <!-- Filter komponenta izdvojena -->\\r\\n        <app-filter [vrstaRobe]=\\\"vrstaRobe\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\">\\r\\n        </app-filter>\\r\\n\\r\\n        <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n            <i class=\\\"material-icons icon-size\\\">\\r\\n                error_outline\\r\\n            </i>\\r\\n            <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n            <mat-spinner></mat-spinner>\\r\\n        </div>\\r\\n        \\r\\n        <app-tabela \\r\\n        [rowsPerPage]=\\\"rowsPerPage\\\"\\r\\n        [pageIndex]=\\\"pageIndex\\\"\\r\\n        [tableLength]=\\\"tableLength\\\"\\r\\n        [dataSource]=\\\"dataSource\\\"\\r\\n        [roba]=\\\"roba\\\"\\r\\n        (magacinEvent)=\\\"paginatorEvent($event)\\\"\\r\\n        ></app-tabela>\\r\\n    </main>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Partner } from '../../model/dto';\r\nimport { RobaService } from '../../service/roba.service';\r\nimport { Korpa } from '../../model/porudzbenica';\r\nimport { DataService } from '../../service/data/data.service';\r\nimport { AppUtilsService } from '../../utils/app-utils.service';\r\nimport { VrstaRobe } from '../../model/roba.enum';\r\nimport { Filter } from '../../model/filter';\r\n\r\n@Component({\r\n  selector: 'app-filteri',\r\n  templateUrl: './filteri.component.html',\r\n  styleUrls: ['./filteri.component.css']\r\n})\r\nexport class FilteriComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.FILTERI;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public filter: Filter = new Filter();\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.pronandjiSveFiltere();\r\n  }\r\n\r\n  pronandjiSveFiltere() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiFiltere(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko', error);\r\n        });\r\n  }\r\n\r\n  pronadjiFilterePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiFiltere(\r\n      this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId\r\n      )\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiFilterePoPretrazi(searchValue);\r\n\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiFilterePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n    this.pronadjiFilterePoPretrazi(this.searchValue);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <main>\\r\\n        <div class=\\\"d-flex flex-row-reverse bd-highlight\\\">\\r\\n            <button class=\\\"button-glavni-100 nazad-button\\\" mat-raised-button (click)=\\\"idiNazad()\\\">\\r\\n                <mat-icon>keyboard_arrow_left</mat-icon> Nazad\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n            <div class=\\\"forms-input\\\">\\r\\n                <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n                <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                    <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                        <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                    <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                        <mat-icon>view_headline</mat-icon>\\r\\n                    </button>\\r\\n                    <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                        <mat-icon>view_headline</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n                <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n            </label>\\r\\n        </div>\\r\\n        \\r\\n        <!-- Filter komponenta izdvojena -->\\r\\n        <app-filter [vrstaRobe]=\\\"vrstaRobe\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\">\\r\\n        </app-filter>\\r\\n\\r\\n        <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n            <i class=\\\"material-icons icon-size\\\">\\r\\n                error_outline\\r\\n            </i>\\r\\n            <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n            <mat-spinner></mat-spinner>\\r\\n        </div>\\r\\n        \\r\\n        <app-tabela \\r\\n        [rowsPerPage]=\\\"rowsPerPage\\\"\\r\\n        [pageIndex]=\\\"pageIndex\\\"\\r\\n        [tableLength]=\\\"tableLength\\\"\\r\\n        [dataSource]=\\\"dataSource\\\"\\r\\n        [roba]=\\\"roba\\\"\\r\\n        (magacinEvent)=\\\"paginatorEvent($event)\\\"\\r\\n        ></app-tabela>\\r\\n    </main>\\r\\n</div>\"","module.exports = \".forms-input {\\n  margin-top: 0px !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba } from 'src/app/e-shop/model/dto';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { VrstaRobe } from 'src/app/e-shop/model/roba.enum';\r\nimport { Filter } from 'src/app/e-shop/model/filter';\r\n\r\n@Component({\r\n  selector: 'app-kategorija-specificna',\r\n  templateUrl: './kategorija-specificna.component.html',\r\n  styleUrls: ['./kategorija-specificna.component.scss']\r\n})\r\nexport class KategorijaSpecificnaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.OSTALO;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public filter: Filter = new Filter();\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dataService: DataService,\r\n    private robaServis: RobaService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.pronandjiRobu();\r\n  }\r\n\r\n  pronandjiRobu() {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.robaServis.pronadjiPoKategoriji(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, params.id)\r\n        .pipe(\r\n          takeWhile(() => this.alive),\r\n          catchError((error: Response) => {\r\n            if (error.status === 404) {\r\n              this.pronadjenaRoba = false;\r\n              return EMPTY;\r\n            }\r\n            return throwError(error);\r\n          }),\r\n          finalize(() => this.ucitavanje = false)\r\n        )\r\n        .subscribe(\r\n          res => {\r\n            this.pronadjenaRoba = true;\r\n            this.roba = res.content;\r\n            this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n            this.dataSource = this.roba;\r\n            this.rowsPerPage = res.size;\r\n            this.pageIndex = res.number;\r\n            this.tableLength = res.totalElements;\r\n          },\r\n          error => {\r\n            this.roba = null;\r\n            console.log('Podnaci robu izbacilo je gresko');\r\n          });\r\n    });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiSvuRobuPoPretrazi(searchValue);\r\n  }\r\n\r\n  pronadjiSvuRobuPoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.robaServis.pronadjiPoKategoriji(\r\n        this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId, params.id)\r\n        .pipe(\r\n          takeWhile(() => this.alive),\r\n          catchError((error: Response) => {\r\n            if (error.status === 404) {\r\n              this.pronadjenaRoba = false;\r\n              return EMPTY;\r\n            }\r\n            return throwError(error);\r\n          }),\r\n          finalize(() => this.ucitavanje = false)\r\n        )\r\n        .subscribe(\r\n          res => {\r\n            this.pronadjenaRoba = true;\r\n            this.roba = res.content;\r\n            this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n            this.dataSource = this.roba;\r\n            this.rowsPerPage = res.size;\r\n            this.pageIndex = res.number;\r\n            this.tableLength = res.totalElements;\r\n          },\r\n          error => {\r\n            this.roba = null;\r\n            console.log('Podnaci robu izbacilo je gresko');\r\n          });\r\n    });\r\n  }\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\r\n  }\r\n\r\n  idiNazad() {\r\n    this.router.navigate(['/ostalo']);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <main *ngIf=\\\"kategorije\\\">\\r\\n    <h1>Kategorije</h1>\\r\\n    <div *ngFor=\\\"let slovo of pocetnaSlova\\\">\\r\\n      <div class=\\\"d-flex flex-row flex-wrap\\\">\\r\\n        <div class=\\\"slovo\\\">\\r\\n          <h2>{{slovo}}</h2>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let kategorija of vratiKategorijuNaSlovo(slovo)\\\">\\r\\n          <a [routerLink]=\\\"[kategorija  | lowercase]\\\" mat-button>{{\\\"kategorija_\\\" + kategorija | translate}}</a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"h1 {\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  margin-bottom: 50px; }\\n\\na {\\n  color: #345cac; }\\n\\n.slovo {\\n  width: 30px;\\n  margin-top: 0px;\\n  padding: 0px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { RobaService } from '../../service/roba.service';\r\n\r\n@Component({\r\n  selector: 'app-ostalo',\r\n  templateUrl: './ostalo.component.html',\r\n  styleUrls: ['./ostalo.component.scss']\r\n})\r\nexport class OstaloComponent implements OnInit {\r\n\r\n  public kategorije: string[];\r\n  private alive = true;\r\n  public ucitavanje = false;\r\n  public pocetnaSlova = ['A', 'B', 'C', 'D', 'G', 'H', 'Z', 'I', 'K', 'L', 'M', 'P', 'R', 'S', 'T', 'V', 'Z'];\r\n\r\n  constructor(private robaServis: RobaService) { }\r\n\r\n  ngOnInit() {\r\n    this.robaServis.ostaleKategorije().pipe(\r\n      takeWhile(() => this.alive),\r\n      catchError((error: Response) => throwError(error)),\r\n      finalize(() => this.ucitavanje = false)\r\n    )\r\n      .subscribe(\r\n        res => {\r\n          this.kategorije = res;\r\n        },\r\n        error => {\r\n          console.log('Podnaci kategorije je izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  vratiKategorijuNaSlovo(slovo: string): string[] {\r\n    const kategorije = [];\r\n    this.kategorije.forEach(kategorija => {\r\n      if (kategorija[0] === slovo) {\r\n        kategorije.push(kategorija);\r\n      }\r\n    });\r\n    return kategorije;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n        \\r\\n    <!-- Filter komponenta izdvojena -->\\r\\n    <app-filter [vrstaRobe]=\\\"vrstaRobe\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\">\\r\\n    </app-filter>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n        \\r\\n    <app-tabela \\r\\n    [rowsPerPage]=\\\"rowsPerPage\\\"\\r\\n    [pageIndex]=\\\"pageIndex\\\"\\r\\n    [tableLength]=\\\"tableLength\\\"\\r\\n    [dataSource]=\\\"dataSource\\\"\\r\\n    [roba]=\\\"roba\\\"\\r\\n    (magacinEvent)=\\\"paginatorEvent($event)\\\"\\r\\n    ></app-tabela>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RobaService } from '../../service/roba.service';\r\nimport { Roba } from '../../model/dto';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { DataService } from '../../service/data/data.service';\r\nimport { VrstaRobe } from '../../model/roba.enum';\r\nimport { Filter } from '../../model/filter';\r\n@Component({\r\n  selector: 'app-roba',\r\n  templateUrl: './roba.component.html',\r\n  styleUrls: ['./roba.component.css']\r\n})\r\nexport class RobaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.SVE;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public filter: Filter = new Filter();\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n\r\n  constructor(private robaService: RobaService,\r\n    private dataService: DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.pronadjiSvuRobu();\r\n  }\r\n\r\n  pronadjiSvuRobu() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiSvuRobu(this.sort, this.rowsPerPage, this.pageIndex, null, null, null)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiSvuRobuPoPretrazi(searchValue);\r\n  }\r\n\r\n  pronadjiSvuRobuPoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiSvuRobu(\r\n      this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n    this.pronadjiSvuRobuPoPretrazi(this.searchValue);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"otvoriFilter\\\">\\n  <div class=\\\"filter-div-test d-flex flex-column\\\">\\n      <div class=\\\"d-flex justify-content-center\\\">\\n          <h2>\\n              Filter\\n          </h2>\\n      </div>\\n      <div class=\\\"d-flex flex-column flex-xl-row input-group mb-3\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n              <label class=\\\"input-group-text mobilna-duzina button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                  <p class=\\\"boja-siva-400\\\">Proizvodjač: </p>\\n              </label>\\n          </div>\\n          <select class=\\\"custom-select mobilna-duzina\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"filter.proizvodjac\\\">\\n              <option *ngFor=\\\"let proizvodjac of proizvodjaci\\\" [value]=\\\"proizvodjac.naziv\\\">\\n                  {{proizvodjac.naziv}}\\n              </option>\\n          </select>\\n\\n          <div class=\\\"input-group-prepend razmak\\\">\\n              <label class=\\\"input-group-text mobilna-duzina button-glavni-50\\\" for=\\\"inputGroupSelect01\\\">\\n                  Raspoloživost:\\n              </label>\\n          </div>\\n          <select class=\\\"custom-select mobilna-duzina\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"filter.raspolozivost\\\">\\n              <option *ngFor=\\\"let raspoloziv of raspolozivost\\\" [value]=\\\"raspoloziv\\\">{{raspoloziv}}</option>\\n          </select>\\n      </div>\\n      <div class=\\\"d-flex justify-content-center\\\">\\n          <div>\\n              <button mat-stroked-button class=pozadina-glavna-100 (click)='filtriraj()'>\\n                  <p class=\\\"boja-siva-400\\\">Filtriraj</p>\\n              </button>\\n              <span class=\\\"col-2\\\"></span>\\n              <button mat-stroked-button class=button-crveni-50 (click)='resetujFilter()'>\\n                  <p class=\\\"boja-siva-400\\\">Poništi</p>\\n              </button>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ProizvodjacService } from 'src/app/e-shop/service/proizvodjac.service';\nimport { takeWhile } from 'rxjs/operators';\nimport { VrstaRobe } from 'src/app/e-shop/model/roba.enum';\nimport { Filter } from 'src/app/e-shop/model/filter';\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Proizvodjac } from 'src/app/e-shop/model/dto';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit {\n\n  @Input() otvoriFilter;\n  @Input() vrstaRobe;\n  @Input() vrstaUlja;\n  @Input() industrijkoUljeEvent: Observable<string>;\n  @Output() filterEvent = new EventEmitter<any>();\n\n  public proizvodjaci: Proizvodjac[];\n\n  public filter = new Filter();\n\n  public raspolozivost: string[] = ['Svi artikli', 'Ima na stanju'];\n\n  private alive = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private proizvodjacService: ProizvodjacService,\n    private utilsService: AppUtilsService) { }\n\n  ngOnInit() {\n    if (this.industrijkoUljeEvent) {\n      this.industrijkoUljeEvent.subscribe((vrstaUlja: string) => {\n        this.vrstaUlja = vrstaUlja;\n        this.filter.raspolozivost = this.raspolozivost[1];\n        this.pronadjiProizvodjace();\n      });\n    }\n    this.filter.raspolozivost = this.raspolozivost[1];\n    this.pronadjiProizvodjace();\n  }\n\n  pronadjiProizvodjace() {\n    if (this.vrstaRobe === VrstaRobe.AKUMULATORI) {\n      this.proizvodjacService.pronadjiSveProizvodjaceAkumulatora()\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(res => {\n          this.proizvodjaci = res;\n          this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n        },\n          error => {\n            this.proizvodjaci = null;\n            console.log('Pronaci svu robu je bacilo gresku', error);\n          });\n    } else if (this.vrstaRobe === VrstaRobe.FILTERI) {\n      this.proizvodjacService.pronadjiSveProizvodjaceFiltera()\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(res => {\n          this.proizvodjaci = res;\n          this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n        },\n          error => {\n            this.proizvodjaci = null;\n            console.log('Pronaci svu robu je bacilo gresku', error);\n          });\n    } else if (this.vrstaRobe === VrstaRobe.SVE) {\n      this.proizvodjacService.pronadjiSveProizvodjace()\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(res => {\n          this.proizvodjaci = res;\n          this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n        },\n          error => {\n            this.proizvodjaci = null;\n            console.log('Pronaci svu robu je bacilo gresku', error);\n          });\n    } else if (this.vrstaRobe === VrstaRobe.ULJA) {\n      this.proizvodjacService.pronadjiSveProizvodjaceUljaPoVrsti(this.vrstaUlja)\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(res => {\n          this.proizvodjaci = res;\n          this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n        },\n          error => {\n            this.proizvodjaci = null;\n            console.log('Pronaci svu robu je bacilo gresku', error);\n          });\n    } else if (this.vrstaRobe === VrstaRobe.OSTALO) {\n      this.route.params.subscribe((params: Params) => {\n        this.proizvodjacService.pronadjiSveProizvodjaceKategorije(params.id)\n          .pipe(takeWhile(() => this.alive))\n          .subscribe(res => {\n            this.proizvodjaci = res;\n            this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n          },\n            error => {\n              this.proizvodjaci = null;\n              console.log('Pronaci svu robu je bacilo gresku', error);\n            });\n      });\n    }\n  }\n\n  filtriraj() {\n    this.filter.naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.filter.raspolozivost);\n    this.filter.proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.filter.proizvodjac, this.proizvodjaci);\n    this.filterEvent.emit(this.filter);\n  }\n\n  resetujFilter() {\n    this.filter.raspolozivost = this.raspolozivost[1];\n    this.filter.proizvodjac = this.proizvodjaci[0].naziv;\n    this.filter.naStanju = this.utilsService.daLiRobaTrebaDaBudeNaStanju(this.raspolozivost, this.filter.raspolozivost);\n    this.filter.proizvodjacId = this.utilsService.vratiIdProizvodjacaAkoPostoji(this.filter.proizvodjac, this.proizvodjaci);\n\n    this.filterEvent.emit(this.filter);\n  }\n}\n","module.exports = \"<div class=\\\"tabela-div\\\" *ngIf=\\\"dataSource != null && dataSource.length > 0\\\">\\r\\n  <p class=\\\"pdv\\\"><i>Sve cene su prikazane sa pdv-om.</i></p>\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n    <!-- Kataloski broj Column -->\\r\\n    <ng-container matColumnDef=\\\"katbr\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Kataloški broj </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p class=\\\"mat-body-2\\\">\\r\\n          {{roba.katbr}}\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Kataloski broj proizvodjaca Column -->\\r\\n    <ng-container matColumnDef=\\\"katbrpro\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Kataloški broj proizvodjača </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p>\\r\\n          {{roba.katbrpro}}\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Naziv Column -->\\r\\n    <ng-container matColumnDef=\\\"naziv\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Naziv </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p>\\r\\n          {{roba.naziv}}\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Proizvodjač Column -->\\r\\n    <ng-container matColumnDef=\\\"proizvodjac\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Proizvodjač </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p class=\\\"mat-body-2\\\">\\r\\n          {{roba.proizvodjac.naziv}}\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Cena Column -->\\r\\n    <ng-container matColumnDef=\\\"cena\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Cena </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <p class=\\\"mat-body-2 text-right iznos-margin\\\">\\r\\n          {{roba.cena | currency:\\\" \\\"}} RSD\\r\\n        </p>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Stanje Column -->\\r\\n    <ng-container matColumnDef=\\\"stanje\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\"> Stanje </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <div *ngIf=\\\"roba.stanje > 0\\\" class=\\\"text-center\\\">\\r\\n          <mat-icon class=\\\"boja-zelena-50\\\">check_circle_outline</mat-icon>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"roba.stanje == 0\\\" class=\\\"text-center\\\">\\r\\n          <mat-icon class=\\\"boja-crvena-50\\\">remove_circle_outline</mat-icon>\\r\\n        </div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- Kolicina Column -->\\r\\n    <ng-container matColumnDef=\\\"kolicina\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Količina </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n          <input type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"0\\\" max=\\\"{{roba.stanje}}\\\" class=\\\"kolicina-labela\\\"\\r\\n            [(ngModel)]=\\\"roba.kolicina\\\" />\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Kropa dugme Column -->\\r\\n    <ng-container matColumnDef=\\\"korpa\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <div *ngIf=\\\"roba.stanje > 0\\\">\\r\\n          <button mat-raised-button class=\\\"button-glavni-100\\\" (click)='dodajUKorpu(roba)'>Dodaj u\\r\\n            korpu</button>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Da li ima na stanju ikona -->\\r\\n    <ng-container matColumnDef=\\\"u-korpi\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\r\\n        <div *ngIf=\\\"uKorpi(roba.katbr)\\\">\\r\\n          <mat-icon class=\\\"boja-crvena-50\\\">add_shopping_cart</mat-icon>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns();\\\"></tr>\\r\\n  </table>\\r\\n  <mat-paginator #paginator [length]=\\\"tableLength\\\" [pageSize]=\\\"rowsPerPage\\\" [pageSizeOptions]=\\\"[5, 10, 25]\\\"\\r\\n    [pageIndex]=\\\"pageIndex\\\" [length]=\\\"tableLength\\\" [showFirstLastButtons]=\\\"true\\\" (page)=\\\"paginatorEvent($event)\\\">\\r\\n  </mat-paginator>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Roba, Partner } from 'src/app/e-shop/model/dto';\r\nimport { LoginService } from 'src/app/e-shop/service/login.service';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { NotifikacijaService } from 'src/app/shared/service/notifikacija.service';\r\nimport { MatSnackBarKlase } from 'src/app/shared/model/konstante';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\n\r\n@Component({\r\n  selector: 'app-tabela',\r\n  templateUrl: './tabela.component.html',\r\n  styleUrls: ['./tabela.component.scss']\r\n})\r\nexport class TabelaComponent implements OnInit {\r\n\r\n  @Input() dataSource: any[];\r\n  @Input() roba: Roba[];\r\n\r\n  // Paging and Sorting elements\r\n  @Input() rowsPerPage = 10;\r\n  @Input() pageIndex = 0;\r\n  @Input() tableLength;\r\n  @Output() magacinEvent = new EventEmitter<any>();\r\n\r\n  public partner: Partner;\r\n  private korpa: Korpa;\r\n\r\n  // Tabela\r\n  private columnDefinitions = [\r\n    { def: 'katbr', ifNotAuth: true },\r\n    { def: 'katbrpro', ifNotAuth: true },\r\n    { def: 'proizvodjac', ifNotAuth: true },\r\n    { def: 'naziv', ifNotAuth: true },\r\n    { def: 'cena', ifNotAuth: true },\r\n    { def: 'stanje', ifNotAuth: true },\r\n    { def: 'kolicina', ifNotAuth: false },\r\n    { def: 'korpa', ifNotAuth: false },\r\n    { def: 'u-korpi', ifNotAuth: false },\r\n  ];\r\n\r\n  constructor(\r\n    private utilsService: AppUtilsService,\r\n    private loginServis: LoginService,\r\n    private notifikacijaServis: NotifikacijaService,\r\n    private dataService: DataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.dataService.trenutnaKorpa.subscribe(korpa => this.korpa = korpa);\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.magacinEvent.emit(pageEvent);\r\n  }\r\n\r\n  getDisplayedColumns(): string[] {\r\n    const isPartner = this.partner.ppid != null;\r\n    const dataColumns = this.columnDefinitions\r\n      .filter(cd => isPartner || cd.ifNotAuth)\r\n      .map(cd => cd.def);\r\n    return dataColumns;\r\n  }\r\n\r\n  dodajUKorpu(roba: Roba) {\r\n    const snackBarPoruka = this.utilsService.dodajUKorpu(roba);\r\n    this.notifikacijaServis.notify(snackBarPoruka, MatSnackBarKlase.Zelena);\r\n    this.utilsService.izbrisiRobuSaStanja(this.roba, roba);\r\n  }\r\n\r\n  uKorpi(katBr: string): boolean {\r\n    return this.utilsService.daLiJeRobaUKorpi(this.korpa, katBr);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n        \\r\\n    <!-- Filter komponenta izdvojena -->\\r\\n    <app-filter [vrstaRobe]=\\\"vrstaRobe\\\" [vrstaUlja]=\\\"vrstaUlja\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\">\\r\\n    </app-filter>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n        \\r\\n    <app-tabela \\r\\n    [rowsPerPage]=\\\"rowsPerPage\\\"\\r\\n    [pageIndex]=\\\"pageIndex\\\"\\r\\n    [tableLength]=\\\"tableLength\\\"\\r\\n    [dataSource]=\\\"dataSource\\\"\\r\\n    [roba]=\\\"roba\\\"\\r\\n    (magacinEvent)=\\\"paginatorEvent($event)\\\"\\r\\n    ></app-tabela>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba, Partner } from 'src/app/e-shop/model/dto';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { VrstaRobe } from 'src/app/e-shop/model/roba.enum';\r\nimport { Filter } from 'src/app/e-shop/model/filter';\r\n@Component({\r\n  selector: 'app-antifriz',\r\n  templateUrl: './antifriz.component.html',\r\n  styleUrls: ['./antifriz.component.css']\r\n})\r\nexport class AntifrizComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.ULJA;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public filter: Filter = new Filter();\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n\r\n  public vrstaUlja = 'antifriz';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.pronandjiSavAntifriz();\r\n  }\r\n\r\n  pronandjiSavAntifriz() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(\r\n      this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId, this.vrstaUlja\r\n    )\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresku: ' + error);\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n}\r\n","module.exports = \".sirina-odabira-vrste {\\r\\n    width: 450px;\\r\\n    float: right;\\r\\n}\\r\\n.forms-input-industrija {\\r\\n    display: flex;\\r\\n    border-radius: 45px;\\r\\n    padding: 1px;\\r\\n    margin-top: 5px;\\r\\n    background: white;\\r\\n    border:2px solid grey;\\r\\n    width: 40%;\\r\\n    font-weight: bold;\\r\\n    text-align: center;\\r\\n}\\r\\n.col-lg {\\r\\n  padding: 0px !important;\\r\\n}\\r\\n@media only screen and (max-device-width :1025px) { \\r\\n\\r\\n    .mobilna-visina {\\r\\n      margin-top: 10px;\\r\\n    }\\r\\n\\r\\n    .forms-input-industrija {\\r\\n      display: flex;\\r\\n      border-radius: 45px;\\r\\n      padding: 1px;\\r\\n      margin-top: 30px;\\r\\n      background: white;\\r\\n      border:2px solid grey;\\r\\n      width: 80%;\\r\\n      font-weight: bold;\\r\\n      text-align: center;\\r\\n    }\\r\\n  }\\r\\n@media only screen and (max-device-width : 640px) { \\r\\n\\r\\n    .mobilna-visina {\\r\\n      margin-top: 10px;\\r\\n    }\\r\\n    \\r\\n    .sirina-odabira-vrste {\\r\\n        width: 100%;\\r\\n    }\\r\\n    .forms-input-industrija {\\r\\n      border-radius: 45px;\\r\\n      background: white;\\r\\n      border:2px solid grey;\\r\\n      width:100%;\\r\\n      margin-top: 5px;\\r\\n      font-weight: bold;\\r\\n      text-align: center;\\r\\n      display: flex;\\r\\n      }  \\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"d-flex col-lg p-2 justify-content-center sirina-odabira-vrste\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n            <label class=\\\"pozadina-glavna-100 boja-siva-400 input-group-text \\\" for=\\\"inputGroupSelect01\\\">Izaberite vrstu\\r\\n                maziva:</label>\\r\\n        </div>\\r\\n        <select class=\\\"custom-select mobilna-visina\\\" (change)=\\\"onChange()\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"izabranaVrsta\\\">\\r\\n            <option *ngFor=\\\"let izabranaVrsta of vrste\\\" [value]=\\\"izabranaVrsta\\\">{{izabranaVrsta}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex align-items-center col-lg justify-content-center\\\">\\r\\n        <div class=\\\"forms-input-industrija\\\">\\r\\n            <input class=\\\"flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n        \\r\\n    <!-- Filter komponenta izdvojena -->\\r\\n    <app-filter [industrijkoUljeEvent]=\\\"vrstaIndustijskihUlja.asObservable()\\\" [vrstaRobe]=\\\"vrstaRobe\\\" [vrstaUlja]=\\\"vrstaUlja\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\">\\r\\n    </app-filter>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    \\r\\n    <app-tabela \\r\\n    [rowsPerPage]=\\\"rowsPerPage\\\"\\r\\n    [pageIndex]=\\\"pageIndex\\\"\\r\\n    [tableLength]=\\\"tableLength\\\"\\r\\n    [dataSource]=\\\"dataSource\\\"\\r\\n    [roba]=\\\"roba\\\"\\r\\n    (magacinEvent)=\\\"paginatorEvent($event)\\\"\\r\\n    ></app-tabela>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY, Subject } from 'rxjs';\r\nimport { Roba } from 'src/app/e-shop/model/dto';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { VrstaRobe } from 'src/app/e-shop/model/roba.enum';\r\nimport { Filter } from 'src/app/e-shop/model/filter';\r\n@Component({\r\n  selector: 'app-industrijska',\r\n  templateUrl: './industrijska.component.html',\r\n  styleUrls: ['./industrijska.component.css']\r\n})\r\nexport class IndustrijskaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.ULJA;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public filter: Filter = new Filter();\r\n  public vrstaIndustijskihUlja: Subject<string> = new Subject<string>();\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  public vrste: string[] = ['Hidraulično ulje', 'Kompresorkso ulje', 'Reduktorsko ulje',\r\n    'Transformatorsko ulje', 'Turbinska ulja', 'Ulja za pneumatske alate', 'Ulja za klizne staze', 'Ulja za prenos toplote'];\r\n  public izabranaVrsta: string = this.vrste[0];\r\n\r\n  public vrsteUlja = [\r\n    { 'url': 'hidraulicna', 'naziv': 'Hidraulično ulje' },\r\n    { 'url': 'kompresorska', 'naziv': 'Kompresorkso ulje' },\r\n    { 'url': 'redutktorska', 'naziv': 'Reduktorsko ulje' },\r\n    { 'url': 'transformatorska', 'naziv': 'Transformatorsko ulje' },\r\n    { 'url': 'turbinska', 'naziv': 'Turbinska ulja' },\r\n    { 'url': 'pneumatska', 'naziv': 'Ulja za pneumatske alate' },\r\n    { 'url': 'klizna', 'naziv': 'Ulja za klizne staze' },\r\n    { 'url': 'prenosna', 'naziv': 'Ulja za prenos toplote' },\r\n  ];\r\n\r\n  private alive = true;\r\n\r\n  public vrstaUlja = 'hidraulicna';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.pronandjiUlja();\r\n  }\r\n\r\n  pronandjiUlja() {\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(\r\n      this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  onChange() {\r\n    this.vrsteUlja.forEach(vrsta => {\r\n      if (vrsta.naziv === this.izabranaVrsta) {\r\n        this.vrstaUlja = vrsta.url;\r\n        this.vrstaIndustijskihUlja.next(this.vrstaUlja);\r\n      }\r\n    });\r\n    this.pronandjiUlja();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n        \\r\\n    <!-- Filter komponenta izdvojena -->\\r\\n    <app-filter [vrstaRobe]=\\\"vrstaRobe\\\" [vrstaUlja]=\\\"vrstaUlja\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\">\\r\\n    </app-filter>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n        \\r\\n    <app-tabela \\r\\n    [rowsPerPage]=\\\"rowsPerPage\\\"\\r\\n    [pageIndex]=\\\"pageIndex\\\"\\r\\n    [tableLength]=\\\"tableLength\\\"\\r\\n    [dataSource]=\\\"dataSource\\\"\\r\\n    [roba]=\\\"roba\\\"\\r\\n    (magacinEvent)=\\\"paginatorEvent($event)\\\"\\r\\n    ></app-tabela>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba } from 'src/app/e-shop/model/dto';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { VrstaRobe } from 'src/app/e-shop/model/roba.enum';\r\nimport { Filter } from 'src/app/e-shop/model/filter';\r\n@Component({\r\n  selector: 'app-kociona',\r\n  templateUrl: './kociona.component.html',\r\n  styleUrls: ['./kociona.component.css']\r\n})\r\nexport class KocionaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.ULJA;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public filter: Filter = new Filter();\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n\r\n  public vrstaUlja = 'kociona';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.pronandjiSvaKocionaUlja();\r\n  }\r\n\r\n  pronandjiSvaKocionaUlja() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(\r\n      this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId, this.vrstaUlja\r\n      )\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n        \\r\\n    <!-- Filter komponenta izdvojena -->\\r\\n    <app-filter [vrstaRobe]=\\\"vrstaRobe\\\" [vrstaUlja]=\\\"vrstaUlja\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\">\\r\\n    </app-filter>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n   \\r\\n    <app-tabela \\r\\n    [rowsPerPage]=\\\"rowsPerPage\\\"\\r\\n    [pageIndex]=\\\"pageIndex\\\"\\r\\n    [tableLength]=\\\"tableLength\\\"\\r\\n    [dataSource]=\\\"dataSource\\\"\\r\\n    [roba]=\\\"roba\\\"\\r\\n    (magacinEvent)=\\\"paginatorEvent($event)\\\"\\r\\n    ></app-tabela>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba } from 'src/app/e-shop/model/dto';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { VrstaRobe } from 'src/app/e-shop/model/roba.enum';\r\nimport { Filter } from 'src/app/e-shop/model/filter';\r\n@Component({\r\n  selector: 'app-menjacko',\r\n  templateUrl: './menjacko.component.html',\r\n  styleUrls: ['./menjacko.component.css']\r\n})\r\nexport class MenjackoComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.ULJA;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public filter: Filter = new Filter();\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n\r\n  public vrstaUlja = 'menjacka';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n     this.pronandjiSvaMenjackaUlja();\r\n  }\r\n\r\n  pronandjiSvaMenjackaUlja() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(\r\n      this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId, this.vrstaUlja\r\n      )\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n        <div class=\\\"forms-input\\\">\\r\\n            <input class=\\\"p-1 flex-grow-1 search__input\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchValue\\\" (keyup.enter)=\\\"pronaciPoTrazenojReci(searchValue)\\\" />\\r\\n            <div class=\\\"p-1\\\" (click)='pronaciPoTrazenojReci(searchValue)'>\\r\\n                <button mat-mini-fab class=pozadina-glavna-100>\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"p-1\\\" (click)='toogleFilterDiv()'>\\r\\n                <button *ngIf=\\\"!otvoriFilter\\\" class=pozadina-glavna-100 mat-mini-fab>\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"otvoriFilter\\\" mat-mini-fab class=\\\"button-glavni-200\\\">\\r\\n                    <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <label *ngIf=\\\"pocetnoPretrazivanje\\\">\\r\\n            <font color=\\\"#424242\\\"> Ukucajte kataloski broj</font>\\r\\n        </label>\\r\\n    </div>\\r\\n        \\r\\n    <!-- Filter komponenta izdvojena -->\\r\\n    <app-filter [vrstaRobe]=\\\"vrstaRobe\\\" [vrstaUlja]=\\\"vrstaUlja\\\" [otvoriFilter]=\\\"otvoriFilter\\\" (filterEvent)=\\\"filtriraj($event)\\\">\\r\\n    </app-filter>\\r\\n\\r\\n    <div class=\\\"d-flex flex-column prazna-tabela\\\" *ngIf=\\\"!pronadjenaRoba\\\">\\r\\n        <i class=\\\"material-icons icon-size\\\">\\r\\n            error_outline\\r\\n        </i>\\r\\n        <h1 class=\\\"h1-upozorenje\\\">Artikal ne postoji</h1>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center prazna-tabela\\\" *ngIf=\\\"ucitavanje\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n    \\r\\n    <app-tabela \\r\\n    [rowsPerPage]=\\\"rowsPerPage\\\"\\r\\n    [pageIndex]=\\\"pageIndex\\\"\\r\\n    [tableLength]=\\\"tableLength\\\"\\r\\n    [dataSource]=\\\"dataSource\\\"\\r\\n    [roba]=\\\"roba\\\"\\r\\n    (magacinEvent)=\\\"paginatorEvent($event)\\\"\\r\\n    ></app-tabela>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { Roba } from 'src/app/e-shop/model/dto';\r\nimport { Korpa } from 'src/app/e-shop/model/porudzbenica';\r\nimport { RobaService } from 'src/app/e-shop/service/roba.service';\r\nimport { AppUtilsService } from 'src/app/e-shop/utils/app-utils.service';\r\nimport { DataService } from 'src/app/e-shop/service/data/data.service';\r\nimport { VrstaRobe } from 'src/app/e-shop/model/roba.enum';\r\nimport { Filter } from 'src/app/e-shop/model/filter';\r\n\r\n@Component({\r\n  selector: 'app-motorna',\r\n  templateUrl: './motorna.component.html',\r\n  styleUrls: ['./motorna.component.css']\r\n})\r\nexport class MotornaComponent implements OnInit {\r\n\r\n  public roba: Roba[];\r\n  public vrstaRobe = VrstaRobe.ULJA;\r\n\r\n  // Paging and Sorting elements\r\n  public rowsPerPage = 10;\r\n  public pageIndex = 0;\r\n  public sort = null;\r\n  public tableLength;\r\n\r\n  public filter: Filter = new Filter();\r\n\r\n  public searchValue = '';\r\n  public lastSearchValue = '';\r\n  public pocetnoPretrazivanje: boolean;\r\n\r\n  public ucitavanje = false;\r\n  public pronadjenaRoba = true;\r\n  public otvoriFilter = false;\r\n  public dataSource: any;\r\n\r\n  private alive = true;\r\n\r\n  public vrstaUlja = 'motorna';\r\n\r\n  constructor(\r\n    private robaService: RobaService,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.pocetnoPretrazivanje = true;\r\n    this.pronandjiSvoMotornoUlje();\r\n  }\r\n\r\n  pronandjiSvoMotornoUlje() {\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n\r\n    this.robaService.pronadjiUlje(this.sort, this.rowsPerPage, this.pageIndex, null, null, null, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronadjiEntitetePoPretrazi(searchValue) {\r\n    this.pocetnoPretrazivanje = false;\r\n    this.lastSearchValue = searchValue;\r\n    this.ucitavanje = true;\r\n    this.dataSource = null;\r\n    this.ucitavanje = true;\r\n    this.pronadjenaRoba = true;\r\n    this.robaService.pronadjiUlje(\r\n      this.sort, this.rowsPerPage, this.pageIndex, searchValue, this.filter.naStanju, this.filter.proizvodjacId, this.vrstaUlja)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 404) {\r\n            this.pronadjenaRoba = false;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.pronadjenaRoba = true;\r\n          this.roba = res.content;\r\n          this.roba = this.dataService.skiniSaStanjaUkolikoJeUKorpi(this.roba);\r\n          this.dataSource = this.roba;\r\n          this.rowsPerPage = res.size;\r\n          this.pageIndex = res.number;\r\n          this.tableLength = res.totalElements;\r\n        },\r\n        error => {\r\n          this.roba = null;\r\n          console.log('Podnaci robu izbacilo je gresko');\r\n        });\r\n  }\r\n\r\n  pronaciPoTrazenojReci(searchValue) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.pronadjiEntitetePoPretrazi(searchValue);\r\n  }\r\n\r\n  paginatorEvent(pageEvent) {\r\n    this.dataSource = [];\r\n    this.rowsPerPage = pageEvent.pageSize;\r\n    this.pageIndex = pageEvent.pageIndex;\r\n    this.pronadjiEntitetePoPretrazi(this.searchValue);\r\n  }\r\n\r\n  toogleFilterDiv() {\r\n    this.otvoriFilter = !this.otvoriFilter;\r\n  }\r\n\r\n  filtriraj(filter: Filter) {\r\n    if (this.dataSource) {\r\n      this.pageIndex = 0;\r\n    }\r\n    this.filter = filter;\r\n    this.pronadjiEntitetePoPretrazi( this.searchValue);\r\n  }\r\n}\r\n","module.exports = \".industrijski-stil {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n.spusti {\\r\\n    margin-top: 0px;\\r\\n}\\r\\n@media only screen and (max-device-width :1025px) { \\r\\n    .spusti {\\r\\n        margin-top: 30px;\\r\\n    }\\r\\n}\\r\\n@media only screen and (max-device-width : 1000px) { \\r\\n    .spusti {\\r\\n        margin-top: 10px;\\r\\n    }\\r\\n}\"","module.exports = \"<main class=\\\"spusti\\\">\\r\\n    <mat-tab-group mat-stretch-tabs>\\r\\n        <mat-tab label=\\\"Motorna ulja\\\">\\r\\n            <app-motorna></app-motorna>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Menjačka ulja\\\">\\r\\n            <app-menjacko></app-menjacko>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Kočiona ulja\\\">\\r\\n            <app-kociona></app-kociona>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Antifiriz\\\">\\r\\n            <app-antifriz></app-antifriz>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Industrijska ulja\\\">\\r\\n            <app-industrijska></app-industrijska>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n</main>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ulja',\r\n  templateUrl: './ulja.component.html',\r\n  styleUrls: ['./ulja.component.css']\r\n})\r\nexport class UljaComponent {\r\n  selectedTab = 0;\r\n  changeTab(tabIndex: number) {\r\n    this.selectedTab = tabIndex;\r\n  }\r\n}\r\n","import { Page } from './page';\r\n\r\nexport class ValueHelp {\r\n   id?: number;\r\n   naziv?: string;\r\n}\r\n\r\nexport class Roba {\r\n    public robaid: number;\r\n    public katbr: string;\r\n    public katbrpro: string;\r\n    public naziv: string;\r\n    public proizvodjac: Proizvodjac;\r\n    public grupa: string;\r\n    public podGrupa: string;\r\n    public stanje: number;\r\n    public cena: number;\r\n    public rabat: number;\r\n    public kolicina: number;\r\n}\r\n\r\nexport class RobaPage extends Page {\r\n    content: Roba[] = null;\r\n}\r\n\r\nexport class Partner {\r\n    ppid?: number;\r\n    naziv?: string;\r\n    email?: string;\r\n    adresa?: string;\r\n    webKorisnik?: string;\r\n    noviPassword?: string;\r\n    stariPassword?: string;\r\n    stanje?: number;\r\n    stanjeporoku?: number;\r\n}\r\n\r\nexport class Fakutra {\r\n    id?: number;\r\n    orderId?: number;\r\n    vremePorucivanja?: string;\r\n    status?: ValueHelp;\r\n    nacinPlacanja?: ValueHelp;\r\n    nacinPrevoza?: ValueHelp;\r\n    adresa?: ValueHelp;\r\n    napomena?: string;\r\n    brojStavki?: number;\r\n    iznosNarucen?: number;\r\n    iznosPotvrdjen?: number;\r\n    detalji?: FakturaDetalji[];\r\n}\r\n\r\nexport class FakturaPage extends Page {\r\n    content: Fakutra[] = null;\r\n}\r\n\r\nexport class FakturaDetalji {\r\n    robaId?: number;\r\n    kataloskiBroj?: string;\r\n    proizvodjac?: Proizvodjac;\r\n    kolicina?: number;\r\n    potvrdjenaKolicina?: number;\r\n    cena?: number;\r\n    status?: ValueHelp;\r\n    rabat?: number;\r\n    vremePorucivanja?: string;\r\n}\r\n\r\nexport class Proizvodjac {\r\n    public proid: string;\r\n    public naziv: string;\r\n}\r\n\r\nexport declare class Credentials {\r\n    username?: string;\r\n    password?: boolean;\r\n}\r\n\r\nexport class Registracija {\r\n    // Pravno Lice\r\n    nazivFirme?: string;\r\n    pib?: string;\r\n    // Fizicko Lice\r\n    imeIPrezime?: string;\r\n    // zajednicki sadrzilac\r\n    grad?: string;\r\n    adresa?: string;\r\n    email?: string;\r\n    kontaktTelefon?: string;\r\n    daLiJePravnoLice?: boolean;\r\n}\r\n\r\nexport class ResetSifre {\r\n    email?: string;\r\n}\r\n\r\nexport class PromenaSifre {\r\n    ppid?: number;\r\n    staraSifra?: string;\r\n    sifra?: string;\r\n    ponovljenjaSifra?: string;\r\n}\r\n","export class Filter {\r\n    proizvodjacId?: string;\r\n    proizvodjac?: string;\r\n    raspolozivost?: string;\r\n    naStanju?: boolean;\r\n\r\n    Filter() {\r\n        this.proizvodjac = '';\r\n        this.raspolozivost = 'Svi artikli';\r\n    }\r\n}\r\n","export declare const TIMEOUT = 100000;\r\n\r\nexport const transformator = {\r\n    prevoz_0: 'Automaterijal vozi robu',\r\n    prevoz_1: 'Vi vozite robu',\r\n    prevoz_2: 'Treće lice vozi robu',\r\n    kategorija_AMORTIZER: 'Amortizeri',\r\n    kategorija_BRAVA: 'Brava vrata i elek. ulozak brave',\r\n    kategorija_BREGASTA: 'Bregasta osovina',\r\n    kategorija_BRISAC: 'Brisači - metlice',\r\n    kategorija_CILINDAR: 'Cilindri-kočioni',\r\n    kategorija_DIHTUNG: 'Dihtunzi svi',\r\n    kategorija_DISK_PLOCICE: 'Disk pločice',\r\n    kategorija_DISKOVI: 'Diskovi',\r\n    kategorija_DVOTAKTOL: 'Dvotaktol ulje',\r\n    kategorija_GREJAC: 'Grejači',\r\n    kategorija_GUMICE: 'Gumice',\r\n    kategorija_HEMIJA: 'Hemija za automobile',\r\n    kategorija_HIDROPODIZAC: 'Hidropodizači ventila',\r\n    kategorija_HLADNJAK: 'Hladnjak',\r\n    kategorija_ZGLOB: 'Zglob homokinetički',\r\n    kategorija_INTERKULER: 'Interkuler',\r\n    kategorija_KABLOVI: 'Kablovi za svećice',\r\n    kategorija_KARIKE: 'Karike',\r\n    kategorija_KARTER: 'Karter',\r\n    kategorija_KLACKALICA: 'Klackalica',\r\n    kategorija_KVACILO: 'Kvačilo - Zamajci',\r\n    kategorija_KLIP: 'Klip',\r\n    kategorija_KOZMETIKA: 'Kozmetika',\r\n    kategorija_KUGLA: 'Kugla',\r\n    kategorija_LANAC: 'Lanac - klizači, setovi',\r\n    kategorija_LETVA: 'Letva volana - spone',\r\n    kategorija_LEZAJEVI: 'Ležajevi radilice',\r\n    kategorija_MANZENTA: 'Manžetne',\r\n    kategorija_PAKNOVI: 'Paknovi',\r\n    kategorija_PREKIDAC: 'Prekidači',\r\n    kategorija_PROTOKOMER: 'Protokomer',\r\n    kategorija_PUMPA: 'Pumpa za vodu',\r\n    kategorija_RAME: 'Rame',\r\n    kategorija_RAZVODNIK: 'Razvodnik paljenja',\r\n    kategorija_REMENICA: 'Remenice',\r\n    kategorija_SEMERING: 'Semering',\r\n    kategorija_SVECICA: 'Svećica i kablovi',\r\n    kategorija_SIJALICA: 'Sijalice',\r\n    kategorija_SILEN: 'Silen blokovi',\r\n    kategorija_STABILIZATOR: 'Stabilizator',\r\n    kategorija_TERMODAVAC: 'Termodavač',\r\n    kategorija_TERMOSTAT: 'Termostat',\r\n    kategorija_VENTIL: 'Ventili',\r\n    kategorija_VENTILATOR: 'Ventilator',\r\n    kategorija_ZUPCANIK: 'Zupčanici',\r\n    empty: 'N/A'\r\n};\r\n\r\nexport const mesec = {\r\n    mesec_01: 'Januar',\r\n    mesec_02: 'Februar',\r\n    mesec_03: 'Mart',\r\n    mesec_04: 'April',\r\n    mesec_05: 'Maj',\r\n    mesec_06: 'Jun',\r\n    mesec_07: 'Jul',\r\n    mesec_08: 'Avgust',\r\n    mesec_09: 'Septembar',\r\n    mesec_10: 'Oktobar',\r\n    mesec_11: 'Novembar',\r\n    mesec_12: 'Decembar'\r\n};\r\n","export class Page {\r\n    last?: boolean = null;\r\n    totalPages?: number = null;\r\n    totalElements: number = null;\r\n    numberOfElements: number = null;\r\n    first ?: boolean = null;\r\n    sort?: string = null;\r\n    size?: number = null;\r\n    number?: number = null;\r\n}\r\n","import { Proizvodjac } from './dto';\r\n\r\nexport class Korpa {\r\n    public roba: RobaKorpa[] = [];\r\n    public ukupno: number;\r\n    public nacinPlacanja: number;\r\n    public nacinIsporuke: number;\r\n    public napomena: string;\r\n}\r\n\r\nexport class RobaKorpa {\r\n\r\n    public robaid: number;\r\n    public katbr: string;\r\n    public katbrpro: string;\r\n    public naziv: string;\r\n    public proizvodjac: Proizvodjac;\r\n    public kolicina: number;\r\n    public rabat: number;\r\n    public cenaKom: number;\r\n    public stanje: number;\r\n    public cenaUkupno: number;\r\n\r\n    constructor(robaid: number, katbr: string, katbrpro: string, naziv: string, proizvodjac: Proizvodjac,\r\n         kolicina: number, rabat: number, cena: number, stanje: number) {\r\n        this.robaid = robaid;\r\n        this.katbr = katbr;\r\n        this.katbrpro = katbrpro;\r\n        this.naziv = naziv;\r\n        this.proizvodjac = proizvodjac;\r\n        this.kolicina = kolicina;\r\n        this.rabat = rabat;\r\n        this.cenaKom = cena;\r\n        this.cenaUkupno = cena * kolicina;\r\n        this.stanje = stanje;\r\n    }\r\n}\r\n\r\nexport class RobaPromena {\r\n    katbr: string = null;\r\n    opis: string = null;\r\n    rapolozivaKolicina: number = null;\r\n    trazenaKolicina: number = null;\r\n}\r\n","export enum VrstaRobe {\r\n    SVE,\r\n    FILTERI,\r\n    AKUMULATORI,\r\n    ULJA,\r\n    OSTALO\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <main class=\\\"licni-podaci\\\">\\r\\n    <div class=\\\"d-flex flex-column  flex-xl-row\\\">\\r\\n      <div class=\\\"strana\\\">\\r\\n        <div class=\\\"header2\\\">\\r\\n          <h1>Licni podaci</h1>\\r\\n        </div>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <span class=\\\"leva-strana\\\">\\r\\n              Naziv:\\r\\n            </span> <span class=\\\"desna-strana\\\"> {{partner.naziv}} </span>\\r\\n          </li>\\r\\n          <li><span class=\\\"leva-strana\\\">Adresa:</span> {{partner.adresa}}</li>\\r\\n          <li><span class=\\\"leva-strana\\\">Email:</span> {{partner.email | lowercase}}</li>\\r\\n          <li><span class=\\\"leva-strana\\\">Stanje:</span> <span [ngClass]=\\\"{'dugovanje': daLiDuguje}\\\"><b>{{partner.stanje\\r\\n                | currency:\\\" \\\"}} RSD</b></span></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"strana2\\\">\\r\\n        <div class=\\\"header2\\\">\\r\\n          <h1>Akcije</h1>\\r\\n        </div>\\r\\n        <mat-accordion>\\r\\n          <mat-expansion-panel class=\\\"exp-panel\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <p class=\\\"panel\\\">Promenite adresu</p>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <form role=\\\"form\\\" [formGroup]=\\\"adresaForm\\\">\\r\\n              <div>\\r\\n                <mat-form-field>\\r\\n                  <input type=\\\"text\\\" #ulica formControlName=\\\"ulica\\\" [ngClass]=\\\"{ 'is-invalid': adresaSubmited && a.ulica.errors }\\\"\\r\\n                    matInput placeholder=\\\"Ulica i broj\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"adresaSubmited && a.ulica.errors\\\">\\r\\n                <div *ngIf=\\\"a.ulica.errors.required\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Naziv ulice je obavezan</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"a.ulica.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Naziv ulice mora imati minimalno 3 karaktera</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field>\\r\\n                  <input type=\\\"text\\\" #grad formControlName=\\\"grad\\\" matInput [ngClass]=\\\"{ 'is-invalid': adresaSubmited && a.grad.errors }\\\"\\r\\n                    placeholder=\\\"Grad\\\">\\r\\n                </mat-form-field>\\r\\n                <div *ngIf=\\\"adresaSubmited && a.grad.errors\\\">\\r\\n                  <div *ngIf=\\\"a.grad.errors.required\\\">\\r\\n                      <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"a.grad.errors.minlength\\\">\\r\\n                      <p class=\\\"upozorenje\\\">Naziv grada mora imati minimalno 2 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"button-div\\\">\\r\\n                <button class=\\\"button-glavni-100\\\" (click)=\\\"promeniAdresu(ulica.value, grad.value)\\\" mat-raised-button>Sacuvaj</button>\\r\\n                <button class=\\\"button-crveni-50 float-right\\\" (click)=\\\"ulica.value = ''; grad.value = ''; adresaSubmited=false\\\"\\r\\n                  mat-raised-button>Poništi</button>\\r\\n              </div>\\r\\n            </form>\\r\\n\\r\\n          </mat-expansion-panel>\\r\\n          <mat-expansion-panel class=\\\"exp-panel\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <p class=\\\"panel\\\">Promenite email</p>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <form role=\\\"form\\\" [formGroup]=\\\"emailForm\\\">\\r\\n              <div>\\r\\n                <mat-form-field>\\r\\n                  <input type=\\\"email\\\" #email formControlName=\\\"email\\\" matInput [ngClass]=\\\"{ 'is-invalid': emailSubmited && e.email.errors }\\\"\\r\\n                    placeholder=\\\"Novi email...\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"emailSubmited && e.email.errors\\\">\\r\\n                <div *ngIf=\\\"e.email.errors.required\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Email je obavezan</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"e.email.errors.email\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Email nije validan</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"button-div\\\">\\r\\n                <button class=\\\"button-glavni-100\\\" (click)=\\\"promeniLEmail(email.value)\\\" mat-raised-button>Sacuvaj</button>\\r\\n                <button class=\\\"button-crveni-50 float-right\\\" (click)=\\\"email.value = ''; emailSubmited=false\\\"\\r\\n                  mat-raised-button>Poništi</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-expansion-panel>\\r\\n          <mat-expansion-panel class=\\\"exp-panel\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <p class=\\\"panel\\\">Promenite korisničko ime</p>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <div>\\r\\n              <mat-radio-group class=\\\"radio-group\\\" [(ngModel)]=\\\"korisnickoImeMetod\\\">\\r\\n                <mat-radio-button color=\\\"primary\\\" value=\\\"email\\\">Koristi trenutni email</mat-radio-button>\\r\\n                <mat-radio-button color=\\\"primary\\\" value=\\\"novo\\\">\\r\\n                  <p>Kreirajte novi</p>\\r\\n                </mat-radio-button>\\r\\n              </mat-radio-group>\\r\\n            </div>\\r\\n\\r\\n            <form role=\\\"form\\\" [formGroup]=\\\"usernameForm\\\">\\r\\n              <div>\\r\\n                <mat-form-field *ngIf=\\\"korisnickoImeMetod != 'email'\\\">\\r\\n                  <input type=\\\"text\\\" #username formControlName=\\\"username\\\" [ngClass]=\\\"{ 'email-selected': korisnickoImeMetod === 'email'}\\\"\\r\\n                    [attr.disabled]=\\\"daLiKorisnickoImeTrebaDaBudeEmail() ? '' : null\\\" matInput placeholder=\\\"Novo korisničko ime\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <div *ngIf=\\\"usernameSubmited && u.username.errors\\\">\\r\\n                <div *ngIf=\\\"u.username.errors.required && korisnickoImeMetod != 'email'\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Korisničko ime je obavezno</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"u.username.errors.minlength && korisnickoImeMetod != 'email'\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Korisničko ime mora imati vise od 3 karaktera</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"usernameSubmited && korisnickoImeJeZauzeto\\\">\\r\\n                <p class=\\\"upozorenje\\\">Korisničko ime je vec zazueto</p>\\r\\n              </div>\\r\\n              <div class=\\\"button-div\\\">\\r\\n                <button class=\\\"button-glavni-100\\\" (click)=\\\"promeniUsername()\\\" mat-raised-button>Sacuvaj</button>\\r\\n                <button *ngIf=\\\"korisnickoImeMetod != 'email'\\\" class=\\\"button-crveni-50 float-right\\\" (click)=\\\"username.value = ''; usernameSubmited=false\\\"\\r\\n                  mat-raised-button>Poništi</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-expansion-panel>\\r\\n          <mat-expansion-panel class=\\\"exp-panel\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                <p class=\\\"panel\\\">Promenite šifru</p>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <form role=\\\"form\\\" [formGroup]=\\\"passwordForm\\\">\\r\\n              <div>\\r\\n                <mat-form-field>\\r\\n                  <input matInput type=\\\"password\\\" #staraSifra formControlName=\\\"staraSifra\\\" placeholder=\\\"Stara šifra\\\">\\r\\n                </mat-form-field>\\r\\n                <div *ngIf=\\\"passwordSubmited && !s.staraSifra.errors && losaSifra\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Stara šifra nije tačna</p>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"passwordSubmited && s.staraSifra.errors\\\">\\r\\n                  <div *ngIf=\\\"s.staraSifra.errors.required\\\">\\r\\n                    <p class=\\\" upozorenje\\\">Stara šifra je obavezna</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"s.staraSifra.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Korisničko ime mora imati vise od 3 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput type=\\\"password\\\" #novaSifra formControlName=\\\"novaSifra\\\" placeholder=\\\"Nova šifra\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"passwordSubmited && s.novaSifra.errors\\\">\\r\\n                  <div *ngIf=\\\"s.novaSifra.errors.required\\\">\\r\\n                    <p class=\\\" upozorenje\\\">Nova šifra je obavezna</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"s.novaSifra.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Nova sifra mora imati vise od 3 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput type=\\\"password\\\" #novaSifra2 formControlName=\\\"novaSifra2\\\" placeholder=\\\"Ponovite novu šifru\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"passwordSubmited && s.novaSifra2.errors\\\">\\r\\n                  <div *ngIf=\\\"s.novaSifra2.errors.required\\\">\\r\\n                    <p class=\\\" upozorenje\\\">Nova šifra je obavezna</p>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"s.novaSifra2.errors.minlength\\\">\\r\\n                    <p class=\\\"upozorenje\\\">Nova sifra mora imati vise od 3 karaktera</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"novaSifra.value != novaSifra2.value && !s.novaSifra.errors && !s.novaSifra2.errors  && passwordSubmited\\\">\\r\\n                  <p class=\\\"upozorenje\\\">Nova sifra nije ista</p>\\r\\n                </div>\\r\\n                <div class=\\\"button-div\\\">\\r\\n                  <button class=\\\"button-glavni-100\\\" (click)=\\\"promeniSifru(staraSifra.value, novaSifra.value, novaSifra2.value)\\\"\\r\\n                    mat-raised-button>Sacuvaj</button>\\r\\n                  <button *ngIf=\\\"korisnickoImeMetod != 'email'\\\" class=\\\"button-crveni-50 float-right\\\" (click)=\\\"username.value = ''; passwordSubmited=false\\\"\\r\\n                    mat-raised-button>Poništi</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"h1 {\\n  font-size: 1.3em;\\n  color: #273747;\\n  font-weight: bold;\\n  text-align: center; }\\n\\nli {\\n  padding: 10px;\\n  margin-top: 12px; }\\n\\n.exp-panel {\\n  margin-top: 12px; }\\n\\n.header2 {\\n  text-align: center;\\n  margin-top: 20px;\\n  margin-bottom: 30px; }\\n\\n.leva-strana {\\n  width: 80px;\\n  float: left;\\n  color: #345cac;\\n  font-weight: bold; }\\n\\n.desna-strana {\\n  font-weight: bold; }\\n\\n.licni-podaci {\\n  margin-top: 6%;\\n  width: 80%;\\n  margin-left: 10%; }\\n\\n.radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.panel {\\n  color: #345cac;\\n  font-weight: bold; }\\n\\n.email-selected {\\n  color: #8ea7b4 !important; }\\n\\n.dugovanje {\\n  color: #b71c1c; }\\n\\n.button-div {\\n  width: 70%;\\n  margin-left: 15%; }\\n\\n.strana {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  width: 90%;\\n  height: 340px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n  padding: 10px;\\n  border-bottom: 0.5px solid #273747;\\n  background-color: white; }\\n\\n.strana2 {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  width: 90%;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n  padding: 10px;\\n  border-bottom: 0.5px solid #273747;\\n  background-color: white; }\\n\\n@media only screen and (max-device-width: 640px) {\\n  .strana {\\n    width: 100%;\\n    height: 100%;\\n    margin-top: 10px;\\n    border-bottom: 0.5px solid #273747;\\n    background-color: white; }\\n  li {\\n    padding: 0px; }\\n  ul {\\n    margin: 0px;\\n    padding: 2px; }\\n  .licni-podaci {\\n    margin-top: 1%;\\n    width: 95%;\\n    margin-left: 0%; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../service/login.service';\r\nimport { Partner } from '../model/dto';\r\nimport { PartnerService } from '../service/partner.service';\r\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\r\nimport { throwError, EMPTY } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotifikacijaService } from 'src/app/shared/service/notifikacija.service';\r\nimport { MatSnackBarKlase } from 'src/app/shared/model/konstante';\r\n\r\n@Component({\r\n  selector: 'app-partner',\r\n  templateUrl: './partner.component.html',\r\n  styleUrls: ['./partner.component.scss']\r\n})\r\nexport class PartnerComponent implements OnInit {\r\n\r\n  public partner: Partner;\r\n  public daLiDuguje = false;\r\n  public korisnickoImeMetod = 'novo';\r\n  public losaSifra = false;\r\n  public korisnickoImeJeZauzeto = false;\r\n\r\n  public ucitavanje = false;\r\n  private alive = true;\r\n\r\n  // sve forme\r\n  public adresaForm: FormGroup;\r\n  public adresaSubmited = false;\r\n  public emailForm: FormGroup;\r\n  public emailSubmited = false;\r\n  public usernameForm: FormGroup;\r\n  public usernameSubmited = false;\r\n  public passwordForm: FormGroup;\r\n  public passwordSubmited = false;\r\n\r\n  constructor(\r\n    private loginServis: LoginService,\r\n    private partnerServis: PartnerService,\r\n    private formBuilder: FormBuilder,\r\n    private notifikacijaServis: NotifikacijaService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\r\n    if (this.partner) {\r\n      this.daLiDuguje = this.partner.stanje < 0;\r\n    }\r\n    this.inicijalizujSveRegistracioneForme();\r\n  }\r\n\r\n  inicijalizujSveRegistracioneForme() {\r\n    this.adresaForm = this.formBuilder.group({\r\n      ulica: ['', [Validators.required, Validators.minLength(3)]],\r\n      grad: ['', [Validators.required, Validators.minLength(2)]]\r\n    });\r\n    this.emailForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n    this.usernameForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n    });\r\n    this.passwordForm = this.formBuilder.group({\r\n      staraSifra: ['', [Validators.required, Validators.minLength(3)]],\r\n      novaSifra: ['', [Validators.required, Validators.minLength(3)]],\r\n      novaSifra2: ['', [Validators.required, Validators.minLength(3)]],\r\n    });\r\n  }\r\n\r\n  public daLiKorisnickoImeTrebaDaBudeEmail() {\r\n    return this.korisnickoImeMetod === 'email';\r\n  }\r\n\r\n  promeniAdresu(ulica: string, grad: string) {\r\n    const poruka = 'Adresa uspesno promenjena.';\r\n    this.adresaSubmited = true;\r\n    if (this.adresaForm.invalid) {\r\n      return;\r\n    }\r\n    this.partner.adresa = ulica + ', ' + grad;\r\n    this.updejtPartnera(this.partner, poruka);\r\n  }\r\n\r\n  promeniLEmail(email: string) {\r\n    const poruka = 'Email je uspesno promenjen.';\r\n    this.emailSubmited = true;\r\n    if (this.emailForm.invalid) {\r\n      return;\r\n    }\r\n    this.partner.email = email;\r\n    this.updejtPartnera(this.partner, poruka);\r\n  }\r\n\r\n  promeniUsername() {\r\n    let username = '';\r\n    this.usernameSubmited = true;\r\n    if (this.korisnickoImeMetod === 'email') {\r\n      username = this.partner.email;\r\n    } else if (this.usernameForm.invalid) {\r\n      return;\r\n    } else if (this.usernameForm.controls.username.value) {\r\n      username = this.usernameForm.controls.username.value;\r\n    }\r\n    const poruka = 'Vaše novo korisničko ime je: ' + username;\r\n    this.partner.webKorisnik = username;\r\n    this.partnerServis.updejtujPartnera(this.partner)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 400) {\r\n            this.korisnickoImeJeZauzeto = true;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.korisnickoImeJeZauzeto = false;\r\n          this.partner = res;\r\n          this.notifikacijaServis.notify(poruka, MatSnackBarKlase.Zelena);\r\n        },\r\n        error => {\r\n          console.log('Updejtovanje partnera nije uspelo');\r\n        });\r\n  }\r\n\r\n  promeniSifru(staraSifra: string, novaSifra: string, novaSifra2: string) {\r\n    this.passwordSubmited = true;\r\n    if (this.passwordForm.invalid ||\r\n      novaSifra === staraSifra) {\r\n      const a = this.s.staraSifra.errors.minLength;\r\n      return;\r\n    }\r\n    this.partner.noviPassword = novaSifra;\r\n    this.partner.stariPassword = staraSifra;\r\n    const poruka = 'Vaša šifra je uspeno promenjena';\r\n    this.partnerServis.updejtujPartnera(this.partner)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => {\r\n          if (error.status === 400) {\r\n            this.losaSifra = true;\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        }),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.partner = res;\r\n          this.losaSifra = false;\r\n          this.notifikacijaServis.notify(poruka, MatSnackBarKlase.Zelena);\r\n        },\r\n        error => {\r\n          console.log('Updejtovanje partnera nije uspelo');\r\n        });\r\n  }\r\n\r\n  updejtPartnera(partner: Partner, poruka: string) {\r\n    this.partnerServis.updejtujPartnera(this.partner)\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        catchError((error: Response) => throwError(error)),\r\n        finalize(() => this.ucitavanje = false)\r\n      )\r\n      .subscribe(\r\n        res => {\r\n          this.partner = res;\r\n          this.notifikacijaServis.notify(poruka, MatSnackBarKlase.Zelena);\r\n        },\r\n        error => {\r\n          console.log('Updejtovanje partnera nije uspelo');\r\n        });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get a() { return this.adresaForm.controls; }\r\n  get e() { return this.emailForm.controls; }\r\n  get u() { return this.usernameForm.controls; }\r\n  get s() { return this.passwordForm.controls; }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"flex-login\\\">\\n    <div class=\\\"login-form\\\">\\n      <h1>Promeni šifru</h1>\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"submitted == true && uspesnaPromena == false\\\">\\n        <p>Promena šifre nije uspela, zahtevajte ponovo poštu za resetovanje šifre.</p>\\n      </div>\\n      <form role=\\\"form\\\" [formGroup]=\\\"promenaSifreForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"password\\\" #pass1 formControlName=\\\"pass1\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Nova šifra\\\" id=\\\"pass1\\\"\\n            name=\\\"pass1\\\" />\\n          <div *ngIf=\\\"submitted && r.pass1.errors\\\">\\n            <div *ngIf=\\\"r.pass1.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\n            </div>\\n            <div *ngIf=\\\"r.pass1.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"password\\\" #pass2 formControlName=\\\"pass2\\\" class=\\\"form-control rounded\\\" placeholder=\\\"Ponovite šifru\\\"\\n            id=\\\"password\\\" name=\\\"password\\\" />\\n          <div *ngIf=\\\"submitted && r.pass2.errors\\\">\\n            <div *ngIf=\\\"r.pass2.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Šifra je obavezna</p>\\n            </div>\\n            <div *ngIf=\\\"r.pass2.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Šifra mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"submitted && !r.pass2.errors && pass1.value != pass2.value\\\">\\n            <p class=\\\"upozorenje\\\">Šifre nisu iste</p>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex\\\">\\n          <button mat-raised-button (click)=\\\"promeniSifru()\\\" class=\\\"rounded\\\" color=\\\"primary\\\">Promeni</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".flex-login {\\n  margin-top: 10%;\\n  display: flex;\\n  justify-content: center; }\\n\\n.login-form {\\n  width: 400px;\\n  justify-content: center; }\\n\\nh1 {\\n  text-align: center;\\n  text-transform: uppercase; }\\n\\nbutton {\\n  margin: auto;\\n  display: block; }\\n\\np {\\n  text-align: center; }\\n\\n.is-invalid {\\n  border: 1px solid red; }\\n\\n.upozorenje {\\n  text-align: left;\\n  font-size: 0.8em;\\n  color: red; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { PromenaSifre } from '../model/dto';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { PartnerService } from '../service/partner.service';\nimport { MatSnackBar } from '@angular/material';\nimport { NotifikacijaService } from 'src/app/shared/service/notifikacija.service';\nimport { MatSnackBarKlase } from 'src/app/shared/model/konstante';\n\n@Component({\n  selector: 'app-resetovanje-sfire',\n  templateUrl: './resetovanje-sfire.component.html',\n  styleUrls: ['./resetovanje-sfire.component.scss']\n})\nexport class ResetovanjeSfireComponent implements OnInit {\n  public promenaSifreForm: FormGroup;\n  public submitted = false;\n  public uspesnoLogovanje = true;\n  private staraSifra: string;\n  private ppid: number;\n\n  public ucitavanje = false;\n  private alive = true;\n  public uspesnaPromena = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private partnerServis: PartnerService,\n    private notifikacijaServis: NotifikacijaService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.promenaSifreForm = this.formBuilder.group({\n      pass1: ['', [Validators.required, Validators.minLength(3)]],\n      pass2: ['', [Validators.required, Validators.minLength(3)]]\n    });\n    this.route.params.subscribe((params: Params) => {\n      this.staraSifra = params.id;\n    });\n    this.route.queryParams.subscribe((params: Params) => {\n      this.ppid = params.id;\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get r() { return this.promenaSifreForm.controls; }\n\n  promeniSifru() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.promenaSifreForm.invalid || this.r.pass1.value !== this.r.pass2.value) {\n      return;\n    }\n    const dto = this.napraviDto();\n    this.partnerServis.promeniSifru(dto).pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => {\n        if (error.status === 400) {\n          this.uspesnaPromena = false;\n          return EMPTY;\n        }\n        return throwError(error);\n      }),\n      finalize(() => this.ucitavanje = false)\n    )\n    .subscribe(\n      res => {\n        this.uspesnaPromena = true;\n        this.notifikacijaServis.notify('Šifra uspešno promenjena', MatSnackBarKlase.Zelena);\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.uspesnaPromena = false;\n        console.log('Updejtovanje partnera nije uspelo');\n      });\n  }\n\n  private napraviDto(): PromenaSifre {\n    const dto = new PromenaSifre();\n    dto.sifra = this.r.pass1.value;\n    dto.ponovljenjaSifra = this.r.pass2.value;\n    dto.ppid = this.ppid;\n    dto.staraSifra = this.staraSifra;\n    return dto;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport {  timeoutWith, catchError } from 'rxjs/operators';\r\nimport { Korpa, RobaKorpa } from '../../model/porudzbenica';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { Roba } from '../../model/dto';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst DOMAIN_URL = '/api/informacije/';\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  private korpa: Korpa = this.korpaStorage.vratiKorpuIzMemorije() || new Korpa();\r\n  private korpaSubjekat = new BehaviorSubject(this.korpa);\r\n  public trenutnaKorpa = this.korpaSubjekat.asObservable();\r\n\r\n  constructor(private korpaStorage: LocalStorageService, private http: HttpClient) { }\r\n\r\n  ubaciUKorpu(robaKorpa: RobaKorpa) {\r\n    if (this.korpa.roba.length === 0) {\r\n      this.korpa.roba.push(robaKorpa);\r\n    } else {\r\n      let daLiPostojiVecUKorpi = false;\r\n      this.korpa.roba.forEach(roba => {\r\n        if (roba.katbr === robaKorpa.katbr) {\r\n          roba.kolicina = roba.kolicina + robaKorpa.kolicina;\r\n          roba.cenaUkupno = roba.kolicina * robaKorpa.cenaKom;\r\n          daLiPostojiVecUKorpi = true;\r\n        }\r\n      });\r\n      if (daLiPostojiVecUKorpi === false) {\r\n        this.korpa.roba.push(robaKorpa);\r\n      }\r\n    }\r\n    this.korpaStorage.cuvajKorpuULokalnojMemoriji(robaKorpa);\r\n    this.korpaSubjekat.next(this.korpa);\r\n  }\r\n\r\n  public skiniSaStanjaUkolikoJeUKorpi(robaBaza: Roba[]) {\r\n    const korpa = this.korpaStorage.vratiKorpuIzMemorije();\r\n    if (korpa && robaBaza) {\r\n      korpa.roba.forEach((storage: RobaKorpa) => {\r\n        robaBaza.forEach((roba: Roba) => {\r\n          if (storage.katbr === roba.katbr) {\r\n            roba.stanje = roba.stanje - storage.kolicina;\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return robaBaza;\r\n  }\r\n  public izbaciIzKorpe(index: number) {\r\n    this.korpa.roba.splice(index, 1);\r\n    this.korpaStorage.izbaciIzMemorije(index);\r\n    this.korpaSubjekat.next(this.korpa);\r\n  }\r\n\r\n  public vratiOpsteInformacije(vrsta: string): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + vrsta;\r\n    return this.http\r\n    .get(fullUrl)\r\n    .pipe(\r\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n      catchError((error: any) => throwError(error))\r\n    );\r\n  }\r\n\r\n  public ocistiKorpu() {\r\n    this.korpa = new Korpa();\r\n    this.korpaSubjekat.next(this.korpa);\r\n    this.korpaStorage.ocistiKorpuIzMemorije();\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\r\nimport { Korpa, RobaKorpa } from '../../model/porudzbenica';\r\nimport { Partner } from '../../model/dto';\r\n\r\nconst KORPA_KLJUC = 'korpa_roba';\r\nconst PARTNER_KLJUC = 'partner_kljuc';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) { }\r\n\r\n  public sacuvajPartneraUMemoriju(partner: Partner ) {\r\n    if (partner != null && partner.ppid != null) {\r\n    this.storage.set(PARTNER_KLJUC, partner);\r\n    }\r\n  }\r\n\r\n  public logout() {\r\n    this.storage.remove(PARTNER_KLJUC);\r\n    this.storage.remove(KORPA_KLJUC);\r\n  }\r\n\r\n  public procitajPartneraIzMemorije() {\r\n    return this.storage.get(PARTNER_KLJUC);\r\n  }\r\n\r\n  public vratiKorpuIzMemorije(): Korpa {\r\n    return this.storage.get(KORPA_KLJUC);\r\n  }\r\n\r\n  public cuvajKorpuULokalnojMemoriji(robaKorpa: RobaKorpa) {\r\n    let trenutnaKorpa: Korpa;\r\n    if (this.storage.get(KORPA_KLJUC)) {\r\n      trenutnaKorpa = this.storage.get(KORPA_KLJUC);\r\n      this.ubaciRobuUMemoriju(trenutnaKorpa, robaKorpa);\r\n    } else {\r\n      trenutnaKorpa = new Korpa();\r\n      trenutnaKorpa.roba.push(robaKorpa);\r\n    }\r\n\r\n    this.storage.set(KORPA_KLJUC, trenutnaKorpa);\r\n  }\r\n\r\n  private ubaciRobuUMemoriju(trenutnaKorpa: Korpa, robaKorpa: RobaKorpa) {\r\n      let daLiPostojiVecUMemoriji = false;\r\n      trenutnaKorpa.roba.forEach(storage => {\r\n        if (storage.katbr === robaKorpa.katbr) {\r\n          storage.kolicina = storage.kolicina + robaKorpa.kolicina;\r\n          storage.cenaUkupno = storage.kolicina * robaKorpa.cenaKom;\r\n          daLiPostojiVecUMemoriji = true;\r\n        }\r\n      });\r\n      if (daLiPostojiVecUMemoriji === false) {\r\n        trenutnaKorpa.roba.push(robaKorpa);\r\n      }\r\n  }\r\n\r\n  public izbaciIzMemorije(index: number) {\r\n    const korpa = this.vratiKorpuIzMemorije();\r\n    korpa.roba.splice(index, 1);\r\n    this.storage.set(KORPA_KLJUC, korpa);\r\n  }\r\n\r\n  public zameniArtikalSaNovim(robaKorpa: RobaKorpa) {\r\n    const trenutnaKorpa: Korpa = this.storage.get(KORPA_KLJUC);\r\n    trenutnaKorpa.roba.forEach(storage => {\r\n      if (storage.katbr === robaKorpa.katbr) {\r\n        storage.kolicina = robaKorpa.kolicina;\r\n        storage.cenaUkupno = robaKorpa.cenaUkupno;\r\n      }\r\n    });\r\n    this.storage.set(KORPA_KLJUC, trenutnaKorpa);\r\n  }\r\n\r\n  public ocistiKorpuIzMemorije() {\r\n    this.storage.remove(KORPA_KLJUC);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { timeoutWith, catchError, map } from 'rxjs/operators';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { Fakutra } from '../model/dto';\r\n\r\nconst DOMAIN_URL = '/api';\r\nconst FAKTURA_URL = '/fakture';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FakturaService {\r\n\r\n  constructor(private http: HttpClient, private utils: AppUtilsService) { }\r\n\r\n  public vratiFaktureKorisnika(page: number, pageSize: number, ppid: number) {\r\n    const parameterObject = {};\r\n    parameterObject['page'] = page;\r\n    parameterObject['pageSize'] = pageSize;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + FAKTURA_URL + '/' + ppid + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error)));\r\n  }\r\n\r\n  public vratiFakturuPojedinacno(id: number, ppid: number) {\r\n    const fullUrl = DOMAIN_URL + FAKTURA_URL + '/' + ppid + '/' + id;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error)));\r\n  }\r\n\r\n  public submitujFakturu(faktura: Fakutra) {\r\n    const fullUrl = DOMAIN_URL + FAKTURA_URL;\r\n    return this.http\r\n      .post(fullUrl, faktura)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { throwError, BehaviorSubject, EMPTY } from 'rxjs';\r\nimport { Credentials, Partner } from '../model/dto';\r\nimport { timeoutWith, catchError, finalize } from 'rxjs/operators';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from './data/local-storage.service';\r\nimport { DataService } from './data/data.service';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\nconst LOGIN_URL = '/login';\r\nconst LOGOUT_URL = '/logout';\r\nconst PARTNER_URL = '/api/partner';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  private partner: Partner = this.storageServis.procitajPartneraIzMemorije() || new Partner();\r\n  private partnerSubjekat = new BehaviorSubject(this.partner);\r\n  public ulogovaniPartner = this.partnerSubjekat.asObservable();\r\n\r\n  private uspesnoLogovanje = true;\r\n  private logovanjeSubjekat = new BehaviorSubject(this.uspesnoLogovanje);\r\n  public daLiJeLogovanjeUspesno = this.logovanjeSubjekat.asObservable();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private utils: AppUtilsService,\r\n    private korpaServis: DataService,\r\n    private storageServis: LocalStorageService) { }\r\n\r\n  public ulogujSe(credentials: Credentials) {\r\n    const parameterObject = {};\r\n    parameterObject['username'] = credentials.username;\r\n    parameterObject['password'] = credentials.password;\r\n    parameterObject['submit'] = 'Login';\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = LOGIN_URL + parametersString;\r\n\r\n    this.http.post(fullUrl, {}, { responseType: 'text' })\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      ).subscribe(res => {\r\n        this.vratiUlogovanogKorisnika();\r\n      },\r\n        error => {\r\n          this.logovanjeSubjekat.next(false);\r\n          this.storageServis.logout();\r\n          console.log('Greska kod logovanja');\r\n        });\r\n  }\r\n\r\n  private vratiUlogovanogKorisnika() {\r\n    const fullUrl = PARTNER_URL;\r\n    this.http.get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: HttpErrorResponse) => {\r\n          if (error.status === 404) {\r\n            this.logovanjeSubjekat.next(false);\r\n            return EMPTY;\r\n          }\r\n          return throwError(error);\r\n        })\r\n      ).subscribe(res => {\r\n        this.partner = res;\r\n        this.storageServis.sacuvajPartneraUMemoriju(this.partner);\r\n        this.partnerSubjekat.next(this.partner);\r\n        this.router.navigateByUrl('naslovna');\r\n      },\r\n        error => {\r\n          this.logovanjeSubjekat.next(false);\r\n          console.log('Logovanje nije uspelo.');\r\n        });\r\n  }\r\n\r\n  public logout() {\r\n    const fullUrl = LOGOUT_URL;\r\n    this.http.post(fullUrl, {}, { responseType: 'text' })\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      )\r\n      .subscribe(() => {\r\n        this.partner = new Partner();\r\n        this.logovanjeSubjekat.next(true);\r\n        this.partnerSubjekat.next(this.partner);\r\n        this.korpaServis.ocistiKorpu();\r\n        this.storageServis.logout();\r\n        this.router.navigateByUrl('naslovna');\r\n      },\r\n        error => {\r\n          this.logovanjeSubjekat.next(false);\r\n          console.log('Greska kod logout-a');\r\n        });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Partner, ResetSifre, PromenaSifre } from '../model/dto';\r\n\r\nconst PARTNER_URL = '/api/partner';\r\nconst RESETOVANJE_SIFRE_URL = '/promena-sifre';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PartnerService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public updejtujPartnera(partner: Partner): Observable<Partner> {\r\n    const fullUrl = PARTNER_URL;\r\n\r\n    return this.http\r\n        .put(fullUrl, partner)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public promeniSifru(reset: PromenaSifre): Observable<any> {\r\n    const fullUrl = PARTNER_URL + RESETOVANJE_SIFRE_URL;\r\n\r\n    return this.http\r\n        .put(fullUrl, reset)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst DOMAIN_URL = '/api';\r\nconst ROBA_URL = '/proizvodjaci';\r\nconst FILTERI_URL = '/filteri';\r\nconst AKUMULATORI_URL = '/akumulatori';\r\nconst ULJA_URL = '/ulja';\r\nconst KATEGORIJA_URL = '/kategorija';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProizvodjacService {\r\n\r\n  constructor(private http: HttpClient, private utils: AppUtilsService) { }\r\n\r\n  public pronadjiSveProizvodjace(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceFiltera(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + FILTERI_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceKategorije(kategorija: string): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + KATEGORIJA_URL + '/' + kategorija.toUpperCase();\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceAkumulatora(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + AKUMULATORI_URL;\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n\r\n  public pronadjiSveProizvodjaceUljaPoVrsti(vrstaUlja): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + ULJA_URL + this.utils.vratiPutDoResursaZaUlje(vrstaUlja);\r\n\r\n    return this.http\r\n        .get(fullUrl)\r\n        .pipe(\r\n          timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n          catchError((error: any) => throwError(error))\r\n        );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeoutWith, catchError } from 'rxjs/operators';\r\nimport { Sort } from '@angular/material';\r\nimport { AppUtilsService } from '../utils/app-utils.service';\r\n\r\nconst DOMAIN_URL = '/api';\r\nconst ROBA_URL = '/roba';\r\nconst FILTERI_URL = '/filteri';\r\nconst AKUMULATORI_URL = '/akumulatori';\r\nconst ULJA_URL = '/ulja';\r\nconst OSTALE_KATEGORIJE_URL = '/kategorije';\r\n\r\nconst TIMEOUT = 15000;\r\nconst TIMEOUT_ERROR = 'Timeout error!';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RobaService {\r\n\r\n\r\n  constructor(private http: HttpClient, private utils: AppUtilsService) { }\r\n\r\n  public pronadjiSvuRobu(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + parametersString;\r\n\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public pronadjiFiltere(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + FILTERI_URL + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public pronadjiAkumulatore(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + AKUMULATORI_URL + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public pronadjiUlje(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId, vrstaUlja): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + ROBA_URL + ULJA_URL + this.utils.vratiPutDoResursaZaUlje(vrstaUlja) + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public pronadjiPoKategoriji(sort: Sort, pageSize, page, searchValue, naStanju, proizvodjacId, kategorija: string): Observable<any> {\r\n    const parameterObject = {};\r\n    parameterObject['pageSize'] = pageSize;\r\n    parameterObject['page'] = page;\r\n    if (sort) {\r\n      parameterObject['sortBy'] = sort.active.toLocaleUpperCase();\r\n      parameterObject['sortDirection'] = sort.direction.toLocaleUpperCase();\r\n    }\r\n    parameterObject['searchTerm'] = searchValue;\r\n    parameterObject['proizvodjac'] = proizvodjacId;\r\n    parameterObject['naStanju'] = naStanju;\r\n    const parametersString = this.utils.vratiKveriParametre(parameterObject);\r\n    const fullUrl = DOMAIN_URL + OSTALE_KATEGORIJE_URL + '/' + kategorija.toUpperCase() + parametersString;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n\r\n  public ostaleKategorije(): Observable<any> {\r\n    const fullUrl = DOMAIN_URL + OSTALE_KATEGORIJE_URL;\r\n    return this.http\r\n      .get(fullUrl)\r\n      .pipe(\r\n        timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\r\n        catchError((error: any) => throwError(error))\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Roba, Proizvodjac } from '../model/dto';\r\nimport { RobaKorpa, Korpa } from '../model/porudzbenica';\r\nimport { DataService } from '../service/data/data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppUtilsService {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  public vratiIdProizvodjacaAkoPostoji(izabraniProizvodjac: string, proizvodjaci: Proizvodjac[]): string {\r\n    let proId = null;\r\n    if (izabraniProizvodjac && izabraniProizvodjac === 'SVI') {\r\n      proId = null;\r\n    } else {\r\n      proizvodjaci.forEach(pr => {\r\n        if (pr.naziv === izabraniProizvodjac) {\r\n          proId = pr.proid;\r\n        }\r\n      });\r\n    }\r\n    return proId;\r\n  }\r\n\r\n  public daLiRobaTrebaDaBudeNaStanju(raspolozivost: string[], izabranaRaspolozivost: string): boolean {\r\n    if (raspolozivost && izabranaRaspolozivost === raspolozivost[1]) {\r\n      return null;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public dodajUKorpu(roba: Roba): string {\r\n    let snackBarPoruka = 'Artikal je ubacen u korpu.';\r\n    if (roba.kolicina == null || roba.kolicina <= 0) {\r\n      roba.kolicina = 1;\r\n    }\r\n    if (roba.stanje < roba.kolicina) {\r\n      snackBarPoruka = 'Maksimalan kolicina ' + roba.stanje + '. ' + snackBarPoruka;\r\n      roba.kolicina = roba.stanje;\r\n    }\r\n    const robaKorpa =\r\n      new RobaKorpa(roba.robaid, roba.katbr, roba.katbrpro, roba.naziv, roba.proizvodjac,\r\n        roba.kolicina, roba.rabat, roba.cena, roba.stanje);\r\n    this.dataService.ubaciUKorpu(robaKorpa);\r\n    return snackBarPoruka;\r\n  }\r\n\r\n  public izbrisiRobuSaStanja(roba: Roba[], robaUKorpi: Roba) {\r\n    roba.forEach(robaBaza => {\r\n      if (robaBaza.katbr === robaUKorpi.katbr) {\r\n        robaBaza.stanje = robaBaza.stanje - robaUKorpi.kolicina;\r\n      }\r\n    });\r\n  }\r\n\r\n  public daLiJeRobaUKorpi(korpa: Korpa, katBr: string) {\r\n    let uKorpi = false;\r\n    korpa.roba.forEach(r => {\r\n      if (r.katbr === katBr) {\r\n        uKorpi = true;\r\n      }\r\n    });\r\n    return uKorpi;\r\n  }\r\n\r\n  public vratiKveriParametre(map) {\r\n\r\n    let parameterString = '';\r\n\r\n    Object.keys(map).forEach(function (elem, index) {\r\n      const value = map[elem];\r\n      if (value != null || value === 0) {\r\n        if (parameterString) {\r\n          parameterString += '&';\r\n        }\r\n\r\n        parameterString += elem + '=' + value;\r\n      }\r\n    });\r\n\r\n    if (parameterString) {\r\n      parameterString = '?' + parameterString;\r\n    }\r\n    return parameterString;\r\n  }\r\n\r\n  public vratiPutDoResursaZaUlje(vrstaUlja): string {\r\n    let url = '/motorna';\r\n    if (vrstaUlja === 'motorna') {\r\n      url = '/motorna';\r\n    } else if (vrstaUlja === 'menjacka') {\r\n      url = '/menjacka';\r\n    } else if (vrstaUlja === 'kociona') {\r\n      url = '/kociona';\r\n    } else if (vrstaUlja === 'antifriz') {\r\n      url = '/antifriz';\r\n    } else if (vrstaUlja === 'hidraulicna') {\r\n      url = '/hidraulicna';\r\n    } else if (vrstaUlja === 'kompresorska') {\r\n      url = '/kompresorska';\r\n    } else if (vrstaUlja === 'redutktorska') {\r\n      url = '/redutktorska';\r\n    } else if (vrstaUlja === 'transformatorska') {\r\n      url = '/transformatorska';\r\n    } else if (vrstaUlja === 'turbinska') {\r\n      url = '/turbinska';\r\n    } else if (vrstaUlja === 'pneumatska') {\r\n      url = '/pneumatska';\r\n    } else if (vrstaUlja === 'klizna') {\r\n      url = '/klizna';\r\n    } else if (vrstaUlja === 'prenosna') {\r\n      url = '/prenosna';\r\n    }\r\n    return url;\r\n  }\r\n}\r\n","module.exports = \"<footer>\\n  <div class=\\\"granica\\\"></div>\\n  <div class=\\\"d-flex flex-lg-row flex-column\\\">\\n    <div class=\\\"slika-div\\\">\\n      <img [src]=\\\"img_logo\\\" alt=\\\"Automaterijal\\\">\\n    </div>\\n    <div class=\\\"flex-fill\\\">\\n      <ul>\\n        <li class=\\\"naslov\\\">Adresa</li>\\n        <li class=\\\"detalji\\\">Prvomajska 61</li>\\n        <li class=\\\"detalji\\\">15000 Šabac</li>\\n        <li class=\\\"detalji\\\">015/334-630</li>\\n        <li class=\\\"detalji\\\">office@automaterijal.com</li>\\n      </ul>\\n    </div>\\n    <div class=\\\"flex-fill\\\">\\n      <ul>\\n        <li class=\\\"naslov\\\">Korisni Linkovi</li>\\n        <li class=\\\"detalji\\\">\\n          <a [routerLink]=\\\"['/naslovna']\\\">Naslovna</a>\\n        </li>\\n        <li class=\\\"detalji\\\">\\n          <a [routerLink]=\\\"['/o-nama']\\\">O nama</a>\\n        </li>\\n        <li class=\\\"detalji\\\">\\n          <a [routerLink]=\\\"['/kontakt']\\\">Kontakt</a>\\n        </li>\\n        <li class=\\\"detalji\\\">\\n          <a [routerLink]=\\\"['/roba']\\\">E-prodavnica</a>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"flex-fill\\\">\\n      <ul>\\n        <li class=\\\"naslov\\\">Korisni Upiti</li>\\n        <li class=\\\"detalji\\\">\\n          <button (click)=\\\"otvoriUpitDialog()\\\">Upit za ponudu</button>\\n        </li>\\n        <li class=\\\"detalji\\\">\\n          <button (click)=\\\"otvoriPorukuDialog()\\\">Poruka</button>\\n        </li>\\n        <li class=\\\"detalji\\\">\\n          <button (click)=\\\"otvoriResgracijaDialog()\\\">Registracija</button>\\n        </li>\\n        <li class=\\\"detalji\\\">\\n          <button (click)=\\\"otvoriZaboravljenuSifruDialog()\\\">Zaboravljen šifra</button>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</footer>\"","module.exports = \"footer {\\n  padding: 2% 8%;\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  left: 0; }\\n\\n.granica {\\n  margin-bottom: 2rem;\\n  width: 100%;\\n  border-top: 1px solid #dfe5e7; }\\n\\n.naslov {\\n  font-size: 1.1em;\\n  font-weight: bold;\\n  margin-bottom: 0.5em; }\\n\\n.detalji {\\n  font-size: 1em;\\n  margin-left: 0.2em;\\n  color: #435d69; }\\n\\nul {\\n  list-style-type: none; }\\n\\na {\\n  color: #435d69; }\\n\\nimg {\\n  margin-right: 3em;\\n  padding: 0px;\\n  margin-top: 3%;\\n  width: 250px;\\n  height: 90px;\\n  display: block; }\\n\\n.slika-div {\\n  width: 25%;\\n  padding: 0px;\\n  margin: 0px; }\\n\\nbutton {\\n  background: none !important;\\n  color: inherit;\\n  border: none;\\n  padding: 0 !important;\\n  font: inherit; }\\n\\nbutton:hover {\\n  border-bottom: 1px solid #444;\\n  cursor: pointer; }\\n\\n@media screen and (max-width: 990px) {\\n  ul {\\n    text-align: center;\\n    margin: 0px;\\n    margin-top: 5px;\\n    padding: 0px; }\\n  .slika-div {\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 100%; }\\n  img {\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 250px;\\n    height: 90px; }\\n  .detalji {\\n    margin-left: 0em; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { RegistracijaModalComponent } from '../shared/modal/registracija-modal/registracija-modal.component';\nimport { ZaboravljenaSifraModalComponent } from '../shared/modal/zaboravljena-sifra-modal/zaboravljena-sifra-modal.component';\nimport { PorukaModalComponent } from '../shared/modal/poruka-modal/poruka-modal.component';\nimport { UpitModalComponent } from '../shared/modal/upit-modal/upit-modal.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  public img_logo = '/assets/slike/logo/automaterijal.png';\n  constructor(\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n  }\n\n  otvoriPorukuDialog() {\n    this.dialog.open(PorukaModalComponent, {\n      width: '400px'\n    });\n  }\n\n  otvoriResgracijaDialog() {\n    this.dialog.open(RegistracijaModalComponent, {\n      width: '400px'\n    });\n  }\n  otvoriZaboravljenuSifruDialog() {\n    this.dialog.open(ZaboravljenaSifraModalComponent, {\n      width: '400px'\n    });\n  }\n\n  otvoriUpitDialog() {\n    this.dialog.open(UpitModalComponent, {\n      width: '400px'\n    });\n  }\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container pozadina-siva-400\\\">\\r\\n  <mat-sidenav #drawer class=\\\"sidenav pozadina-glavna-50\\\" fixedInViewport=\\\"true\\\"\\r\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\" [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar *ngIf=\\\"partner.ppid\\\" class=\\\"side-toolbar pozadina-glavna-50 header-pozicija\\\">\\r\\n      <div class=\\\"d-flex flex-column justify-content-center\\\">\\r\\n        <div class=\\\"d-flex justify-content-center header-sirina\\\">\\r\\n          <mat-icon class=\\\"boja-siva-300\\\">person</mat-icon>\\r\\n        </div>\\r\\n        <div><p class=\\\"text-center header-navigacija\\\">{{partner.naziv}}</p></div>\\r\\n      </div>\\r\\n    </mat-toolbar>\\r\\n    <mat-nav-list [class.margin-gore]=\\\"partner.ppid\\\">\\r\\n      <mat-divider *ngIf=\\\"partner.ppid\\\" class=\\\"pozadina-siva-300\\\"></mat-divider>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['naslovna']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>home</mat-icon>\\r\\n        <p mat-line>Naslovna</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['o-nama']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>book</mat-icon>\\r\\n        <p mat-line>O nama</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['kontakt']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>contact_phone</mat-icon>\\r\\n        <p mat-line>Kontakt</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list>\\r\\n      <h3 class=\\\"pozadina-glavna-50 boja-siva-300\\\" mat-subheader>Internet prodavnica</h3>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" *ngIf=\\\"partner.ppid\\\" [routerLink]=\\\"['korpa']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon matBadgeColor=\\\"warn\\\" class=\\\"boja-siva-300\\\" matBadge=\\\"{{korpaBadge}}\\\" mat-list-icon>shopping_cart\\r\\n        </mat-icon>\\r\\n        <p mat-line>Korpa</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['roba']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>searche</mat-icon>\\r\\n        <p mat-line>Roba - pretraga</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['ulja']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>invert_colors</mat-icon>\\r\\n        <p mat-line>Ulja</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['filteri']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>layers</mat-icon>\\r\\n        <p mat-line>Filteri</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['akumulatori']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>battery_charging_full</mat-icon>\\r\\n        <p mat-line>Akumulatori</p>\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['ostalo']\\\" [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>category</mat-icon>\\r\\n        <p mat-line>Ostalo</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list *ngIf=\\\"partner.ppid\\\">\\r\\n      <h3 class=\\\"pozadina-glavna-50 boja-siva-300\\\" mat-subheader>Moj Profil</h3>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['licni-podaci']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>person</mat-icon>\\r\\n        <p mat-line>Licni Podaci</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item class=\\\"material-icons\\\" [routerLink]=\\\"['porudzbenice']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>list</mat-icon>\\r\\n        <p mat-line>Porudzbine</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-nav-list>\\r\\n      <mat-list-item *ngIf=\\\"partner.ppid == null\\\" class=\\\"material-icons\\\" [routerLink]=\\\"['login']\\\"\\r\\n        [routerLinkActive]=\\\"['pozadina-glavna-200']\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>exit_to_app</mat-icon>\\r\\n        <p mat-line>Login</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item *ngIf=\\\"partner.ppid\\\" class=\\\"material-icons\\\" (click)=\\\"otvoriDialog()\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" mat-list-icon>power_settings_new</mat-icon>\\r\\n        <p mat-line>Logout</p>\\r\\n      </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar *ngIf=\\\"isHandset$ | async\\\" class=\\\"header-pozicija pozadina-glavna-50\\\">\\r\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\r\\n        <mat-icon class=\\\"boja-siva-300\\\" aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n    </mat-toolbar>\\r\\n    <div class=\\\"pozicija\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n    <app-footer></app-footer>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.pozicija {\\n  margin: 0 auto;\\n  padding-bottom: 220px; }\\n\\n.sidenav {\\n  width: 200px;\\n  height: 100%; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0; }\\n\\n.header-navigacija {\\n  font-size: 0.6em !important;\\n  width: 200pxpx; }\\n\\n.header-sirina {\\n  width: 200px !important; }\\n\\np {\\n  color: #f6f6f6 !important; }\\n\\nmat-divider {\\n  border-width: 1px;\\n  border-style: solid;\\n  border-color: #dfe5e7; }\\n\\n.margin-gore {\\n  margin-top: 70px; }\\n\\n.side-toolbar {\\n  height: 75px;\\n  width: 200px;\\n  padding: 0px 0px !important; }\\n\\n.header-pozicija {\\n  top: 0px;\\n  position: fixed;\\n  z-index: 999; }\\n\\n@media screen and (max-device-width: 1000px) {\\n  .pozicija {\\n    padding-bottom: 490px; } }\\n\\n@media screen and (max-width: 990px) {\\n  .pozicija {\\n    padding-bottom: 500px; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { Partner } from '../e-shop/model/dto';\nimport { LoginService } from '../e-shop/service/login.service';\nimport { DataService } from '../e-shop/service/data/data.service';\nimport { LogoutModalComponent } from '../shared/modal/logout-modal/logout-modal.component';\n\n@Component({\n  selector: 'app-navigacija',\n  templateUrl: './navigacija.component.html',\n  styleUrls: ['./navigacija.component.scss']\n})\nexport class NavigacijaComponent implements OnInit {\n\n  public korpaBadge = 0;\n  public partner: Partner;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private korpaServis: DataService,\n    private loginServis: LoginService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.korpaServis.trenutnaKorpa.subscribe(korpa => this.korpaBadge = korpa.roba.length);\n    this.loginServis.ulogovaniPartner.subscribe(partner => this.partner = partner);\n  }\n\n  otvoriDialog(): void {\n    const dialogRef = this.dialog.open(LogoutModalComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatButtonModule, MatCheckboxModule, MatTableModule, MatTabsModule,\n  MatToolbarModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule,\n   MatCardModule, MatMenuModule, MatPaginatorModule, MatSortModule, MatExpansionModule,\n    MatFormField, MatFormFieldModule,\n    MatChipsModule, MatSelectModule, MatAutocompleteModule,\n    MatRadioModule, MatSnackBarModule, MatBadgeModule,\n    MatDialogModule, MatProgressSpinnerModule, MatInputModule, MatStepperModule} from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatChipsModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTabsModule,\n    CommonModule,\n    FormsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    MatInputModule,\n    MatDialogModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTabsModule,\n    CommonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \"<div class=\\\"header\\\">\\n    <h1>{{brend.ime}}</h1>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n</div>\\n<mat-dialog-content>\\n    <img [src]=\\\"brend.urlSlikePozadina\\\" />\\n    <div [innerHTML]=\\\"brend.opis\\\"></div>\\n</mat-dialog-content>\"","module.exports = \"h1 {\\n  color: #345cac;\\n  text-align: center;\\n  display: inline; }\\n\\np {\\n  margin-top: 20px; }\\n\\n.header {\\n  height: 3em;\\n  text-align: center; }\\n\\n.mat-dialog-content {\\n  max-height: 75vh; }\\n\\n/* :host /deep/ mySelector { */\\n\\n:host ::ng-deep p {\\n  margin-top: 20px; }\\n\\nimg {\\n  width: 100%;\\n  height: 100%; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Brend } from 'src/app/e-commerce/model/dto';\n\n@Component({\n  selector: 'app-brendovi-modal',\n  templateUrl: './brendovi-modal.component.html',\n  styleUrls: ['./brendovi-modal.component.scss']\n})\nexport class BrendoviModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<BrendoviModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public brend: Brend) { }\n\n  ngOnInit() {\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main>\\r\\n    <div class=\\\"header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"bezIzmena()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"pozadina-glavna-50 boja-siva-400\\\">\\r\\n      <h1>Artikal broj: {{data.katbr}}</h1>\\r\\n    </div>\\r\\n    <table class=\\\"table\\\">\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td>Proizvodjač</td>\\r\\n          <td>{{data.proizvodjac.naziv}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Cena</td>\\r\\n          <td>{{data.cenaKom | currency:\\\" \\\"}} RSD</td>\\r\\n        <tr>\\r\\n          <td>Kolicina</td>\\r\\n          <td>\\r\\n            <select class=\\\"custom-select custom-select-md\\\" [(ngModel)]=\\\"data.kolicina\\\">\\r\\n              <option *ngFor=\\\"let kolicina of stanje\\\" [value]=\\\"kolicina\\\">{{kolicina}}</option>\\r\\n            </select>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>Ukupno za placanje</td>\\r\\n          <td><b>{{data.kolicina * data.cenaKom | currency:\\\" \\\"}} RSD</b></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\r\\n      <button class=\\\"button-glavni-100\\\" mat-raised-button (click)=\\\"sacuvajIzmene()\\\">Sacuvaj</button>\\r\\n      <span class=\\\"col-2\\\"></span>\\r\\n      <button class=\\\"button-crveni-50\\\" mat-raised-button (click)=\\\"bezIzmena()\\\">Poništi</button>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \"p {\\n  text-align: center; }\\n\\nh1 {\\n  text-align: center;\\n  font-size: 1.2em;\\n  color: white;\\n  padding: 10px; }\\n\\ntd {\\n  font-size: 1em; }\\n\\n.header {\\n  height: 2em; }\\n\\n.pomeri {\\n  margin-left: 10px; }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport * as _ from 'lodash';\r\nimport { RobaKorpa } from 'src/app/e-shop/model/porudzbenica';\r\n\r\n@Component({\r\n  selector: 'app-izmena-kolicine-modal',\r\n  templateUrl: './izmena-kolicine-modal.component.html',\r\n  styleUrls: ['./izmena-kolicine-modal.component.scss']\r\n})\r\nexport class IzmenaKolicineModalComponent implements OnInit {\r\n\r\n  public stanje = [];\r\n  public data: RobaKorpa;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<IzmenaKolicineModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public roba: RobaKorpa) {}\r\n\r\n  ngOnInit() {\r\n    this.data = _.clone(this.roba);\r\n    this.popuniSelectStanja();\r\n  }\r\n\r\n  popuniSelectStanja() {\r\n    let index = 1;\r\n    while (index <= this.data.stanje) {\r\n      this.stanje[index - 1] = index;\r\n      index++;\r\n    }\r\n  }\r\n\r\n  sacuvajIzmene() {\r\n    this.data.kolicina = _.toNumber(this.data.kolicina);\r\n    this.data.cenaUkupno = this.data.kolicina * this.data.cenaKom;\r\n    this.dialogRef.close(this.data);\r\n  }\r\n\r\n  bezIzmena() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <main>\\n      <p>Da li ste sigurni da zelite da se odjavite?</p>\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\n      <button mat-raised-button class=\\\"button-glavni-100\\\" (click)=\\\"logout()\\\">Odjava</button>\\n      <span class=\\\"col-2\\\"></span>\\n      <button mat-raised-button class=\\\"button-crveni-50\\\" (click)=\\\"ostaniUlogovan()\\\">Poništi</button>\\n    </div>\\n  </main>\\n</div>\"","module.exports = \"p {\\n  text-align: center; }\\n\\nh1 {\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/e-shop/service/login.service';\n\n@Component({\n  selector: 'app-logout-modal',\n  templateUrl: './logout-modal.component.html',\n  styleUrls: ['./logout-modal.component.scss']\n})\nexport class LogoutModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<LogoutModalComponent>,\n    private router: Router,\n    private loginServis: LoginService) {}\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.loginServis.logout();\n    this.router.navigateByUrl('naslovna');\n    this.dialogRef.close();\n  }\n\n  ostaniUlogovan() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"header\\\">\\n  <h3>Obaveštenje</h3>\\n  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<p>Došlo je do promene količina traženih artikala.</p>\\n<mat-dialog-content>\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"katBr\\\">\\n      <th mat-header-cell *matHeaderCellDef> Kat. br. </th>\\n      <td mat-cell *matCellDef=\\\"let roba\\\"> {{roba.katbr}} </td>\\n    </ng-container>\\n\\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"trazeno\\\">\\n      <th mat-header-cell *matHeaderCellDef> Traženo </th>\\n      <td mat-cell *matCellDef=\\\"let roba\\\"> {{roba.trazenaKolicina}} </td>\\n    </ng-container>\\n\\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"raspolozivo\\\">\\n      <th mat-header-cell *matHeaderCellDef> Raspoloživo </th>\\n      <td mat-cell *matCellDef=\\\"let roba\\\">\\n        <p class=\\\"boja-crvena-50\\\">{{roba.rapolozivaKolicina}}</p>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  <div class=\\\"text-center pomeri-dole\\\">\\n    <button mat-raised-button (click)=\\\"zatvoriDialog()\\\" class=\\\"button-glavni-100\\\">Zatvori</button>\\n  </div>\\n</mat-dialog-content>\"","module.exports = \"th {\\n  text-align: center; }\\n\\ntd {\\n  text-align: center; }\\n\\n.pomeri-dole {\\n  margin-top: 20px; }\\n\\nh3 {\\n  color: #273747;\\n  text-align: center;\\n  display: inline; }\\n\\n.header {\\n  height: 3em;\\n  text-align: center; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Roba, Fakutra, FakturaDetalji } from 'src/app/e-shop/model/dto';\nimport { RobaPromena } from 'src/app/e-shop/model/porudzbenica';\n\n@Component({\n  selector: 'app-neuspesno-porucivanje-modal',\n  templateUrl: './neuspesno-porucivanje-modal.component.html',\n  styleUrls: ['./neuspesno-porucivanje-modal.component.scss']\n})\nexport class NeuspesnoPorucivanjeModalComponent implements OnInit {\n  public fakturaModal: Fakutra;\n  public robaModal: Roba[];\n  public robaPromena: RobaPromena[] = [];\n  \n  displayedColumns: string[] = ['katBr', 'trazeno', 'raspolozivo'];\n  dataSource = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<NeuspesnoPorucivanjeModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data) {}\n\n  ngOnInit() {\n    this.fakturaModal = this.data.faktura;\n    this.robaModal = this.data.roba;\n    this.popuniPromene();\n  }\n\n  popuniPromene() {\n    this.robaModal.forEach((roba: Roba) => {\n      this.fakturaModal.detalji.forEach((detalji: FakturaDetalji) => {\n        if (detalji.robaId === roba.robaid) {\n          const robaPromena = new RobaPromena();\n          robaPromena.katbr = roba.katbr;\n          robaPromena.opis = roba.naziv;\n          robaPromena.rapolozivaKolicina = roba.stanje;\n          robaPromena.trazenaKolicina = detalji.kolicina;\n          this.robaPromena.push(robaPromena);\n        }\n      });\n    });\n    this.dataSource = this.robaPromena;\n    console.log('Neuspesno porucivanje: ' + JSON.stringify(this.robaPromena));\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<mat-dialog-content>\\n  <section *ngIf=\\\"!ucitavanje\\\">\\n    <div class=\\\"header\\\">\\n      <h1>Pošalji poruku</h1>\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form role=\\\"form\\\" [formGroup]=\\\"porukaForm\\\">\\n      <div class=\\\"forma-poruke\\\">\\n        <table cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput formControlName=\\\"ime\\\" placeholder=\\\"Ime\\\">\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput formControlName=\\\"prezime\\\" placeholder=\\\"Prezime\\\">\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <table cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput formControlName=\\\"firma\\\" placeholder=\\\"Ima firme\\\">\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput type=\\\"tel\\\" formControlName=\\\"telefon\\\" placeholder=\\\"Broj telefona\\\">\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <div>\\n          <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n            <input matInput type=\\\"email\\\" formControlName=\\\"posta\\\" placeholder=\\\"Pošta\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"porukaSubmited && p.posta.errors\\\">\\n            <div *ngIf=\\\"p.posta.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Pošta je obavezna</p>\\n            </div>\\n            <div *ngIf=\\\"p.posta.errors.email\\\">\\n              <p class=\\\"upozorenje\\\">Pošta nije validna</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div>\\n          <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n            <textarea matInput formControlName=\\\"poruka\\\" rows=\\\"8\\\" placeholder=\\\"Poruka\\\"></textarea>\\n          </mat-form-field>\\n          <div *ngIf=\\\"porukaSubmited && p.poruka.errors\\\">\\n            <div *ngIf=\\\"p.poruka.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Poruka je obavezna</p>\\n            </div>\\n            <div *ngIf=\\\"p.poruka.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Poruka mora imate minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n        </div>\\n        <button mat-flat-button class=\\\"sirina-polja-unosa\\\" (click)=\\\"posaljiPoruku()\\\" color=\\\"primary\\\">Pošalji</button>\\n      </div>\\n    </form>\\n  </section>\\n</mat-dialog-content>\\n<section *ngIf=\\\"ucitavanje\\\">\\n  <div class=\\\"d-flex justify-content-center margin-bottom--10 margin-top--10\\\">\\n    <mat-spinner></mat-spinner>\\n  </div>\\n</section>\"","module.exports = \"h1 {\\n  display: inline;\\n  font-size: 1.5em;\\n  color: #345cac; }\\n\\n.sirina-polja-unosa {\\n  width: 350px !important; }\\n\\n.header {\\n  height: 3em;\\n  padding: 3%;\\n  text-align: center; }\\n\\n@media only screen and (max-device-width: 1025px) {\\n  .sirina-polja-unosa {\\n    width: 250px !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Poruka } from 'src/app/e-commerce/model/dto';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { EmailService } from 'src/app/shared/service/email.service';\nimport { MatDialogRef } from '@angular/material';\nimport { NotifikacijaService } from '../../service/notifikacija.service';\nimport { MatSnackBarKlase } from '../../model/konstante';\n\n@Component({\n  selector: 'app-poruka-modal',\n  templateUrl: './poruka-modal.component.html',\n  styleUrls: ['./poruka-modal.component.scss']\n})\nexport class PorukaModalComponent implements OnInit {\n  public porukaForm: FormGroup;\n  public porukaSubmited = false;\n\n  private alive = true;\n  public ucitavanje = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<PorukaModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailServis: EmailService,\n    private notifikacijaServis: NotifikacijaService\n  ) { }\n\n  ngOnInit() {\n    this.inicijalizujForme();\n  }\n\n  inicijalizujForme() {\n    this.porukaForm = this.formBuilder.group({\n      ime: [''],\n      prezime: [''],\n      firma: [''],\n      telefon: [''],\n      posta: ['', [Validators.required, Validators.email]],\n      poruka: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n  posaljiPoruku() {\n    this.porukaSubmited = true;\n    if (this.porukaForm.invalid) {\n      return;\n    }\n    const poruka = this.popuniPoruku();\n    this.ucitavanje = true;\n    this.emailServis.posaljiPoruku(poruka)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => throwError(error)),\n        finalize(() => this.ucitavanje = false)\n      ).subscribe(res => {\n        console.log('Poruka uspesno poslat');\n        this.porukaForm.reset();\n        this.porukaSubmited = false;\n        this.notifikacijaServis.notify('Poruka je uspešno poslata', MatSnackBarKlase.Zelena);\n        this.dialogRef.close();\n      }, error => {\n        console.log('Error pri slanju poruke', error);\n        this.notifikacijaServis.notify('Došlo je do greške, poruka nije poslata', MatSnackBarKlase.Crvena);\n        this.dialogRef.close();\n      });\n  }\n\n  popuniPoruku(): Poruka {\n    const poruka = new Poruka();\n    poruka.ime = this.p.ime.value;\n    poruka.prezime = this.p.prezime.value;\n    poruka.firma = this.p.firma.value;\n    poruka.telefon = this.p.telefon.value;\n    poruka.posta = this.p.posta.value;\n    poruka.poruka = this.p.poruka.value;\n    return poruka;\n  }\n  // convenience getter for easy access to form fields\n  get p() { return this.porukaForm.controls; }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<mat-dialog-content>\\n  <main>\\n    <div class=\\\"modal-naslov\\\">\\n      <h1 class=\\\"h1-modal-naslov\\\">Registracija</h1>\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n      <mat-step>\\n        <ng-template matStepLabel>Vrsta</ng-template>\\n        <mat-radio-group class=\\\"radio-group\\\" [(ngModel)]=\\\"vrstaRegistracije\\\">\\n          <mat-radio-button color=\\\"primary\\\" *ngFor=\\\"let registracija of registracije\\\" [value]=\\\"registracija\\\">\\n            {{registracija}}\\n          </mat-radio-button>\\n        </mat-radio-group>\\n        <div>\\n          <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"odrediFormu()\\\" matStepperNext>Dalje</button>\\n        </div>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"odredjenaForma\\\">\\n        <ng-template matStepLabel>Forma</ng-template>\\n        <form role=\\\"form\\\" [formGroup]=\\\"privatnoLiceForm\\\" *ngIf=\\\"vrstaRegistracije == registracije[0]\\\">\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #imeIPrezime formControlName=\\\"imeIPrezime\\\" matInput placeholder=\\\"Ime i prezime\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && privatno.imeIPrezime.errors\\\">\\n            <div *ngIf=\\\"privatno.imeIPrezime.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Ime i prezime je obavezno</p>\\n            </div>\\n            <div *ngIf=\\\"privatno.imeIPrezime.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Ime i prezime mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #grad formControlName=\\\"grad\\\" matInput placeholder=\\\"Grad\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && privatno.grad.errors\\\">\\n            <div *ngIf=\\\"privatno.grad.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\n            </div>\\n            <div *ngIf=\\\"privatno.grad.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Grad mora imati minimalno 2 karaktera</p>\\n            </div>\\n          </div>\\n\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #adresa formControlName=\\\"adresa\\\" matInput placeholder=\\\"Adresa\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && privatno.adresa.errors\\\">\\n            <div *ngIf=\\\"privatno.adresa.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Adresa je obavezna</p>\\n            </div>\\n            <div *ngIf=\\\"privatno.adresa.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Adresa mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"Email\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && privatno.email.errors\\\">\\n            <div *ngIf=\\\"privatno.email.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Email je obavezan</p>\\n            </div>\\n            <div *ngIf=\\\"privatno.email.errors.email\\\">\\n              <p class=\\\"upozorenje\\\">Email nije validan</p>\\n            </div>\\n          </div>\\n\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #kontaktTelefon formControlName=\\\"kontaktTelefon\\\" matInput type=\\\"tel\\\" placeholder=\\\"Broj telefona\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && privatno.kontaktTelefon.errors\\\">\\n            <div *ngIf=\\\"privatno.kontaktTelefon.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Broj telefona je obavezan</p>\\n            </div>\\n            <div *ngIf=\\\"privatno.kontaktTelefon.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Broj telefona mora imati vise od 5 karakera</p>\\n            </div>\\n          </div>\\n\\n        </form>\\n        <form role=\\\"form\\\" [formGroup]=\\\"parvnoLiceForm\\\" *ngIf=\\\"vrstaRegistracije == registracije[1]\\\">\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #grad formControlName=\\\"nazivFirme\\\" matInput placeholder=\\\"Naziv firme\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && pravno.nazivFirme.errors\\\">\\n            <div *ngIf=\\\"pravno.nazivFirme.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Naziv firme je obavezan</p>\\n            </div>\\n            <div *ngIf=\\\"pravno.nazivFirme.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Ime i prezime mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #pib formControlName=\\\"pib\\\" matInput placeholder=\\\"Pib\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && pravno.pib.errors\\\">\\n            <div *ngIf=\\\"pravno.pib.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Pib je obavezan</p>\\n            </div>\\n            <div *ngIf=\\\"pravno.pib.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Pib mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #grad formControlName=\\\"grad\\\" matInput placeholder=\\\"Grad\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && pravno.grad.errors\\\">\\n            <div *ngIf=\\\"pravno.grad.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Naziv grada je obavezan</p>\\n            </div>\\n            <div *ngIf=\\\"pravno.grad.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Grad mora imati minimalno 2 karaktera</p>\\n            </div>\\n          </div>\\n\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #adresa formControlName=\\\"adresa\\\" matInput placeholder=\\\"Adresa\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && pravno.adresa.errors\\\">\\n            <div *ngIf=\\\"pravno.adresa.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Adresa je obavezna</p>\\n            </div>\\n            <div *ngIf=\\\"pravno.adresa.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">Adresa mora imati minimalno 3 karaktera</p>\\n            </div>\\n          </div>\\n\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"Email\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && pravno.email.errors\\\">\\n            <div *ngIf=\\\"pravno.email.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Email je obavezan</p>\\n            </div>\\n            <div *ngIf=\\\"pravno.email.errors.email\\\">\\n              <p class=\\\"upozorenje\\\">Email nije validan</p>\\n            </div>\\n          </div>\\n          <mat-form-field class=\\\"puna-duzina\\\">\\n            <input #kontaktTelefon formControlName=\\\"kontaktTelefon\\\" matInput type=\\\"tel\\\" placeholder=\\\"Broj telefona\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"formaSubmited && pravno.kontaktTelefon.errors\\\">\\n            <div *ngIf=\\\"pravno.kontaktTelefon.errors.required\\\">\\n              <p class=\\\"upozorenje\\\">Telefon je obavezan</p>\\n            </div>\\n            <div *ngIf=\\\"pravno.kontaktTelefon.errors.minlength\\\">\\n              <p class=\\\"upozorenje\\\">>Telefon mora imati minimalno 5 karaktera</p>\\n            </div>\\n          </div>\\n        </form>\\n        <div>\\n          <button mat-button matStepperPrevious>Nazad</button>\\n          <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"registracijaKorisnika()\\\" matStepperNext>Registruj\\n            se</button>\\n        </div>\\n      </mat-step>\\n      <mat-step>\\n        <ng-template matStepLabel>Uspešno</ng-template>\\n        <h3>Registracija je uspešno poslata</h3>\\n        <p> U narednih 24h vaš zahtev će biti obradjen i dobićete mail sa detaljima vašeg naloga.</p>\\n        <div>\\n          <button mat-button class=\\\"boja-glavna-100\\\" (click)=\\\"zatvoriDialog()\\\">Zatvori</button>\\n        </div>\\n      </mat-step>\\n    </mat-horizontal-stepper>\\n  </main>\\n</mat-dialog-content>\"","module.exports = \"h3 {\\n  font-size: 1.2em;\\n  font-weight: bold; }\\n\\n.radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.puna-duzina {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { Registracija } from 'src/app/e-shop/model/dto';\nimport { EmailService } from 'src/app/shared/service/email.service';\n\n@Component({\n  selector: 'app-registracija-modal',\n  templateUrl: './registracija-modal.component.html',\n  styleUrls: ['./registracija-modal.component.scss']\n})\nexport class RegistracijaModalComponent implements OnInit {\n\n  registracije: string[] = ['Fizičko lice', 'Pravno lice'];\n  public vrstaRegistracije: string;\n\n  // forme\n  public privatnoLiceForm: FormGroup;\n  public parvnoLiceForm: FormGroup;\n  public odredjenaForma: FormGroup;\n  public formaSubmited = false;\n\n  private registracija: Registracija = new Registracija();\n\n  private alive = true;\n  public ucitavanje = false;\n  constructor(\n    public dialogRef: MatDialogRef<RegistracijaModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailService: EmailService) { }\n\n  ngOnInit() {\n    this.vrstaRegistracije = this.registracije[0];\n    this.inicijalizujSveRegistracioneForme();\n  }\n\n  inicijalizujSveRegistracioneForme() {\n    this.privatnoLiceForm = this.formBuilder.group({\n      imeIPrezime: ['', [Validators.required, Validators.minLength(3)]],\n      grad: ['', [Validators.required, Validators.minLength(2)]],\n      adresa: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      kontaktTelefon: ['', [Validators.required, Validators.minLength(5)]]\n    });\n    this.parvnoLiceForm = this.formBuilder.group({\n      nazivFirme: ['', [Validators.required, Validators.minLength(3)]],\n      pib: ['', [Validators.required, Validators.minLength(3)]],\n      grad: ['', [Validators.required, Validators.minLength(2)]],\n      adresa: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      kontaktTelefon: ['', [Validators.required, Validators.minLength(5)]]\n    });\n    this.odredjenaForma = this.parvnoLiceForm;\n  }\n\n  registracijaKorisnika() {\n    this.formaSubmited = true;\n    if (this.vrstaRegistracije === this.registracije[0]) {\n      if (this.privatnoLiceForm.invalid) {\n        return;\n      } else {\n        this.registracija = new Registracija();\n        this.popuniRegistracijuZaPrivatnaLica();\n      }\n    } else {\n      if (this.parvnoLiceForm.invalid) {\n        return;\n      } else {\n        this.registracija = new Registracija();\n        this.popuniRegistracijuZaPravnaLica();\n      }\n    }\n    this.emailService.posaljiMailZaRegistraciju(this.registracija).pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => throwError(error)),\n      finalize(() => this.ucitavanje = false)\n    ).subscribe(res => {\n      console.log('Mail uspesno poslat');\n    }, error => {\n      console.log('Error pri slanju registracionog maila', error);\n    });\n  }\n\n  public odrediFormu() {\n    if (this.vrstaRegistracije === this.registracije[0]) {\n      this.odredjenaForma = this.privatnoLiceForm;\n    } else {\n      this.odredjenaForma = this.parvnoLiceForm;\n    }\n  }\n\n  private popuniRegistracijuZaPrivatnaLica() {\n    this.registracija.imeIPrezime = this.privatno.imeIPrezime.value;\n    this.registracija.grad = this.privatno.grad.value;\n    this.registracija.adresa = this.privatno.adresa.value;\n    this.registracija.email = this.privatno.email.value;\n    this.registracija.kontaktTelefon = this.privatno.kontaktTelefon.value;\n    this.registracija.daLiJePravnoLice = false;\n  }\n\n  private popuniRegistracijuZaPravnaLica() {\n    this.registracija.nazivFirme = this.pravno.nazivFirme.value;\n    this.registracija.pib = this.pravno.pib.value;\n    this.registracija.grad = this.pravno.grad.value;\n    this.registracija.adresa = this.pravno.adresa.value;\n    this.registracija.email = this.pravno.email.value;\n    this.registracija.kontaktTelefon = this.pravno.kontaktTelefon.value;\n    this.registracija.daLiJePravnoLice = true;\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n  // convenience getter for easy access to form fields\n  get privatno() { return this.privatnoLiceForm.controls; }\n  get pravno() { return this.parvnoLiceForm.controls; }\n\n}\n","module.exports = \"<mat-dialog-content *ngIf=\\\"!ucitavanje\\\">\\n  <section *ngIf=\\\"!porukaJePoslata\\\">\\n    <div class=\\\"header\\\">\\n      <h1>Pošalji upit</h1>\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriUpitDialog()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form role=\\\"form\\\" [formGroup]=\\\"upitForm\\\">\\n      <div class=\\\"forma-poruke\\\">\\n        <table cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput formControlName=\\\"email_telefon\\\" placeholder=\\\"Vaš email ili broj telefona\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"upitSubmited && u.email_telefon.errors\\\">\\n                <div *ngIf=\\\"u.email_telefon.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Email ili telefon je obavezan</p>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput formControlName=\\\"marka_model\\\" placeholder=\\\"Marka i model automobila - (Fiat Punto)\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"upitSubmited && u.marka_model.errors\\\">\\n                <div *ngIf=\\\"u.marka_model.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Marka и model automobila je obavezan</p>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput formControlName=\\\"godiste\\\" placeholder=\\\"Godište\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"upitSubmited && u.godiste.errors\\\">\\n                <div *ngIf=\\\"u.godiste.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Godište automobila je obavezana</p>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput formControlName=\\\"kubikaza\\\" placeholder=\\\"Kubikaža\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"upitSubmited && u.kubikaza.errors\\\">\\n                <div *ngIf=\\\"u.kubikaza.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Kubikaža automobila je obavezana</p>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <input matInput formControlName=\\\"kilovati\\\" placeholder=\\\"Kilovati\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"upitSubmited && u.kilovati.errors\\\">\\n                <div *ngIf=\\\"u.kilovati.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Broj kilovata automobila je obavezan</p>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <mat-select placeholder=\\\"Izaberite vrstu goriva\\\" formControlName=\\\"gorivo\\\" name=\\\"gorivo\\\" multiple>\\n                  <mat-option *ngFor=\\\"let gor of gorivo\\\" [value]=\\\"gor\\\">\\n                    {{gor}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"upitSubmited && u.gorivo.errors\\\">\\n                <div *ngIf=\\\"u.gorivo.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Vrsta goriva je obavezna</p>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <mat-select placeholder=\\\"Izaberite vrstu pogona automobila\\\" formControlName=\\\"pogon\\\" name=\\\"pogon\\\"\\n                  multiple>\\n                  <mat-option *ngFor=\\\"let pogon of pogoni\\\" [value]=\\\"pogon\\\">\\n                    {{pogon}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"upitSubmited && u.pogon.errors\\\">\\n                <div *ngIf=\\\"u.pogon.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Vrsta pogona automobila je obavezna</p>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <mat-select placeholder=\\\"Izaberite šta vas interesuje\\\" formControlName=\\\"interesuje_me\\\" name=\\\"gorivo\\\"\\n                  multiple>\\n                  <mat-option *ngFor=\\\"let ponuda of ponude\\\" [value]=\\\"ponuda\\\">\\n                    {{ponuda}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"upitSubmited && u.interesuje_me.errors\\\">\\n                <div *ngIf=\\\"u.interesuje_me.errors.required\\\">\\n                  <p class=\\\"upozorenje\\\">Morate izabrati bar jednu opciju</p>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr *ngIf=\\\"daLiJeObelezenoDrugo()\\\">\\n            <td>\\n              <mat-form-field class=\\\"sirina-polja-unosa\\\">\\n                <textarea matInput class=\\\"visina-textarea\\\" formControlName=\\\"drugo\\\"\\n                  placeholder=\\\"Interesuje me...\\\"></textarea>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <button mat-flat-button class=\\\"sirina-polja-unosa\\\" (click)=\\\"posaljiUpit()\\\" color=\\\"primary\\\">Pošalji</button>\\n      </div>\\n    </form>\\n  </section>\\n  <section *ngIf=\\\"porukaJePoslata\\\">\\n    <p>Ukoro ćemo obraditi vaš upit i odgovoriti vam u najkraćem mogućem roku. Hvala na poverenju.</p>\\n    <div class=\\\"text-center\\\">\\n      <button mat-flat-button class=\\\"zatvori-button\\\"color=\\\"primary\\\" (click)=\\\"zatvoriUpitDialog()\\\">Zatvori</button>\\n    </div>\\n  </section>\\n</mat-dialog-content>\\n<section *ngIf=\\\"ucitavanje\\\">\\n  <div class=\\\"d-flex justify-content-center margin-bottom--10 margin-top--10\\\">\\n    <mat-spinner></mat-spinner>\\n  </div>\\n</section>\"","module.exports = \"h1 {\\n  display: inline;\\n  font-size: 1.5em;\\n  color: #345cac; }\\n\\n.sirina-polja-unosa {\\n  width: 350px !important; }\\n\\n.header {\\n  height: 3em;\\n  padding: 3%;\\n  text-align: center; }\\n\\n.visina-textarea {\\n  height: 150px; }\\n\\n.mat-dialog-content {\\n  max-height: 90vh; }\\n\\n.zatvori-button {\\n  margin-top: 15px; }\\n\\n@media only screen and (max-device-width: 1025px) {\\n  .sirina-polja-unosa {\\n    width: 250px !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Upit } from 'src/app/e-commerce/model/dto';\nimport { Validators, FormBuilder, FormGroup, RequiredValidator } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material';\nimport { EmailService } from 'src/app/shared/service/email.service';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { NotifikacijaService } from '../../service/notifikacija.service';\nimport { MatSnackBarKlase } from '../../model/konstante';\n\n@Component({\n  selector: 'app-upit-modal',\n  templateUrl: './upit-modal.component.html',\n  styleUrls: ['./upit-modal.component.scss']\n})\nexport class UpitModalComponent implements OnInit {\n\n  public upitForm: FormGroup;\n  public upitSubmited = false;\n  public porukaJePoslata = false;\n\n  private alive = true;\n  public ucitavanje = false;\n  selectedCar: string;\n\n  selektovanoGorivo: string;\n  pogoni = [\n    '2WD',\n    '4WD'];\n  gorivo = [\n    'Benzin', 'Dizel', 'Benzin+Gas(TNG)',\n    'Metan CNG', 'Električni pogon', 'Električni pogon', 'Hibridni pogon'];\n  ponude = [\n    'Mali servis', 'Veliki servis', 'Prednje kočnice',\n    'Zadnje kočnice', 'Set kvačila', 'Zamajac', 'Drugo'];\n\n  constructor(\n    public dialogRef: MatDialogRef<UpitModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailServis: EmailService,\n    private notifikacijaServis: NotifikacijaService\n  ) { }\n\n  ngOnInit() {\n    this.inicijalizujForme();\n  }\n\n  inicijalizujForme() {\n    this.upitForm = this.formBuilder.group({\n      marka_model: ['', [Validators.required]],\n      godiste: ['', [Validators.required]],\n      kubikaza: ['', [Validators.required]],\n      kilovati: ['', [Validators.required]],\n      gorivo: ['', [Validators.required]],\n      pogon: ['', [Validators.required]],\n      interesuje_me: ['', [Validators.required]],\n      email_telefon: ['', [Validators.required]],\n      drugo: ['']\n    });\n  }\n  posaljiUpit() {\n    this.upitSubmited = true;\n    if (this.upitForm.invalid) {\n      return;\n    }\n    const upit = this.popuniUpit();\n    this.ucitavanje = true;\n    this.emailServis.posaljiUpit(upit)\n      .pipe(\n        takeWhile(() => this.alive),\n        catchError((error: Response) => throwError(error)),\n        finalize(() => this.ucitavanje = false)\n      ).subscribe(res => {\n        console.log('Poruka uspesno poslat');\n        this.upitForm.reset();\n        this.upitSubmited = false;\n        this.porukaJePoslata = true;\n        this.notifikacijaServis.notify('Upit je uspešno poslat', MatSnackBarKlase.Plava);\n\n      }, error => {\n        console.log('Error pri slanju poruke', error);\n        this.notifikacijaServis.notify('Došlo je do greške, upit nije poslat', MatSnackBarKlase.Crvena);\n        this.dialogRef.close();\n      });\n  }\n\n  popuniUpit(): Upit {\n    const upit = new Upit();\n    upit.emailTelefon = this.u.email_telefon.value;\n    upit.markaModel = this.u.marka_model.value;\n    upit.godiste = this.u.godiste.value;\n    upit.kubikaza = this.u.kubikaza.value;\n    upit.kilovati = this.u.kilovati.value;\n    upit.gorivo = this.u.gorivo.value;\n    upit.pogon = this.u.pogon.value;\n    upit.interesujeMe = this.u.interesuje_me.value;\n    if (this.u.drugo.value) {\n      upit.drugo = this.u.drugo.value;\n    }\n    return upit;\n  }\n  // convenience getter for easy access to form fields\n  get u() { return this.upitForm.controls; }\n\n  daLiJeObelezenoDrugo() {\n    const interesujeMe = this.u.interesuje_me.value;\n    return interesujeMe.includes('Drugo');\n  }\n\n  zatvoriUpitDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main class=\\\"text-center\\\">\\r\\n      <p>Porudžbina je uspešno poslata i uskoro će biti obradjena.</p>\\r\\n    <div class=\\\"d-flex flex-row justify-content-center\\\">\\r\\n      <button mat-raised-button class=\\\"button-glavni-100 pomeri\\\" (click)=\\\"zatvori()\\\">Zatvori</button>\\r\\n      </div>\\r\\n  </main>\\r\\n</div>\"","module.exports = \".pomeri {\\n  margin-top: 15px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport * as _ from 'lodash';\r\nimport { Fakutra } from 'src/app/e-shop/model/dto';\r\n\r\n@Component({\r\n  selector: 'app-uspesno-porucivanje-modal',\r\n  templateUrl: './uspesno-porucivanje-modal.component.html',\r\n  styleUrls: ['./uspesno-porucivanje-modal.component.scss']\r\n})\r\nexport class UspesnoPorucivanjeModalComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UspesnoPorucivanjeModalComponent>) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  zatvori() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-dialog-content *ngIf=\\\"!ucitavanje\\\">\\n  <main>\\n    <div class=\\\"modal-naslov\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"zatvoriDialog()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <section *ngIf=\\\"!mailUspesnoPoslat\\\">\\n      <h1>Pronađi svoj Automaterijal nalog</h1>\\n      <p>Unesi svoju e-mail ili korisničko ime</p>\\n      <form role=\\\"form\\\" [formGroup]=\\\"zaboravljeSifraForma\\\">\\n        <mat-form-field class=\\\"email-input\\\">\\n          <input #email formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"E-mail ili korisničko ime\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"formaSubmited && zaboravljeno.email.errors\\\">\\n          <div *ngIf=\\\"zaboravljeno.email.errors.required\\\">\\n            <p class=\\\"upozorenje\\\">Podatak je obavezan</p>\\n          </div>\\n          <div *ngIf=\\\"zaboravljeno.email.errors.minlength\\\">\\n            <p class=\\\"upozorenje\\\">Podatak mora da ima vise od 3 karaktera</p>\\n          </div>\\n        </div>\\n        <div class=\\\"pomeri-dole\\\">\\n          <button mat-raised-button (click)=\\\"posaljiMailZaboravljenaSifra()\\\" class=\\\"button-glavni-100\\\">Potvrdi</button>\\n        </div>\\n      </form>\\n    </section>\\n    <section *ngIf=\\\"mailUspesnoPoslat\\\">\\n      <h1>Mail uspešno poslat</h1>\\n      <p>Uskoro će vam stići mail sa linkom gde možete promeniti vašu šifru.</p>\\n      <div class=\\\"pomeri-dole\\\">\\n        <button mat-raised-button (click)=\\\"zatvoriDialog()\\\" class=\\\"button-glavni-100\\\">Zatvori</button>\\n      </div>\\n    </section>\\n  </main>\\n</mat-dialog-content>\\n<section *ngIf=\\\"ucitavanje\\\">\\n  <div class=\\\"d-flex justify-content-center margin-bottom--10 margin-top--10\\\">\\n    <mat-spinner></mat-spinner>\\n  </div>\\n</section>\"","module.exports = \"h1 {\\n  color: #273747 !important;\\n  font-size: 1.1em;\\n  font-weight: bold;\\n  margin-bottom: 25px; }\\n\\np {\\n  margin-bottom: 0.5em; }\\n\\n.email-input {\\n  width: 80%; }\\n\\n.pomeri-dole {\\n  margin-top: 0.5em; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { takeWhile, finalize, catchError } from 'rxjs/operators';\nimport { throwError, EMPTY } from 'rxjs';\nimport { EmailService } from 'src/app/shared/service/email.service';\nimport { ResetSifre } from 'src/app/e-shop/model/dto';\nimport { NotifikacijaService } from '../../service/notifikacija.service';\nimport { MatSnackBarKlase } from '../../model/konstante';\n\n@Component({\n  selector: 'app-zaboravljena-sifra-modal',\n  templateUrl: './zaboravljena-sifra-modal.component.html',\n  styleUrls: ['./zaboravljena-sifra-modal.component.scss']\n})\nexport class ZaboravljenaSifraModalComponent implements OnInit {\n\n  public resetSifre: ResetSifre = new ResetSifre();\n  public mailUspesnoPoslat = false;\n\n  // forme\n  public zaboravljeSifraForma: FormGroup;\n  public formaSubmited = false;\n\n  private alive = true;\n  public ucitavanje = false;\n  constructor(\n    public dialogRef: MatDialogRef<ZaboravljenaSifraModalComponent>,\n    private formBuilder: FormBuilder,\n    private emailService: EmailService,\n    private notifikacijaServis: NotifikacijaService) { }\n\n  ngOnInit() {\n    this.inicijalizujSveRegistracioneForme();\n  }\n  inicijalizujSveRegistracioneForme() {\n    this.zaboravljeSifraForma = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.minLength(3)]],\n    });\n  }\n\n  posaljiMailZaboravljenaSifra() {\n    this.formaSubmited = true;\n    if (this.zaboravljeSifraForma.invalid) {\n      return;\n    }\n    this.ucitavanje = true;\n    this.resetSifre.email = this.zaboravljeno.email.value;\n    this.emailService\n    .posaljiMailZaResetovanjeSifre(this.resetSifre)\n    .pipe(\n      takeWhile(() => this.alive),\n      catchError((error: Response) => {\n        if (error.status === 400 || error.status === 404) {\n          const snackPoruka = 'E-mail ili korisničko ime ne postoji u našoj bazi.';\n          this.notifikacijaServis.notify(snackPoruka, MatSnackBarKlase.Crvena);\n          return EMPTY;\n        }\n        throwError(error);\n      }),\n      finalize(() => this.ucitavanje = false)\n    ).subscribe(res => {\n      this.mailUspesnoPoslat = true;\n      console.log('Mail za resetovanje sifre uspesno poslat');\n    }, error => {\n      console.log('Error pri slanju za resetovanje sifre', error);\n    });\n  }\n\n  zatvoriDialog() {\n    this.dialogRef.close();\n  }\n\n  // convenience getter for easy access to form fields\n  get zaboravljeno() { return this.zaboravljeSifraForma.controls; }\n}\n","export class MatSnackBarKlase {\r\n    public static Zelena = 'green-snackbar';\r\n    public static Plava = 'primary-snackbar';\r\n    public static Crvena = 'red-snackbar';\r\n }","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { mesec } from '../../e-shop/model/konstante';\r\n\r\n@Pipe({ name: 'datum' })\r\nexport class DatePipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        if (!value) {\r\n            value = 'N/A';\r\n        } else {\r\n            const datumNVremeiz = value.split('T');\r\n            const datumNiz = datumNVremeiz[0].split('-');\r\n            datumNiz[1] = mesec['mesec_' + datumNiz[1]];\r\n            value = datumNiz[0] + '-' +  datumNiz[1] + '-' + datumNiz[2] + ' ' + datumNVremeiz[1].substr(0, 5);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'empty' })\r\nexport class EmptyPipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        if (!value) {\r\n            value = 'N/A';\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { transformator } from '../../e-shop/model/konstante';\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n    transform(value: string): string {\r\n        return transformator[value];\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Registracija, ResetSifre} from '../../e-shop/model/dto';\nimport { timeoutWith, catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\nimport { Poruka, Upit } from 'src/app/e-commerce/model/dto';\n\nconst DOMAIN_URL = '/api/email';\nconst REGISTRACIJA_URL = '/registracija';\nconst RESETOVANJE_SIFRE_URL = '/zaboravljena-sifra';\nconst PORUKA_URL = '/poruka';\nconst UPIT_URL = '/upit';\n\nconst TIMEOUT = 15000;\nconst TIMEOUT_ERROR = 'Timeout error!';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  constructor(\n    private http: HttpClient) { }\n\n  public posaljiMailZaRegistraciju(registracija: Registracija): Observable<any> {\n    const fullUrl = DOMAIN_URL + REGISTRACIJA_URL;\n   return this.http.post(fullUrl, registracija)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n\n  public posaljiMailZaResetovanjeSifre(email: ResetSifre): Observable<any> {\n    const fullUrl = DOMAIN_URL + RESETOVANJE_SIFRE_URL;\n   return this.http.post(fullUrl, email)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n\n  public posaljiPoruku(poruka: Poruka): Observable<any> {\n    const fullUrl = DOMAIN_URL + PORUKA_URL;\n   return this.http.post(fullUrl, poruka)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n\n  public posaljiUpit(upit: Upit): Observable<any> {\n    const fullUrl = DOMAIN_URL + UPIT_URL;\n   return this.http.post(fullUrl, upit)\n    .pipe(\n      timeoutWith(TIMEOUT, throwError(TIMEOUT_ERROR)),\n      catchError((error: any) => throwError(error))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBarRef, MatSnackBar } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifikacijaService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  public notify(poruka: string, klasaBoja: string) {\n    this.snackBar.open(poruka, '', {\n      duration: 2000,\n      panelClass: [klasaBoja]\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}